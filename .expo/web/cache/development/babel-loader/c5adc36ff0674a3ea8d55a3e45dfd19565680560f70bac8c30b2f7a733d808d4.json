{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Background(_ref) {\n  var style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  return _jsx(Animated.View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [{\n      flex: 1,\n      backgroundColor: colors.background\n    }, style]\n  }));\n}","map":{"version":3,"names":["useTheme","React","Animated","jsx","_jsx","Background","_ref","style","rest","_objectWithoutProperties","_excluded","_useTheme","colors","View","_objectSpread","flex","backgroundColor","background"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\elements\\src\\Background.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  type StyleProp,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\n\ntype Props = Omit<ViewProps, 'style'> & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nexport function Background({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      {...rest}\n      style={[{ flex: 1, backgroundColor: colors.background }, style]}\n    />\n  );\n}\n"],"mappings":";;;;;;;AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAMR,SAAAC,GAAA,IAAAC,IAAA;AAOtB,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAKC,IAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EACrC,IAAAC,SAAA,GAAmBX,QAAQ,CAAC,CAAC;IAArBY,MAAA,GAAAD,SAAA,CAAAC,MAAA;EAER,OACER,IAAA,CAACF,QAAQ,CAACW,IAAI,EAAAC,aAAA,CAAAA,aAAA,KACRN,IAAI;IACRD,KAAK,EAAE,CAAC;MAAEQ,IAAI,EAAE,CAAC;MAAEC,eAAe,EAAEJ,MAAM,CAACK;IAAW,CAAC,EAAEV,KAAK;EAAA,EAC/D,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}