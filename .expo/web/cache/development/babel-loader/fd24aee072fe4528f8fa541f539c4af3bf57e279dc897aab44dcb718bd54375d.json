{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DashboardScreenWithTheme from \"../screens/admin/DashboardScreen\";\nimport SeriesScreen from \"../screens/admin/SeriesScreen\";\nimport SeriesAddScreen from \"../screens/admin/SeriesAddScreen\";\nimport SeriesEditScreen from \"../screens/admin/SeriesEditScreen\";\nimport EpisodesScreen from \"../screens/admin/EpisodesScreen\";\nimport EpisodeAddScreen from \"../screens/admin/EpisodeAddScreen\";\nimport EpisodeEditScreen from \"../screens/admin/EpisodeEditScreen\";\nimport UsersScreenWithTheme from \"../screens/admin/UsersScreen\";\nimport AnalyticsScreenWithTheme from \"../screens/admin/AnalyticsScreen\";\nimport PublishingScreenWithTheme from \"../screens/admin/PublishingScreen\";\nimport SettingsScreenWithTheme from \"../screens/admin/SettingsScreen\";\nimport NotificationsScreenWithTheme from \"../screens/admin/NotificationsScreen\";\nimport NotificationAddScreen from \"../screens/admin/NotificationAddScreen\";\nimport ContentManagementScreenWithTheme from \"../screens/admin/ContentManagementScreen\";\nimport SeriesManagementScreenWithTheme from \"../screens/admin/SeriesManagementScreen\";\nimport EpisodeManagementScreenWithTheme from \"../screens/admin/EpisodeManagementScreen\";\nimport PaymentManagementScreen from \"../screens/admin/PaymentManagementScreen\";\nimport PaymentMethodsScreen from \"../screens/admin/PaymentMethodsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AdminNavigator = function AdminNavigator() {\n  console.log('AdminNavigator rendering, with UsersScreen:', !!UsersScreenWithTheme, 'AnalyticsScreen:', !!AnalyticsScreenWithTheme, 'PublishingScreen:', !!PublishingScreenWithTheme, 'SettingsScreen:', !!SettingsScreenWithTheme);\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreenWithTheme,\n      options: {\n        title: 'Dashboard'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ContentManagement\",\n      component: ContentManagementScreenWithTheme,\n      options: {\n        title: 'Content Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Series\",\n      component: SeriesManagementScreenWithTheme,\n      options: {\n        title: 'Series Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesAdd\",\n      component: SeriesAddScreen,\n      options: {\n        title: 'Add Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesEdit\",\n      component: SeriesEditScreen,\n      options: {\n        title: 'Edit Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Episodes\",\n      component: EpisodeManagementScreenWithTheme,\n      options: {\n        title: 'Episodes Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeAdd\",\n      component: EpisodeAddScreen,\n      options: {\n        title: 'Add Episode'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeEdit\",\n      component: EpisodeEditScreen,\n      options: {\n        title: 'Edit Episode'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Users\",\n      component: UsersScreenWithTheme,\n      options: {\n        title: 'User Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Analytics\",\n      component: AnalyticsScreenWithTheme,\n      options: {\n        title: 'Analytics'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Publishing\",\n      component: PublishingScreenWithTheme,\n      options: {\n        title: 'Publishing'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreenWithTheme,\n      options: {\n        title: 'Notifications'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotificationAdd\",\n      component: NotificationAddScreen,\n      options: {\n        title: 'New Notification'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Payments\",\n      component: PaymentManagementScreen,\n      options: {\n        title: 'Payment Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"PaymentMethods\",\n      component: PaymentMethodsScreen,\n      options: {\n        title: 'Payment Methods'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreenWithTheme,\n      options: {\n        title: 'Settings'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#1e1e1e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#bbbbbb',\n    textAlign: 'center'\n  }\n});\nexport default AdminNavigator;","map":{"version":3,"names":["React","createStackNavigator","View","Text","StyleSheet","DashboardScreenWithTheme","SeriesScreen","SeriesAddScreen","SeriesEditScreen","EpisodesScreen","EpisodeAddScreen","EpisodeEditScreen","UsersScreenWithTheme","AnalyticsScreenWithTheme","PublishingScreenWithTheme","SettingsScreenWithTheme","NotificationsScreenWithTheme","NotificationAddScreen","ContentManagementScreenWithTheme","SeriesManagementScreenWithTheme","EpisodeManagementScreenWithTheme","PaymentManagementScreen","PaymentMethodsScreen","jsx","_jsx","jsxs","_jsxs","Stack","AdminNavigator","console","log","Navigator","screenOptions","headerShown","children","Screen","name","component","options","title","styles","create","container","flex","padding","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","color","marginBottom","subtitle","textAlign"],"sources":["E:/bigshow/src/navigation/AdminNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { View, Text, StyleSheet } from 'react-native';\nimport DashboardScreenWithTheme from '../screens/admin/DashboardScreen';\nimport SeriesScreen from '../screens/admin/SeriesScreen';\nimport SeriesAddScreen from '../screens/admin/SeriesAddScreen';\nimport SeriesEditScreen from '../screens/admin/SeriesEditScreen';\nimport EpisodesScreen from '../screens/admin/EpisodesScreen';\nimport EpisodeAddScreen from '../screens/admin/EpisodeAddScreen';\nimport EpisodeEditScreen from '../screens/admin/EpisodeEditScreen';\nimport UsersScreenWithTheme from '../screens/admin/UsersScreen';\nimport AnalyticsScreenWithTheme from '../screens/admin/AnalyticsScreen';\nimport PublishingScreenWithTheme from '../screens/admin/PublishingScreen';\nimport SettingsScreenWithTheme from '../screens/admin/SettingsScreen';\nimport NotificationsScreenWithTheme from '../screens/admin/NotificationsScreen';\nimport NotificationAddScreen from '../screens/admin/NotificationAddScreen';\nimport ContentManagementScreenWithTheme from '../screens/admin/ContentManagementScreen';\nimport SeriesManagementScreenWithTheme from '../screens/admin/SeriesManagementScreen';\nimport EpisodeManagementScreenWithTheme from '../screens/admin/EpisodeManagementScreen';\nimport PaymentManagementScreen from '../screens/admin/PaymentManagementScreen';\nimport PaymentMethodsScreen from '../screens/admin/PaymentMethodsScreen';\n\nconst Stack = createStackNavigator();\n\nconst AdminNavigator = () => {\n  console.log('AdminNavigator rendering, with UsersScreen:', !!UsersScreenWithTheme, 'AnalyticsScreen:', !!AnalyticsScreenWithTheme, 'PublishingScreen:', !!PublishingScreenWithTheme, 'SettingsScreen:', !!SettingsScreenWithTheme);\n  \n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Dashboard\" component={DashboardScreenWithTheme} options={{ title: 'Dashboard' }} />\n      <Stack.Screen name=\"ContentManagement\" component={ContentManagementScreenWithTheme} options={{ title: 'Content Management' }} />\n      <Stack.Screen name=\"Series\" component={SeriesManagementScreenWithTheme} options={{ title: 'Series Management' }} />\n      <Stack.Screen name=\"SeriesAdd\" component={SeriesAddScreen} options={{ title: 'Add Series' }} />\n      <Stack.Screen name=\"SeriesEdit\" component={SeriesEditScreen} options={{ title: 'Edit Series' }} />\n      <Stack.Screen name=\"Episodes\" component={EpisodeManagementScreenWithTheme} options={{ title: 'Episodes Management' }} />\n      <Stack.Screen name=\"EpisodeAdd\" component={EpisodeAddScreen} options={{ title: 'Add Episode' }} />\n      <Stack.Screen name=\"EpisodeEdit\" component={EpisodeEditScreen} options={{ title: 'Edit Episode' }} />\n      <Stack.Screen \n        name=\"Users\" \n        component={UsersScreenWithTheme} \n        options={{ title: 'User Management' }}\n      />\n      <Stack.Screen \n        name=\"Analytics\" \n        component={AnalyticsScreenWithTheme} \n        options={{ title: 'Analytics' }}\n      />\n      <Stack.Screen \n        name=\"Publishing\" \n        component={PublishingScreenWithTheme} \n        options={{ title: 'Publishing' }}\n      />\n      <Stack.Screen \n        name=\"Notifications\" \n        component={NotificationsScreenWithTheme} \n        options={{ title: 'Notifications' }}\n      />\n      <Stack.Screen\n        name=\"NotificationAdd\"\n        component={NotificationAddScreen}\n        options={{ title: 'New Notification' }}\n      />\n      <Stack.Screen\n        name=\"Payments\"\n        component={PaymentManagementScreen}\n        options={{ title: 'Payment Management' }}\n      />\n      <Stack.Screen\n        name=\"PaymentMethods\"\n        component={PaymentMethodsScreen}\n        options={{ title: 'Payment Methods' }}\n      />\n      <Stack.Screen \n        name=\"Settings\" \n        component={SettingsScreenWithTheme} \n        options={{ title: 'Settings' }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#1e1e1e',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#bbbbbb',\n    textAlign: 'center',\n  }\n});\n\nexport default AdminNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}