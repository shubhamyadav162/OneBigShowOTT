{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport theme from \"../../theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var handleResetPassword = function handleResetPassword() {\n    if (!email) {\n      Alert.alert('Error', 'Please enter your email address');\n      return;\n    }\n    Alert.alert('Email Sent', `Password reset instructions have been sent to ${email}`, [{\n      text: 'OK',\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      }\n    }]);\n  };\n  return _jsxs(LinearGradient, {\n    colors: ['#000000', '#121212'],\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"transparent\",\n      translucent: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.backButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"arrow-back\",\n        size: 24,\n        color: \"#FFFFFF\"\n      })\n    }), _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Forgot Password\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Enter your email address and we'll send you instructions to reset your password\"\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Email\"\n          }), _jsxs(View, {\n            style: styles.inputWrapper,\n            children: [_jsx(Ionicons, {\n              name: \"mail-outline\",\n              size: 20,\n              color: \"#999999\",\n              style: styles.inputIcon\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Enter your email\",\n              placeholderTextColor: \"#999999\",\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\",\n              value: email,\n              onChangeText: setEmail\n            })]\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleResetPassword,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Reset Password\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.backToLogin,\n          onPress: function onPress() {\n            return navigation.navigate('Login');\n          },\n          children: _jsx(Text, {\n            style: styles.backToLoginText,\n            children: \"Back to Login\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24\n  },\n  backButton: {\n    marginTop: 36\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: -80\n  },\n  header: {\n    marginBottom: 40\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 12\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#BBBBBB'\n  },\n  formContainer: {\n    width: '100%'\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 14,\n    color: '#FFFFFF',\n    marginBottom: 8\n  },\n  inputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    borderWidth: 1,\n    borderColor: 'rgba(255,255,255,0.2)',\n    borderRadius: theme.borderRadius.large,\n    height: 54,\n    paddingHorizontal: theme.spacing.medium\n  },\n  inputIcon: {\n    marginRight: 12\n  },\n  input: {\n    flex: 1,\n    color: '#FFFFFF',\n    fontSize: 16,\n    height: '100%'\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.borderRadius.large,\n    height: 54,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  backToLogin: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  backToLoginText: {\n    color: '#FFFFFF',\n    fontSize: 16\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","TouchableOpacity","Alert","StatusBar","LinearGradient","Ionicons","theme","jsx","_jsx","jsxs","_jsxs","ForgotPasswordScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","handleResetPassword","alert","text","onPress","navigate","colors","style","styles","container","children","barStyle","backgroundColor","translucent","backButton","goBack","name","size","color","contentContainer","header","title","subtitle","formContainer","inputContainer","label","inputWrapper","inputIcon","input","placeholder","placeholderTextColor","keyboardType","autoCapitalize","value","onChangeText","button","buttonText","backToLogin","backToLoginText","create","flex","padding","marginTop","justifyContent","marginBottom","fontSize","fontWeight","width","flexDirection","alignItems","borderWidth","borderColor","borderRadius","large","height","paddingHorizontal","spacing","medium","marginRight","primary"],"sources":["E:/bigshow/src/screens/auth/ForgotPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity, Alert } from 'react-native';\r\nimport { StatusBar } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport theme from '../../theme';\r\n\r\nconst ForgotPasswordScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleResetPassword = () => {\r\n    if (!email) {\r\n      Alert.alert('Error', 'Please enter your email address');\r\n      return;\r\n    }\r\n\r\n    // TODO: Implement actual password reset logic\r\n    Alert.alert(\r\n      'Email Sent',\r\n      `Password reset instructions have been sent to ${email}`,\r\n      [{ text: 'OK', onPress: () => navigation.navigate('Login') }]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#000000', '#121212']}\r\n      style={styles.container}\r\n    >\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"transparent\" translucent />\r\n      <TouchableOpacity\r\n        style={styles.backButton}\r\n        onPress={() => navigation.goBack()}\r\n      >\r\n        <Ionicons name=\"arrow-back\" size={24} color=\"#FFFFFF\" />\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Forgot Password</Text>\r\n          <Text style={styles.subtitle}>\r\n            Enter your email address and we'll send you instructions to reset your password\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.formContainer}>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Email</Text>\r\n            <View style={styles.inputWrapper}>\r\n              <Ionicons name=\"mail-outline\" size={20} color=\"#999999\" style={styles.inputIcon} />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Enter your email\"\r\n                placeholderTextColor=\"#999999\"\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={handleResetPassword}\r\n          >\r\n            <Text style={styles.buttonText}>Reset Password</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={styles.backToLogin}\r\n            onPress={() => navigation.navigate('Login')}\r\n          >\r\n            <Text style={styles.backToLoginText}>Back to Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n  backButton: {\r\n    marginTop: 36,\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    marginTop: -80,\r\n  },\r\n  header: {\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#FFFFFF',\r\n    marginBottom: 12,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#BBBBBB',\r\n  },\r\n  formContainer: {\r\n    width: '100%',\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    color: '#FFFFFF',\r\n    marginBottom: 8,\r\n  },\r\n  inputWrapper: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(255,255,255,0.1)',\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(255,255,255,0.2)',\r\n    borderRadius: theme.borderRadius.large,\r\n    height: 54,\r\n    paddingHorizontal: theme.spacing.medium,\r\n  },\r\n  inputIcon: {\r\n    marginRight: 12,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    height: '100%',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.colors.primary,\r\n    borderRadius: theme.borderRadius.large,\r\n    height: 54,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  backToLogin: {\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  backToLoginText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ForgotPasswordScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}