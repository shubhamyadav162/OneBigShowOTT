{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"open\", \"onPress\", \"style\", \"accessibilityLabel\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Overlay(_ref) {\n  var open = _ref.open,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Close drawer' : _ref$accessibilityLab,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [styles.overlay, {\n      opacity: open ? 1 : 0,\n      pointerEvents: open ? 'auto' : 'none'\n    }, style],\n    \"aria-hidden\": !open,\n    children: _jsx(Pressable, {\n      onPress: onPress,\n      style: [styles.pressable, {\n        pointerEvents: open ? 'auto' : 'none'\n      }],\n      role: \"button\",\n      \"aria-label\": accessibilityLabel\n    })\n  }));\n}\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent',\n    transition: 'opacity 0.3s'\n  }),\n  pressable: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["jsx","_jsx","Overlay","_ref","open","onPress","style","_ref$accessibilityLab","accessibilityLabel","rest","_objectWithoutProperties","_excluded","View","_objectSpread","styles","overlay","opacity","pointerEvents","children","Pressable","pressable","role","StyleSheet","create","absoluteFillObject","backgroundColor","WebkitTapHighlightColor","transition","flex"],"sources":["E:\\bigshow\\node_modules\\react-native-drawer-layout\\src\\views\\Overlay.tsx"],"sourcesContent":["import { Pressable, StyleSheet, View } from 'react-native';\n\nimport type { OverlayProps } from '../types';\n\nexport function Overlay({\n  open,\n  onPress,\n  style,\n  accessibilityLabel = 'Close drawer',\n  ...rest\n}: OverlayProps) {\n  return (\n    <View\n      {...rest}\n      style={[\n        styles.overlay,\n        { opacity: open ? 1 : 0, pointerEvents: open ? 'auto' : 'none' },\n        style,\n      ]}\n      aria-hidden={!open}\n    >\n      <Pressable\n        onPress={onPress}\n        style={[styles.pressable, { pointerEvents: open ? 'auto' : 'none' }]}\n        role=\"button\"\n        aria-label={accessibilityLabel}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    // @ts-expect-error: WebkitTapHighlightColor is web only\n    WebkitTapHighlightColor: 'transparent',\n    transition: 'opacity 0.3s',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;;;;AAA2D,SAAAA,GAAA,IAAAC,IAAA;AAI3D,OAAO,SAASC,OAAOA,CAAAC,IAAA,EAMN;EAAA,IALfC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAAC,qBAAA,GAAAJ,IAAA,CACLK,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,cAAc,GAAAA,qBAAA;IAChCE,IAAA,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EAEH,OACEV,IAAA,CAACW,IAAI,EAAAC,aAAA,CAAAA,aAAA,KACCJ,IAAI;IACRH,KAAK,EAAE,CACLQ,MAAM,CAACC,OAAO,EACd;MAAEC,OAAO,EAAEZ,IAAI,GAAG,CAAC,GAAG,CAAC;MAAEa,aAAa,EAAEb,IAAI,GAAG,MAAM,GAAG;IAAO,CAAC,EAChEE,KAAK,CACL;IACF,eAAa,CAACF,IAAK;IAAAc,QAAA,EAEnBjB,IAAA,CAACkB,SAAS;MACRd,OAAO,EAAEA,OAAQ;MACjBC,KAAK,EAAE,CAACQ,MAAM,CAACM,SAAS,EAAE;QAAEH,aAAa,EAAEb,IAAI,GAAG,MAAM,GAAG;MAAO,CAAC,CAAE;MACrEiB,IAAI,EAAC,QAAQ;MACb,cAAYb;IAAmB,CAChC;EAAA,EACG,CAAC;AAEX;AAEA,IAAMM,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,OAAO,EAAAF,aAAA,CAAAA,aAAA,KACFS,UAAU,CAACE,kBAAkB;IAChCC,eAAe,EAAE,oBAAoB;IAIrCC,uBAAuB,EAAE,aAAa;IACtCC,UAAU,EAAE;EAAA,EACb;EACDP,SAAS,EAAE;IACTQ,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}