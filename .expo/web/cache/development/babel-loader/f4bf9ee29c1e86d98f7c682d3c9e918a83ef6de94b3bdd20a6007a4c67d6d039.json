{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useLatestCallback from 'use-latest-callback';\nimport { DrawerProgressContext } from \"../utils/DrawerProgressContext.js\";\nimport { getDrawerWidth } from \"../utils/getDrawerWidth.js\";\nimport { useFakeSharedValue } from \"../utils/useFakeSharedValue.js\";\nimport { Overlay } from \"./Overlay\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Drawer(_ref) {\n  var customLayout = _ref.layout,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'ltr' : _ref$direction,\n    _ref$drawerPosition = _ref.drawerPosition,\n    drawerPosition = _ref$drawerPosition === void 0 ? direction === 'rtl' ? 'right' : 'left' : _ref$drawerPosition,\n    drawerStyle = _ref.drawerStyle,\n    _ref$drawerType = _ref.drawerType,\n    drawerType = _ref$drawerType === void 0 ? 'front' : _ref$drawerType,\n    onClose = _ref.onClose,\n    onTransitionStart = _ref.onTransitionStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    open = _ref.open,\n    overlayStyle = _ref.overlayStyle,\n    overlayAccessibilityLabel = _ref.overlayAccessibilityLabel,\n    renderDrawerContent = _ref.renderDrawerContent,\n    children = _ref.children,\n    style = _ref.style;\n  var windowDimensions = useWindowDimensions();\n  var layout = customLayout != null ? customLayout : windowDimensions;\n  var drawerWidth = getDrawerWidth({\n    layout: layout,\n    drawerStyle: drawerStyle\n  });\n  var progress = useFakeSharedValue(open ? 1 : 0);\n  React.useEffect(function () {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n  var drawerRef = React.useRef(null);\n  var onTransitionStartLatest = useLatestCallback(function () {\n    onTransitionStart == null ? void 0 : onTransitionStart(open === false);\n  });\n  var onTransitionEndLatest = useLatestCallback(function () {\n    onTransitionEnd == null ? void 0 : onTransitionEnd(open === false);\n  });\n  React.useEffect(function () {\n    var element = drawerRef.current;\n    element == null ? void 0 : element.addEventListener('transitionstart', onTransitionStartLatest);\n    element == null ? void 0 : element.addEventListener('transitionend', onTransitionEndLatest);\n    return function () {\n      element == null ? void 0 : element.removeEventListener('transitionstart', onTransitionStartLatest);\n      element == null ? void 0 : element.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n  var isOpen = drawerType === 'permanent' ? true : open;\n  var isRight = drawerPosition === 'right';\n  var translateX = 0;\n  if (open || drawerType === 'back') {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? drawerWidth - layout.width : 0;\n    } else {\n      translateX = drawerPosition === 'left' ? 0 : layout.width - drawerWidth;\n    }\n  } else {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? -layout.width : drawerWidth;\n    } else {\n      translateX = drawerPosition === 'left' ? -drawerWidth : layout.width;\n    }\n  }\n  var drawerAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: [{\n      translateX: translateX\n    }]\n  } : null;\n  var contentAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: [{\n      translateX: open ? drawerType === 'front' ? 0 : drawerWidth * (drawerPosition === 'left' ? 1 : -1) : 0\n    }]\n  } : null;\n  return _jsx(View, {\n    style: [styles.container, style],\n    children: _jsx(DrawerProgressContext.Provider, {\n      value: progress,\n      children: _jsxs(View, {\n        style: [styles.main, {\n          flexDirection: drawerType === 'permanent' ? isRight && direction === 'ltr' || !isRight && direction === 'rtl' ? 'row' : 'row-reverse' : 'row'\n        }],\n        children: [_jsxs(View, {\n          style: [styles.content, contentAnimatedStyle],\n          children: [_jsx(View, {\n            \"aria-hidden\": isOpen && drawerType !== 'permanent',\n            style: styles.content,\n            children: children\n          }), drawerType !== 'permanent' ? _jsx(Overlay, {\n            open: open,\n            progress: progress,\n            onPress: function onPress() {\n              return onClose();\n            },\n            style: overlayStyle,\n            accessibilityLabel: overlayAccessibilityLabel\n          }) : null]\n        }), _jsx(View, {\n          ref: drawerRef,\n          style: [styles.drawer, {\n            width: drawerWidth,\n            position: drawerType === 'permanent' ? 'relative' : 'absolute',\n            zIndex: drawerType === 'back' ? -1 : 0\n          }, drawerAnimatedStyle, drawerStyle],\n          children: renderDrawerContent()\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white'\n  },\n  content: {\n    flex: 1\n  },\n  main: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","useWindowDimensions","View","useLatestCallback","DrawerProgressContext","getDrawerWidth","useFakeSharedValue","Overlay","jsx","_jsx","jsxs","_jsxs","Drawer","_ref","customLayout","layout","_ref$direction","direction","_ref$drawerPosition","drawerPosition","drawerStyle","_ref$drawerType","drawerType","onClose","onTransitionStart","onTransitionEnd","open","overlayStyle","overlayAccessibilityLabel","renderDrawerContent","children","style","windowDimensions","drawerWidth","progress","useEffect","value","drawerRef","useRef","onTransitionStartLatest","onTransitionEndLatest","element","current","addEventListener","removeEventListener","isOpen","isRight","translateX","width","drawerAnimatedStyle","transition","transform","contentAnimatedStyle","styles","container","Provider","main","flexDirection","content","onPress","accessibilityLabel","ref","drawer","position","zIndex","create","flex","top","bottom","maxWidth","backgroundColor"],"sources":["E:\\bigshow\\node_modules\\react-native-drawer-layout\\src\\views\\Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { DrawerProps } from '../types';\nimport { DrawerProgressContext } from '../utils/DrawerProgressContext';\nimport { getDrawerWidth } from '../utils/getDrawerWidth';\nimport { useFakeSharedValue } from '../utils/useFakeSharedValue';\nimport { Overlay } from './Overlay';\n\nexport function Drawer({\n  layout: customLayout,\n  direction = 'ltr',\n  drawerPosition = direction === 'rtl' ? 'right' : 'left',\n  drawerStyle,\n  drawerType = 'front',\n  onClose,\n  onTransitionStart,\n  onTransitionEnd,\n  open,\n  overlayStyle,\n  overlayAccessibilityLabel,\n  renderDrawerContent,\n  children,\n  style,\n}: DrawerProps) {\n  const windowDimensions = useWindowDimensions();\n\n  const layout = customLayout ?? windowDimensions;\n  const drawerWidth = getDrawerWidth({ layout, drawerStyle });\n\n  const progress = useFakeSharedValue(open ? 1 : 0);\n\n  React.useEffect(() => {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n\n  const drawerRef = React.useRef<View>(null);\n\n  const onTransitionStartLatest = useLatestCallback(() => {\n    onTransitionStart?.(open === false);\n  });\n\n  const onTransitionEndLatest = useLatestCallback(() => {\n    onTransitionEnd?.(open === false);\n  });\n\n  React.useEffect(() => {\n    const element = drawerRef.current as HTMLDivElement | null;\n\n    element?.addEventListener('transitionstart', onTransitionStartLatest);\n    element?.addEventListener('transitionend', onTransitionEndLatest);\n\n    return () => {\n      element?.removeEventListener('transitionstart', onTransitionStartLatest);\n      element?.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  let translateX = 0;\n\n  // The drawer stays in place at open position when `drawerType` is `back`\n  if (open || drawerType === 'back') {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? drawerWidth - layout.width : 0;\n    } else {\n      translateX = drawerPosition === 'left' ? 0 : layout.width - drawerWidth;\n    }\n  } else {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? -layout.width : drawerWidth;\n    } else {\n      translateX = drawerPosition === 'left' ? -drawerWidth : layout.width;\n    }\n  }\n\n  const drawerAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: [{ translateX }],\n        }\n      : null;\n\n  const contentAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: [\n            {\n              translateX: open\n                ? // The screen content stays in place when `drawerType` is `front`\n                  drawerType === 'front'\n                  ? 0\n                  : drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n                : 0,\n            },\n          ],\n        }\n      : null;\n\n  return (\n    <View style={[styles.container, style]}>\n      <DrawerProgressContext.Provider value={progress}>\n        <View\n          style={[\n            styles.main,\n            {\n              flexDirection:\n                drawerType === 'permanent'\n                  ? (isRight && direction === 'ltr') ||\n                    (!isRight && direction === 'rtl')\n                    ? 'row'\n                    : 'row-reverse'\n                  : 'row',\n            },\n          ]}\n        >\n          <View style={[styles.content, contentAnimatedStyle]}>\n            <View\n              aria-hidden={isOpen && drawerType !== 'permanent'}\n              style={styles.content}\n            >\n              {children}\n            </View>\n            {drawerType !== 'permanent' ? (\n              <Overlay\n                open={open}\n                progress={progress}\n                onPress={() => onClose()}\n                style={overlayStyle}\n                accessibilityLabel={overlayAccessibilityLabel}\n              />\n            ) : null}\n          </View>\n          <View\n            ref={drawerRef}\n            style={[\n              styles.drawer,\n              {\n                width: drawerWidth,\n                position: drawerType === 'permanent' ? 'relative' : 'absolute',\n                zIndex: drawerType === 'back' ? -1 : 0,\n              },\n              drawerAnimatedStyle,\n              drawerStyle,\n            ]}\n          >\n            {renderDrawerContent()}\n          </View>\n        </View>\n      </DrawerProgressContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white',\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}