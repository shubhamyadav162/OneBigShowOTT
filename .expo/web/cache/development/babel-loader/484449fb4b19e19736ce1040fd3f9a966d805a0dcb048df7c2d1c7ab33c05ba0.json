{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input, Button, Divider, Text } from 'react-native-elements';\nimport theme from \"../../theme\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationSettingsScreen = function NotificationSettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      apiKey: '',\n      senderId: '',\n      serverKey: '',\n      defaultIcon: '',\n      defaultTTL: '',\n      defaultPriority: 'normal'\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    settings = _useState2[0],\n    setSettings = _useState2[1];\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    currentTheme = _useTheme.theme;\n  var update = function update(key, value) {\n    return setSettings(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, value));\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: currentTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: \"settings\"\n      }), _jsxs(ScrollView, {\n        contentContainerStyle: styles.contentContainer,\n        children: [_jsx(Text, {\n          h4: true,\n          style: styles.title,\n          children: \"Global Notification Settings\"\n        }), _jsx(Input, {\n          label: \"Firebase API Key\",\n          value: settings.apiKey,\n          onChangeText: function onChangeText(t) {\n            return update('apiKey', t);\n          }\n        }), _jsx(Input, {\n          label: \"Sender ID\",\n          value: settings.senderId,\n          onChangeText: function onChangeText(t) {\n            return update('senderId', t);\n          }\n        }), _jsx(Input, {\n          label: \"Server Key\",\n          value: settings.serverKey,\n          onChangeText: function onChangeText(t) {\n            return update('serverKey', t);\n          }\n        }), _jsx(Divider, {\n          style: styles.divider\n        }), _jsx(Input, {\n          label: \"Default Icon URL\",\n          value: settings.defaultIcon,\n          onChangeText: function onChangeText(t) {\n            return update('defaultIcon', t);\n          }\n        }), _jsx(Input, {\n          label: \"Default TTL (seconds)\",\n          value: settings.defaultTTL,\n          onChangeText: function onChangeText(t) {\n            return update('defaultTTL', t);\n          },\n          keyboardType: \"numeric\"\n        }), _jsx(Input, {\n          label: \"Default Priority\",\n          value: settings.defaultPriority,\n          onChangeText: function onChangeText(t) {\n            return update('defaultPriority', t);\n          }\n        }), _jsx(Button, {\n          title: \"Save Settings\",\n          buttonStyle: styles.saveButton,\n          onPress: function onPress() {}\n        })]\n      })]\n    })]\n  });\n};\nvar NotificationSettingsScreenWithTheme = function NotificationSettingsScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(NotificationSettingsScreen, _objectSpread({}, props))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%'\n  },\n  body: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    padding: theme.spacing.large\n  },\n  title: {\n    marginBottom: theme.spacing.medium,\n    color: theme.colors.text\n  },\n  divider: {\n    marginVertical: theme.spacing.medium,\n    backgroundColor: theme.colors.border\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n    marginTop: theme.spacing.large\n  }\n});\nexport default NotificationSettingsScreenWithTheme;","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","Input","Button","Divider","Text","theme","Sidebar","HeaderBar","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","NotificationSettingsScreen","_ref","navigation","_useState","apiKey","senderId","serverKey","defaultIcon","defaultTTL","defaultPriority","_useState2","_slicedToArray","settings","setSettings","_useTheme","isDarkMode","toggleTheme","currentTheme","update","key","value","prev","_objectSpread","_defineProperty","style","styles","container","backgroundColor","colors","background","children","onToggleTheme","body","activeSection","contentContainerStyle","contentContainer","h4","title","label","onChangeText","t","divider","keyboardType","buttonStyle","saveButton","onPress","NotificationSettingsScreenWithTheme","props","create","flex","height","flexDirection","padding","spacing","large","marginBottom","medium","color","text","marginVertical","border","primary","marginTop"],"sources":["E:/bigshow/src/screens/admin/NotificationSettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Input, Button, Divider, Text } from 'react-native-elements';\r\nimport theme from '../../theme';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\n\r\nconst NotificationSettingsScreen = ({ navigation }) => {\r\n  const [settings, setSettings] = useState({\r\n    apiKey: '',\r\n    senderId: '',\r\n    serverKey: '',\r\n    defaultIcon: '',\r\n    defaultTTL: '',\r\n    defaultPriority: 'normal',\r\n  });\r\n  const { isDarkMode, toggleTheme, theme: currentTheme } = useTheme();\r\n\r\n  const update = (key, value) => setSettings(prev => ({ ...prev, [key]: value }));\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: currentTheme.colors.background }]}> \r\n      <HeaderBar onToggleTheme={toggleTheme} isDarkMode={isDarkMode} />\r\n      <View style={styles.body}>\r\n        <Sidebar navigation={navigation} activeSection=\"settings\" />\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n          <Text h4 style={styles.title}>Global Notification Settings</Text>\r\n          <Input label=\"Firebase API Key\" value={settings.apiKey} onChangeText={t => update('apiKey', t)} />\r\n          <Input label=\"Sender ID\" value={settings.senderId} onChangeText={t => update('senderId', t)} />\r\n          <Input label=\"Server Key\" value={settings.serverKey} onChangeText={t => update('serverKey', t)} />\r\n          <Divider style={styles.divider} />\r\n          <Input label=\"Default Icon URL\" value={settings.defaultIcon} onChangeText={t => update('defaultIcon', t)} />\r\n          <Input label=\"Default TTL (seconds)\" value={settings.defaultTTL} onChangeText={t => update('defaultTTL', t)} keyboardType=\"numeric\" />\r\n          <Input label=\"Default Priority\" value={settings.defaultPriority} onChangeText={t => update('defaultPriority', t)} />\r\n          <Button\r\n            title=\"Save Settings\"\r\n            buttonStyle={styles.saveButton}\r\n            onPress={() => {/* TODO: save settings */}}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst NotificationSettingsScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <NotificationSettingsScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, height: '100%' },\r\n  body: { flex: 1, flexDirection: 'row' },\r\n  contentContainer: { flex: 1, padding: theme.spacing.large },\r\n  title: { marginBottom: theme.spacing.medium, color: theme.colors.text },\r\n  divider: { marginVertical: theme.spacing.medium, backgroundColor: theme.colors.border },\r\n  saveButton: { backgroundColor: theme.colors.primary, marginTop: theme.spacing.large },\r\n});\r\n\r\nexport default NotificationSettingsScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}