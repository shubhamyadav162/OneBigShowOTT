{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Card, Button, Divider, Input } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport theme from \"../../theme\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingItem = function SettingItem(_ref) {\n  var icon = _ref.icon,\n    title = _ref.title,\n    description = _ref.description,\n    type = _ref.type,\n    value = _ref.value,\n    onValueChange = _ref.onValueChange,\n    options = _ref.options;\n  var renderControl = function renderControl() {\n    switch (type) {\n      case 'toggle':\n        return _jsx(Switch, {\n          value: value,\n          onValueChange: onValueChange,\n          trackColor: {\n            false: '#767577',\n            true: theme.colors.primary\n          },\n          thumbColor: value ? '#ffffff' : '#f4f3f4'\n        });\n      case 'select':\n        return _jsxs(View, {\n          style: styles.selectControl,\n          children: [_jsx(Text, {\n            style: styles.selectValue,\n            children: value\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: theme.colors.textSecondary\n          })]\n        });\n      case 'navigation':\n        return _jsx(Ionicons, {\n          name: \"chevron-forward\",\n          size: 20,\n          color: theme.colors.textSecondary\n        });\n      default:\n        return null;\n    }\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.settingItem,\n    onPress: type === 'navigation' ? onValueChange : undefined,\n    children: [_jsxs(View, {\n      style: styles.settingItemLeft,\n      children: [_jsx(View, {\n        style: styles.iconWrapper,\n        children: _jsx(Ionicons, {\n          name: icon,\n          size: 22,\n          color: theme.colors.primary\n        })\n      }), _jsxs(View, {\n        style: styles.settingItemContent,\n        children: [_jsx(Text, {\n          style: styles.settingTitle,\n          children: title\n        }), description && _jsx(Text, {\n          style: styles.settingDescription,\n          children: description\n        })]\n      })]\n    }), renderControl()]\n  });\n};\nvar SettingsGroup = function SettingsGroup(_ref2) {\n  var title = _ref2.title,\n    children = _ref2.children;\n  return _jsxs(View, {\n    style: styles.settingsGroup,\n    children: [_jsx(Text, {\n      style: styles.settingsGroupTitle,\n      children: title\n    }), _jsx(Card, {\n      containerStyle: styles.card,\n      children: children\n    })]\n  });\n};\nvar SettingsContent = function SettingsContent() {\n  var _useState = useState({\n      darkMode: true,\n      emailNotifications: true,\n      pushNotifications: false,\n      analytics: true,\n      language: 'English',\n      region: 'Global',\n      autoPlayVideos: true,\n      quality: 'Automatic',\n      subtitles: true\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    settings = _useState2[0],\n    setSettings = _useState2[1];\n  var updateSetting = function updateSetting(key, value) {\n    setSettings(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, value));\n    });\n  };\n  var handleNavigation = function handleNavigation(screen) {\n    console.log(`Navigate to: ${screen}`);\n  };\n  return _jsxs(ScrollView, {\n    style: styles.contentContainer,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Platform Settings\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Configure application settings and preferences\"\n    }), _jsxs(SettingsGroup, {\n      title: \"Appearance\",\n      children: [_jsx(SettingItem, {\n        icon: \"contrast-outline\",\n        title: \"Dark Mode\",\n        description: \"Enable dark theme for better viewing in low light\",\n        type: \"toggle\",\n        value: settings.darkMode,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('darkMode', value);\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"color-palette-outline\",\n        title: \"Theme\",\n        description: \"Customize the application's color scheme\",\n        type: \"navigation\",\n        onValueChange: function onValueChange() {\n          return handleNavigation('ThemeSettings');\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"language-outline\",\n        title: \"Language\",\n        description: \"Choose your preferred language\",\n        type: \"select\",\n        value: settings.language,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('language', value);\n        },\n        options: ['English', 'Spanish', 'French', 'German', 'Japanese']\n      })]\n    }), _jsxs(SettingsGroup, {\n      title: \"Notifications\",\n      children: [_jsx(SettingItem, {\n        icon: \"mail-outline\",\n        title: \"Email Notifications\",\n        description: \"Receive updates via email\",\n        type: \"toggle\",\n        value: settings.emailNotifications,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('emailNotifications', value);\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"notifications-outline\",\n        title: \"Push Notifications\",\n        description: \"Receive updates on your device\",\n        type: \"toggle\",\n        value: settings.pushNotifications,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('pushNotifications', value);\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"newspaper-outline\",\n        title: \"Notification Templates\",\n        description: \"Customize notification messages\",\n        type: \"navigation\",\n        onValueChange: function onValueChange() {\n          return handleNavigation('NotificationTemplates');\n        }\n      })]\n    }), _jsxs(SettingsGroup, {\n      title: \"Playback\",\n      children: [_jsx(SettingItem, {\n        icon: \"play-outline\",\n        title: \"Auto-Play Videos\",\n        description: \"Automatically play videos when browsing\",\n        type: \"toggle\",\n        value: settings.autoPlayVideos,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('autoPlayVideos', value);\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"speedometer-outline\",\n        title: \"Video Quality\",\n        description: \"Default quality for video playback\",\n        type: \"select\",\n        value: settings.quality,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('quality', value);\n        },\n        options: ['Low', 'Medium', 'High', 'Automatic']\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"text-outline\",\n        title: \"Subtitles\",\n        description: \"Show subtitles when available\",\n        type: \"toggle\",\n        value: settings.subtitles,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('subtitles', value);\n        }\n      })]\n    }), _jsxs(SettingsGroup, {\n      title: \"Advanced\",\n      children: [_jsx(SettingItem, {\n        icon: \"bar-chart-outline\",\n        title: \"Analytics\",\n        description: \"Help improve the platform by sharing usage data\",\n        type: \"toggle\",\n        value: settings.analytics,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('analytics', value);\n        }\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"globe-outline\",\n        title: \"Content Region\",\n        description: \"Set your content region preference\",\n        type: \"select\",\n        value: settings.region,\n        onValueChange: function onValueChange(value) {\n          return updateSetting('region', value);\n        },\n        options: ['Global', 'North America', 'Europe', 'Asia', 'Australia']\n      }), _jsx(Divider, {\n        style: styles.divider\n      }), _jsx(SettingItem, {\n        icon: \"trash-outline\",\n        title: \"Clear Cache\",\n        description: \"Free up space on your device\",\n        type: \"navigation\",\n        onValueChange: function onValueChange() {\n          return handleNavigation('ClearCache');\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Save Changes\",\n        buttonStyle: styles.saveButton,\n        icon: _jsx(Ionicons, {\n          name: \"save-outline\",\n          size: 20,\n          color: \"white\",\n          style: {\n            marginRight: 10\n          }\n        })\n      }), _jsx(Button, {\n        title: \"Reset to Defaults\",\n        type: \"outline\",\n        buttonStyle: styles.resetButton,\n        titleStyle: {\n          color: theme.colors.textSecondary\n        }\n      })]\n    })]\n  });\n};\nvar SettingsScreen = function SettingsScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var _useState3 = useState('settings'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeSection = _useState4[0],\n    setActiveSection = _useState4[1];\n  var _ref4 = useTheme ? useTheme() : {\n      isDarkMode: false,\n      toggleTheme: function toggleTheme() {},\n      theme: theme\n    },\n    isDarkMode = _ref4.isDarkMode,\n    toggleTheme = _ref4.toggleTheme,\n    currentTheme = _ref4.theme;\n  useEffect(function () {\n    console.log('SettingsScreen mounted');\n  }, []);\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: currentTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode,\n      notificationCount: 0,\n      onLogout: function onLogout() {},\n      onSettings: function onSettings() {}\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: activeSection,\n        onSectionChange: setActiveSection\n      }), _jsx(SettingsContent, {})]\n    })]\n  });\n};\nvar SettingsScreenWithTheme = function SettingsScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(SettingsScreen, _objectSpread({}, props))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%'\n  },\n  body: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    padding: theme.spacing.large\n  },\n  title: {\n    fontSize: theme.typography.fontSize.xxlarge,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small\n  },\n  subtitle: {\n    fontSize: theme.typography.fontSize.large,\n    color: theme.colors.textSecondary,\n    marginBottom: theme.spacing.large\n  },\n  settingsGroup: {\n    marginBottom: theme.spacing.large\n  },\n  settingsGroupTitle: {\n    fontSize: theme.typography.fontSize.large,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n    marginLeft: theme.spacing.small\n  },\n  card: {\n    padding: 0,\n    borderRadius: theme.borderRadius.medium,\n    backgroundColor: theme.colors.backgroundElevated,\n    borderColor: theme.colors.border,\n    overflow: 'hidden'\n  },\n  divider: {\n    backgroundColor: theme.colors.border,\n    marginVertical: 0\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing.medium\n  },\n  settingItemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  iconWrapper: {\n    width: 36,\n    height: 36,\n    borderRadius: 18,\n    backgroundColor: `${theme.colors.primary}22`,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: theme.spacing.medium\n  },\n  settingItemContent: {\n    flex: 1\n  },\n  settingTitle: {\n    fontSize: theme.typography.fontSize.medium,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text,\n    marginBottom: 4\n  },\n  settingDescription: {\n    fontSize: theme.typography.fontSize.small,\n    color: theme.colors.textSecondary\n  },\n  selectControl: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  selectValue: {\n    fontSize: theme.typography.fontSize.medium,\n    color: theme.colors.textSecondary,\n    marginRight: 5\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: theme.spacing.large\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: theme.spacing.large,\n    borderRadius: theme.borderRadius.small\n  },\n  resetButton: {\n    borderColor: theme.colors.border,\n    paddingHorizontal: theme.spacing.large,\n    borderRadius: theme.borderRadius.small\n  }\n});\nexport default SettingsScreenWithTheme;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Switch","Card","Button","Divider","Input","Ionicons","theme","ThemeProvider","useTheme","Sidebar","HeaderBar","jsx","_jsx","jsxs","_jsxs","SettingItem","_ref","icon","title","description","type","value","onValueChange","options","renderControl","trackColor","false","true","colors","primary","thumbColor","style","styles","selectControl","children","selectValue","name","size","color","textSecondary","settingItem","onPress","undefined","settingItemLeft","iconWrapper","settingItemContent","settingTitle","settingDescription","SettingsGroup","_ref2","settingsGroup","settingsGroupTitle","containerStyle","card","SettingsContent","_useState","darkMode","emailNotifications","pushNotifications","analytics","language","region","autoPlayVideos","quality","subtitles","_useState2","_slicedToArray","settings","setSettings","updateSetting","key","prev","_objectSpread","_defineProperty","handleNavigation","screen","console","log","contentContainer","subtitle","divider","buttonContainer","buttonStyle","saveButton","marginRight","resetButton","titleStyle","SettingsScreen","_ref3","navigation","_useState3","_useState4","activeSection","setActiveSection","_ref4","isDarkMode","toggleTheme","currentTheme","container","backgroundColor","background","onToggleTheme","notificationCount","onLogout","onSettings","body","onSectionChange","SettingsScreenWithTheme","props","create","flex","height","flexDirection","padding","spacing","large","fontSize","typography","xxlarge","fontWeight","bold","text","marginBottom","small","marginLeft","borderRadius","medium","backgroundElevated","borderColor","border","overflow","marginVertical","alignItems","justifyContent","width","paddingHorizontal"],"sources":["E:/bigshow/src/screens/admin/SettingsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Switch } from 'react-native';\r\nimport { Card, Button, Divider, Input } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport theme from '../../theme';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\n\r\nconst SettingItem = ({ icon, title, description, type, value, onValueChange, options }) => {\r\n  const renderControl = () => {\r\n    switch (type) {\r\n      case 'toggle':\r\n        return (\r\n          <Switch\r\n            value={value}\r\n            onValueChange={onValueChange}\r\n            trackColor={{ false: '#767577', true: theme.colors.primary }}\r\n            thumbColor={value ? '#ffffff' : '#f4f3f4'}\r\n          />\r\n        );\r\n      case 'select':\r\n        return (\r\n          <View style={styles.selectControl}>\r\n            <Text style={styles.selectValue}>{value}</Text>\r\n            <Ionicons name=\"chevron-down\" size={20} color={theme.colors.textSecondary} />\r\n          </View>\r\n        );\r\n      case 'navigation':\r\n        return (\r\n          <Ionicons name=\"chevron-forward\" size={20} color={theme.colors.textSecondary} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity \r\n      style={styles.settingItem}\r\n      onPress={type === 'navigation' ? onValueChange : undefined}\r\n    >\r\n      <View style={styles.settingItemLeft}>\r\n        <View style={styles.iconWrapper}>\r\n          <Ionicons name={icon} size={22} color={theme.colors.primary} />\r\n        </View>\r\n        <View style={styles.settingItemContent}>\r\n          <Text style={styles.settingTitle}>{title}</Text>\r\n          {description && <Text style={styles.settingDescription}>{description}</Text>}\r\n        </View>\r\n      </View>\r\n      {renderControl()}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst SettingsGroup = ({ title, children }) => (\r\n  <View style={styles.settingsGroup}>\r\n    <Text style={styles.settingsGroupTitle}>{title}</Text>\r\n    <Card containerStyle={styles.card}>\r\n      {children}\r\n    </Card>\r\n  </View>\r\n);\r\n\r\nconst SettingsContent = () => {\r\n  const [settings, setSettings] = useState({\r\n    darkMode: true,\r\n    emailNotifications: true,\r\n    pushNotifications: false,\r\n    analytics: true,\r\n    language: 'English',\r\n    region: 'Global',\r\n    autoPlayVideos: true,\r\n    quality: 'Automatic',\r\n    subtitles: true,\r\n  });\r\n\r\n  const updateSetting = (key, value) => {\r\n    setSettings(prev => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleNavigation = (screen) => {\r\n    console.log(`Navigate to: ${screen}`);\r\n    // In a real app, would navigate to detail screen\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.contentContainer}>\r\n      <Text style={styles.title}>Platform Settings</Text>\r\n      <Text style={styles.subtitle}>Configure application settings and preferences</Text>\r\n      \r\n      <SettingsGroup title=\"Appearance\">\r\n        <SettingItem\r\n          icon=\"contrast-outline\"\r\n          title=\"Dark Mode\"\r\n          description=\"Enable dark theme for better viewing in low light\"\r\n          type=\"toggle\"\r\n          value={settings.darkMode}\r\n          onValueChange={(value) => updateSetting('darkMode', value)}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"color-palette-outline\"\r\n          title=\"Theme\"\r\n          description=\"Customize the application's color scheme\"\r\n          type=\"navigation\"\r\n          onValueChange={() => handleNavigation('ThemeSettings')}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"language-outline\"\r\n          title=\"Language\"\r\n          description=\"Choose your preferred language\"\r\n          type=\"select\"\r\n          value={settings.language}\r\n          onValueChange={(value) => updateSetting('language', value)}\r\n          options={['English', 'Spanish', 'French', 'German', 'Japanese']}\r\n        />\r\n      </SettingsGroup>\r\n      \r\n      <SettingsGroup title=\"Notifications\">\r\n        <SettingItem\r\n          icon=\"mail-outline\"\r\n          title=\"Email Notifications\"\r\n          description=\"Receive updates via email\"\r\n          type=\"toggle\"\r\n          value={settings.emailNotifications}\r\n          onValueChange={(value) => updateSetting('emailNotifications', value)}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"notifications-outline\"\r\n          title=\"Push Notifications\"\r\n          description=\"Receive updates on your device\"\r\n          type=\"toggle\"\r\n          value={settings.pushNotifications}\r\n          onValueChange={(value) => updateSetting('pushNotifications', value)}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"newspaper-outline\"\r\n          title=\"Notification Templates\"\r\n          description=\"Customize notification messages\"\r\n          type=\"navigation\"\r\n          onValueChange={() => handleNavigation('NotificationTemplates')}\r\n        />\r\n      </SettingsGroup>\r\n      \r\n      <SettingsGroup title=\"Playback\">\r\n        <SettingItem\r\n          icon=\"play-outline\"\r\n          title=\"Auto-Play Videos\"\r\n          description=\"Automatically play videos when browsing\"\r\n          type=\"toggle\"\r\n          value={settings.autoPlayVideos}\r\n          onValueChange={(value) => updateSetting('autoPlayVideos', value)}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"speedometer-outline\"\r\n          title=\"Video Quality\"\r\n          description=\"Default quality for video playback\"\r\n          type=\"select\"\r\n          value={settings.quality}\r\n          onValueChange={(value) => updateSetting('quality', value)}\r\n          options={['Low', 'Medium', 'High', 'Automatic']}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"text-outline\"\r\n          title=\"Subtitles\"\r\n          description=\"Show subtitles when available\"\r\n          type=\"toggle\"\r\n          value={settings.subtitles}\r\n          onValueChange={(value) => updateSetting('subtitles', value)}\r\n        />\r\n      </SettingsGroup>\r\n      \r\n      <SettingsGroup title=\"Advanced\">\r\n        <SettingItem\r\n          icon=\"bar-chart-outline\"\r\n          title=\"Analytics\"\r\n          description=\"Help improve the platform by sharing usage data\"\r\n          type=\"toggle\"\r\n          value={settings.analytics}\r\n          onValueChange={(value) => updateSetting('analytics', value)}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"globe-outline\"\r\n          title=\"Content Region\"\r\n          description=\"Set your content region preference\"\r\n          type=\"select\"\r\n          value={settings.region}\r\n          onValueChange={(value) => updateSetting('region', value)}\r\n          options={['Global', 'North America', 'Europe', 'Asia', 'Australia']}\r\n        />\r\n        <Divider style={styles.divider} />\r\n        <SettingItem\r\n          icon=\"trash-outline\"\r\n          title=\"Clear Cache\"\r\n          description=\"Free up space on your device\"\r\n          type=\"navigation\"\r\n          onValueChange={() => handleNavigation('ClearCache')}\r\n        />\r\n      </SettingsGroup>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Save Changes\"\r\n          buttonStyle={styles.saveButton}\r\n          icon={<Ionicons name=\"save-outline\" size={20} color=\"white\" style={{ marginRight: 10 }} />}\r\n        />\r\n        <Button\r\n          title=\"Reset to Defaults\"\r\n          type=\"outline\"\r\n          buttonStyle={styles.resetButton}\r\n          titleStyle={{ color: theme.colors.textSecondary }}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst SettingsScreen = ({ navigation }) => {\r\n  const [activeSection, setActiveSection] = useState('settings');\r\n  const { isDarkMode, toggleTheme, theme: currentTheme } = useTheme ? useTheme() : { isDarkMode: false, toggleTheme: () => {}, theme: theme };\r\n  \r\n  useEffect(() => {\r\n    console.log('SettingsScreen mounted');\r\n  }, []);\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: currentTheme.colors.background }]}>\r\n      <HeaderBar\r\n        onToggleTheme={toggleTheme}\r\n        isDarkMode={isDarkMode}\r\n        notificationCount={0}\r\n        onLogout={() => {}}\r\n        onSettings={() => {}}\r\n      />\r\n      \r\n      <View style={styles.body}>\r\n        <Sidebar\r\n          navigation={navigation}\r\n          activeSection={activeSection}\r\n          onSectionChange={setActiveSection}\r\n        />\r\n        <SettingsContent />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Wrap with ThemeProvider to ensure theme context is available\r\nconst SettingsScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <SettingsScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    height: '100%',\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    padding: theme.spacing.large,\r\n  },\r\n  title: {\r\n    fontSize: theme.typography.fontSize.xxlarge,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n    color: theme.colors.text,\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n  subtitle: {\r\n    fontSize: theme.typography.fontSize.large,\r\n    color: theme.colors.textSecondary,\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  settingsGroup: {\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  settingsGroupTitle: {\r\n    fontSize: theme.typography.fontSize.large,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n    color: theme.colors.text,\r\n    marginBottom: theme.spacing.small,\r\n    marginLeft: theme.spacing.small,\r\n  },\r\n  card: {\r\n    padding: 0,\r\n    borderRadius: theme.borderRadius.medium,\r\n    backgroundColor: theme.colors.backgroundElevated,\r\n    borderColor: theme.colors.border,\r\n    overflow: 'hidden',\r\n  },\r\n  divider: {\r\n    backgroundColor: theme.colors.border,\r\n    marginVertical: 0,\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing.medium,\r\n  },\r\n  settingItemLeft: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n  },\r\n  iconWrapper: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    backgroundColor: `${theme.colors.primary}22`,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginRight: theme.spacing.medium,\r\n  },\r\n  settingItemContent: {\r\n    flex: 1,\r\n  },\r\n  settingTitle: {\r\n    fontSize: theme.typography.fontSize.medium,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n    color: theme.colors.text,\r\n    marginBottom: 4,\r\n  },\r\n  settingDescription: {\r\n    fontSize: theme.typography.fontSize.small,\r\n    color: theme.colors.textSecondary,\r\n  },\r\n  selectControl: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  selectValue: {\r\n    fontSize: theme.typography.fontSize.medium,\r\n    color: theme.colors.textSecondary,\r\n    marginRight: 5,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: theme.spacing.large,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: theme.colors.primary,\r\n    paddingHorizontal: theme.spacing.large,\r\n    borderRadius: theme.borderRadius.small,\r\n  },\r\n  resetButton: {\r\n    borderColor: theme.colors.border,\r\n    paddingHorizontal: theme.spacing.large,\r\n    borderRadius: theme.borderRadius.small,\r\n  },\r\n});\r\n\r\nexport default SettingsScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}