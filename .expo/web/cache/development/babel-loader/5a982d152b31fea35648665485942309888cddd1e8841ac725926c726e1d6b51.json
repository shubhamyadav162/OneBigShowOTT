{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DashboardScreenWithTheme from \"../screens/admin/DashboardScreen\";\nimport SeriesScreen from \"../screens/admin/SeriesScreen\";\nimport SeriesAddScreen from \"../screens/admin/SeriesAddScreen\";\nimport SeriesEditScreen from \"../screens/admin/SeriesEditScreen\";\nimport EpisodesScreen from \"../screens/admin/EpisodesScreen\";\nimport EpisodeAddScreen from \"../screens/admin/EpisodeAddScreen\";\nimport EpisodeEditScreen from \"../screens/admin/EpisodeEditScreen\";\nimport UsersScreenWithTheme from \"../screens/admin/UsersScreen\";\nimport AnalyticsScreenWithTheme from \"../screens/admin/AnalyticsScreen\";\nimport PublishingScreenWithTheme from \"../screens/admin/PublishingScreen\";\nimport SettingsScreenWithTheme from \"../screens/admin/SettingsScreen\";\nimport ContentManagementScreenWithTheme from \"../screens/admin/ContentManagementScreen\";\nimport SeriesManagementScreenWithTheme from \"../screens/admin/SeriesManagementScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AdminNavigator = function AdminNavigator() {\n  console.log('AdminNavigator rendering, with UsersScreen:', !!UsersScreenWithTheme, 'AnalyticsScreen:', !!AnalyticsScreenWithTheme, 'PublishingScreen:', !!PublishingScreenWithTheme, 'SettingsScreen:', !!SettingsScreenWithTheme);\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreenWithTheme,\n      options: {\n        title: 'Dashboard'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ContentManagement\",\n      component: ContentManagementScreenWithTheme,\n      options: {\n        title: 'Content Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Series\",\n      component: SeriesManagementScreenWithTheme,\n      options: {\n        title: 'Series Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesAdd\",\n      component: SeriesAddScreen,\n      options: {\n        title: 'Add Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesEdit\",\n      component: SeriesEditScreen,\n      options: {\n        title: 'Edit Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Episodes\",\n      component: EpisodesScreen,\n      options: {\n        title: 'Episodes Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeAdd\",\n      component: EpisodeAddScreen,\n      options: {\n        title: 'Add Episode'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeEdit\",\n      component: EpisodeEditScreen,\n      options: {\n        title: 'Edit Episode'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Users\",\n      component: UsersScreenWithTheme,\n      options: {\n        title: 'User Management'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Analytics\",\n      component: AnalyticsScreenWithTheme,\n      options: {\n        title: 'Analytics'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Publishing\",\n      component: PublishingScreenWithTheme,\n      options: {\n        title: 'Publishing'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreenWithTheme,\n      options: {\n        title: 'Settings'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#1e1e1e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#bbbbbb',\n    textAlign: 'center'\n  }\n});\nexport default AdminNavigator;","map":{"version":3,"names":["React","createStackNavigator","View","Text","StyleSheet","DashboardScreenWithTheme","SeriesScreen","SeriesAddScreen","SeriesEditScreen","EpisodesScreen","EpisodeAddScreen","EpisodeEditScreen","UsersScreenWithTheme","AnalyticsScreenWithTheme","PublishingScreenWithTheme","SettingsScreenWithTheme","ContentManagementScreenWithTheme","SeriesManagementScreenWithTheme","jsx","_jsx","jsxs","_jsxs","Stack","AdminNavigator","console","log","Navigator","screenOptions","headerShown","children","Screen","name","component","options","title","styles","create","container","flex","padding","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","color","marginBottom","subtitle","textAlign"],"sources":["E:/bigshow/src/navigation/AdminNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport DashboardScreenWithTheme from '../screens/admin/DashboardScreen';\r\nimport SeriesScreen from '../screens/admin/SeriesScreen';\r\nimport SeriesAddScreen from '../screens/admin/SeriesAddScreen';\r\nimport SeriesEditScreen from '../screens/admin/SeriesEditScreen';\r\nimport EpisodesScreen from '../screens/admin/EpisodesScreen';\r\nimport EpisodeAddScreen from '../screens/admin/EpisodeAddScreen';\r\nimport EpisodeEditScreen from '../screens/admin/EpisodeEditScreen';\r\nimport UsersScreenWithTheme from '../screens/admin/UsersScreen';\r\nimport AnalyticsScreenWithTheme from '../screens/admin/AnalyticsScreen';\r\nimport PublishingScreenWithTheme from '../screens/admin/PublishingScreen';\r\nimport SettingsScreenWithTheme from '../screens/admin/SettingsScreen';\r\nimport ContentManagementScreenWithTheme from '../screens/admin/ContentManagementScreen';\r\nimport SeriesManagementScreenWithTheme from '../screens/admin/SeriesManagementScreen';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst AdminNavigator = () => {\r\n  console.log('AdminNavigator rendering, with UsersScreen:', !!UsersScreenWithTheme, 'AnalyticsScreen:', !!AnalyticsScreenWithTheme, 'PublishingScreen:', !!PublishingScreenWithTheme, 'SettingsScreen:', !!SettingsScreenWithTheme);\r\n  \r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Dashboard\" component={DashboardScreenWithTheme} options={{ title: 'Dashboard' }} />\r\n      <Stack.Screen name=\"ContentManagement\" component={ContentManagementScreenWithTheme} options={{ title: 'Content Management' }} />\r\n      <Stack.Screen name=\"Series\" component={SeriesManagementScreenWithTheme} options={{ title: 'Series Management' }} />\r\n      <Stack.Screen name=\"SeriesAdd\" component={SeriesAddScreen} options={{ title: 'Add Series' }} />\r\n      <Stack.Screen name=\"SeriesEdit\" component={SeriesEditScreen} options={{ title: 'Edit Series' }} />\r\n      <Stack.Screen name=\"Episodes\" component={EpisodesScreen} options={{ title: 'Episodes Management' }} />\r\n      <Stack.Screen name=\"EpisodeAdd\" component={EpisodeAddScreen} options={{ title: 'Add Episode' }} />\r\n      <Stack.Screen name=\"EpisodeEdit\" component={EpisodeEditScreen} options={{ title: 'Edit Episode' }} />\r\n      <Stack.Screen \r\n        name=\"Users\" \r\n        component={UsersScreenWithTheme} \r\n        options={{ title: 'User Management' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Analytics\" \r\n        component={AnalyticsScreenWithTheme} \r\n        options={{ title: 'Analytics' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Publishing\" \r\n        component={PublishingScreenWithTheme} \r\n        options={{ title: 'Publishing' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreenWithTheme} \r\n        options={{ title: 'Settings' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#1e1e1e',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#bbbbbb',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n\r\nexport default AdminNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}