{"ast":null,"code":"import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DashboardScreen from \"../screens/admin/DashboardScreen\";\nimport SeriesScreen from \"../screens/admin/SeriesScreen\";\nimport SeriesAddScreen from \"../screens/admin/SeriesAddScreen\";\nimport SeriesEditScreen from \"../screens/admin/SeriesEditScreen\";\nimport EpisodesScreen from \"../screens/admin/EpisodesScreen\";\nimport EpisodeAddScreen from \"../screens/admin/EpisodeAddScreen\";\nimport EpisodeEditScreen from \"../screens/admin/EpisodeEditScreen\";\nimport UsersScreen from \"../screens/admin/UsersScreen\";\nimport AnalyticsScreen from \"../screens/admin/AnalyticsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nvar ContentStackNavigator = function ContentStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ContentManagementHome\",\n      component: DashboardScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesList\",\n      component: SeriesScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodesList\",\n      component: EpisodesScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesAdd\",\n      component: SeriesAddScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesEdit\",\n      component: SeriesEditScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeAdd\",\n      component: EpisodeAddScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeEdit\",\n      component: EpisodeEditScreen\n    })]\n  });\n};\nvar AdminNavigator = function AdminNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"AdminDashboard\",\n    screenOptions: {\n      headerShown: true\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"AdminDashboard\",\n      component: DashboardScreen,\n      options: {\n        title: 'Dashboard'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"ContentManagement\",\n      component: ContentStackNavigator,\n      options: {\n        title: 'Content'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Users\",\n      component: UsersScreen,\n      options: {\n        title: 'Users'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Analytics\",\n      component: AnalyticsScreen,\n      options: {\n        title: 'Analytics'\n      }\n    })]\n  });\n};\nexport default AdminNavigator;","map":{"version":3,"names":["React","createDrawerNavigator","createStackNavigator","DashboardScreen","SeriesScreen","SeriesAddScreen","SeriesEditScreen","EpisodesScreen","EpisodeAddScreen","EpisodeEditScreen","UsersScreen","AnalyticsScreen","jsx","_jsx","jsxs","_jsxs","Drawer","Stack","ContentStackNavigator","Navigator","screenOptions","headerShown","children","Screen","name","component","AdminNavigator","initialRouteName","options","title"],"sources":["E:/bigshow/src/navigation/AdminNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport DashboardScreen from '../screens/admin/DashboardScreen';\r\nimport SeriesScreen from '../screens/admin/SeriesScreen';\r\nimport SeriesAddScreen from '../screens/admin/SeriesAddScreen';\r\nimport SeriesEditScreen from '../screens/admin/SeriesEditScreen';\r\nimport EpisodesScreen from '../screens/admin/EpisodesScreen';\r\nimport EpisodeAddScreen from '../screens/admin/EpisodeAddScreen';\r\nimport EpisodeEditScreen from '../screens/admin/EpisodeEditScreen';\r\nimport UsersScreen from '../screens/admin/UsersScreen';\r\nimport AnalyticsScreen from '../screens/admin/AnalyticsScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst ContentStackNavigator = () => (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n    <Stack.Screen name=\"ContentManagementHome\" component={DashboardScreen} />\r\n    <Stack.Screen name=\"SeriesList\" component={SeriesScreen} />\r\n    <Stack.Screen name=\"EpisodesList\" component={EpisodesScreen} />\r\n    <Stack.Screen name=\"SeriesAdd\" component={SeriesAddScreen} />\r\n    <Stack.Screen name=\"SeriesEdit\" component={SeriesEditScreen} />\r\n    <Stack.Screen name=\"EpisodeAdd\" component={EpisodeAddScreen} />\r\n    <Stack.Screen name=\"EpisodeEdit\" component={EpisodeEditScreen} />\r\n  </Stack.Navigator>\r\n);\r\n\r\nconst AdminNavigator = () => (\r\n  <Drawer.Navigator initialRouteName=\"AdminDashboard\" screenOptions={{ headerShown: true }}>\r\n    <Drawer.Screen name=\"AdminDashboard\" component={DashboardScreen} options={{ title: 'Dashboard' }}/>\r\n    <Drawer.Screen name=\"ContentManagement\" component={ContentStackNavigator} options={{ title: 'Content' }} />\r\n    <Drawer.Screen name=\"Users\" component={UsersScreen} options={{ title: 'Users' }} />\r\n    <Drawer.Screen name=\"Analytics\" component={AnalyticsScreen} options={{ title: 'Analytics' }} />\r\n  </Drawer.Navigator>\r\n);\r\n\r\nexport default AdminNavigator; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,eAAe;AACtB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,gBAAgB;AACvB,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,iBAAiB;AACxB,OAAOC,WAAW;AAClB,OAAOC,eAAe;AAAyC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,MAAM,GAAGf,qBAAqB,CAAC,CAAC;AACtC,IAAMgB,KAAK,GAAGf,oBAAoB,CAAC,CAAC;AAEpC,IAAMgB,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA;EAAA,OACzBH,KAAA,CAACE,KAAK,CAACE,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAC,QAAA,GACrDT,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,uBAAuB;MAACC,SAAS,EAAEtB;IAAgB,CAAE,CAAC,EACzEU,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAErB;IAAa,CAAE,CAAC,EAC3DS,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAElB;IAAe,CAAE,CAAC,EAC/DM,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,WAAW;MAACC,SAAS,EAAEpB;IAAgB,CAAE,CAAC,EAC7DQ,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEnB;IAAiB,CAAE,CAAC,EAC/DO,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEjB;IAAiB,CAAE,CAAC,EAC/DK,IAAA,CAACI,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAEhB;IAAkB,CAAE,CAAC;EAAA,CAClD,CAAC;AAAA,CACnB;AAED,IAAMiB,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAClBX,KAAA,CAACC,MAAM,CAACG,SAAS;IAACQ,gBAAgB,EAAC,gBAAgB;IAACP,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAK,CAAE;IAAAC,QAAA,GACvFT,IAAA,CAACG,MAAM,CAACO,MAAM;MAACC,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAEtB,eAAgB;MAACyB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAY;IAAE,CAAC,CAAC,EACnGhB,IAAA,CAACG,MAAM,CAACO,MAAM;MAACC,IAAI,EAAC,mBAAmB;MAACC,SAAS,EAAEP,qBAAsB;MAACU,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAU;IAAE,CAAE,CAAC,EAC3GhB,IAAA,CAACG,MAAM,CAACO,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEf,WAAY;MAACkB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAQ;IAAE,CAAE,CAAC,EACnFhB,IAAA,CAACG,MAAM,CAACO,MAAM;MAACC,IAAI,EAAC,WAAW;MAACC,SAAS,EAAEd,eAAgB;MAACiB,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAY;IAAE,CAAE,CAAC;EAAA,CAC/E,CAAC;AAAA,CACpB;AAED,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}