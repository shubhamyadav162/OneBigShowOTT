{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Input, Button, Text, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport theme from \"../../theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationAddScreen = function NotificationAddScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    audience = _useState6[0],\n    setAudience = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    type = _useState8[0],\n    setType = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    scheduleDate = _useState0[0],\n    setScheduleDate = _useState0[1];\n  var handleSave = function handleSave() {\n    console.log('Saving notification', {\n      title: title,\n      message: message,\n      audience: audience,\n      type: type,\n      scheduleDate: scheduleDate\n    });\n    Alert.alert('Notification saved', 'Your new notification has been created.');\n    navigation.navigate('Notifications');\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      h4: true,\n      style: styles.header,\n      children: \"Create New Notification\"\n    }), _jsx(Input, {\n      placeholder: \"Title\",\n      value: title,\n      onChangeText: setTitle\n    }), _jsx(Input, {\n      placeholder: \"Message\",\n      value: message,\n      onChangeText: setMessage,\n      multiline: true\n    }), _jsx(Input, {\n      placeholder: \"Audience\",\n      value: audience,\n      onChangeText: setAudience\n    }), _jsx(Input, {\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(Input, {\n      placeholder: \"Schedule Date\",\n      value: scheduleDate,\n      onChangeText: setScheduleDate\n    }), _jsx(Button, {\n      title: \"Save Notification\",\n      onPress: handleSave,\n      containerStyle: styles.button,\n      buttonStyle: {\n        backgroundColor: theme.colors.primary\n      },\n      icon: _jsx(Icon, {\n        name: \"save\",\n        type: \"feather\",\n        color: \"#fff\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.large,\n    backgroundColor: theme.colors.background\n  },\n  header: {\n    alignSelf: 'center',\n    marginBottom: theme.spacing.large\n  },\n  button: {\n    marginTop: theme.spacing.medium\n  }\n});\nexport default NotificationAddScreen;","map":{"version":3,"names":["React","useState","ScrollView","StyleSheet","Alert","Input","Button","Text","Icon","useNavigation","theme","jsx","_jsx","jsxs","_jsxs","NotificationAddScreen","navigation","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","message","setMessage","_useState5","_useState6","audience","setAudience","_useState7","_useState8","type","setType","_useState9","_useState0","scheduleDate","setScheduleDate","handleSave","console","log","alert","navigate","contentContainerStyle","styles","container","children","h4","style","header","placeholder","value","onChangeText","multiline","onPress","containerStyle","button","buttonStyle","backgroundColor","colors","primary","icon","name","color","create","padding","spacing","large","background","alignSelf","marginBottom","marginTop","medium"],"sources":["E:/bigshow/src/screens/admin/NotificationAddScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ScrollView, StyleSheet, Alert } from 'react-native';\r\nimport { Input, Button, Text, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport theme from '../../theme';\r\n\r\nconst NotificationAddScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [audience, setAudience] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [scheduleDate, setScheduleDate] = useState('');\r\n\r\n  const handleSave = () => {\r\n    // TODO: Implement save notification logic\r\n    console.log('Saving notification', { title, message, audience, type, scheduleDate });\r\n    Alert.alert('Notification saved', 'Your new notification has been created.');\r\n    navigation.navigate('Notifications');\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text h4 style={styles.header}>Create New Notification</Text>\r\n      <Input placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n      <Input placeholder=\"Message\" value={message} onChangeText={setMessage} multiline />\r\n      <Input placeholder=\"Audience\" value={audience} onChangeText={setAudience} />\r\n      <Input placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <Input placeholder=\"Schedule Date\" value={scheduleDate} onChangeText={setScheduleDate} />\r\n      <Button\r\n        title=\"Save Notification\"\r\n        onPress={handleSave}\r\n        containerStyle={styles.button}\r\n        buttonStyle={{ backgroundColor: theme.colors.primary }}\r\n        icon={<Icon name=\"save\" type=\"feather\" color=\"#fff\" />}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: theme.spacing.large, backgroundColor: theme.colors.background },\r\n  header: { alignSelf: 'center', marginBottom: theme.spacing.large },\r\n  button: { marginTop: theme.spacing.medium },\r\n});\r\n\r\nexport default NotificationAddScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}