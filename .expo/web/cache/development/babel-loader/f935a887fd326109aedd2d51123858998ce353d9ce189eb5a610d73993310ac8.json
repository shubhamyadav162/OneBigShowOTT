{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\", \"accessibilityLabel\", \"imageSource\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { HeaderButton } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport toggleDrawerIcon from \"./assets/toggle-drawer-icon.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Show navigation menu' : _ref$accessibilityLab,\n    _ref$imageSource = _ref.imageSource,\n    imageSource = _ref$imageSource === void 0 ? toggleDrawerIcon : _ref$imageSource,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var navigation = useNavigation();\n  return _jsx(HeaderButton, _objectSpread(_objectSpread({}, rest), {}, {\n    accessibilityLabel: accessibilityLabel,\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    children: _jsx(Image, {\n      resizeMode: \"contain\",\n      source: imageSource,\n      fadeDuration: 0,\n      tintColor: tintColor,\n      style: styles.icon\n    })\n  }));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 5\n  }\n});","map":{"version":3,"names":["HeaderButton","DrawerActions","useNavigation","Image","StyleSheet","toggleDrawerIcon","jsx","_jsx","DrawerToggleButton","_ref","tintColor","_ref$accessibilityLab","accessibilityLabel","_ref$imageSource","imageSource","rest","_objectWithoutProperties","_excluded","navigation","_objectSpread","onPress","dispatch","toggleDrawer","children","resizeMode","source","fadeDuration","style","styles","icon","create","height","width","marginVertical","marginHorizontal"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerToggleButton.tsx"],"sourcesContent":["import { HeaderButton } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  type ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport { Image, type ImageSourcePropType, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\nimport toggleDrawerIcon from './assets/toggle-drawer-icon.png';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n  imageSource?: ImageSourcePropType;\n};\n\nexport function DrawerToggleButton({\n  tintColor,\n  accessibilityLabel = 'Show navigation menu',\n  imageSource = toggleDrawerIcon,\n  ...rest\n}: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <HeaderButton\n      {...rest}\n      accessibilityLabel={accessibilityLabel}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n    >\n      <Image\n        resizeMode=\"contain\"\n        source={imageSource}\n        fadeDuration={0}\n        tintColor={tintColor}\n        style={styles.icon}\n      />\n    </HeaderButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 5,\n  },\n});\n"],"mappings":";;;;;;;AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAIjC,OAAOC,gBAAgB;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAU/D,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAKxB;EAAA,IAJRC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAAC,qBAAA,GAAAF,IAAA,CACTG,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,sBAAsB,GAAAA,qBAAA;IAAAE,gBAAA,GAAAJ,IAAA,CAC3CK,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAGR,gBAAgB,GAAAQ,gBAAA;IAC3BE,IAAA,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EAEH,IAAMC,UAAU,GAAGhB,aAAa,CAAsC,CAAC;EAEvE,OACEK,IAAA,CAACP,YAAY,EAAAmB,aAAA,CAAAA,aAAA,KACPJ,IAAI;IACRH,kBAAkB,EAAEA,kBAAmB;IACvCQ,OAAO,EAAE,SAATA,OAAOA,CAAA;MAAA,OAAQF,UAAU,CAACG,QAAQ,CAACpB,aAAa,CAACqB,YAAY,CAAC,CAAC,CAAE;IAAA;IAAAC,QAAA,EAEjEhB,IAAA,CAACJ,KAAK;MACJqB,UAAU,EAAC,SAAS;MACpBC,MAAM,EAAEX,WAAY;MACpBY,YAAY,EAAE,CAAE;MAChBhB,SAAS,EAAEA,SAAU;MACrBiB,KAAK,EAAEC,MAAM,CAACC;IAAK,CACpB;EAAA,EACW,CAAC;AAEnB;AAEA,IAAMD,MAAM,GAAGxB,UAAU,CAAC0B,MAAM,CAAC;EAC/BD,IAAI,EAAE;IACJE,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,CAAC;IACjBC,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}