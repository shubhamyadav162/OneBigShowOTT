{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from \"./colors\";\nimport darkColors from \"./colorsDark\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ThemeContext = React.createContext({\n  theme: {\n    colors: colors\n  }\n});\nvar ThemeProvider = function (_React$Component) {\n  function ThemeProvider(props) {\n    var _this;\n    _classCallCheck(this, ThemeProvider);\n    _this = _callSuper(this, ThemeProvider, [props]);\n    _this.updateTheme = function (updates) {\n      _this.setState(function (_ref) {\n        var theme = _ref.theme;\n        return {\n          theme: deepmerge(theme, updates)\n        };\n      });\n    };\n    _this.replaceTheme = function (theme) {\n      _this.setState(function () {\n        return {\n          theme: deepmerge(_this.defaultTheme, theme)\n        };\n      });\n    };\n    _this.getTheme = function () {\n      return _this.state.theme;\n    };\n    var defaultColors = props.useDark ? darkColors : colors;\n    _this.defaultTheme = deepmerge({\n      colors: defaultColors\n    }, props.theme);\n    _this.state = {\n      theme: _this.defaultTheme,\n      useDark: Boolean(props.useDark)\n    };\n    return _this;\n  }\n  _inherits(ThemeProvider, _React$Component);\n  return _createClass(ThemeProvider, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(ThemeContext.Provider, {\n        value: {\n          theme: this.state.theme,\n          updateTheme: this.updateTheme,\n          replaceTheme: this.replaceTheme\n        },\n        children: this.props.children\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var useDark = props.useDark;\n      var isTheme = function isTheme(theme) {\n        return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n      };\n      if (useDark !== state.useDark || isTheme(props.theme) && props.theme !== state.theme) {\n        var defaultColors = useDark ? darkColors : colors;\n        return {\n          theme: deepmerge(state.theme, deepmerge({\n            colors: defaultColors\n          }, props.theme)),\n          useDark: useDark\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.Component);\nexport { ThemeProvider as default };\nThemeProvider.defaultProps = {\n  theme: {},\n  useDark: false\n};\nexport var ThemeConsumer = ThemeContext.Consumer;","map":{"version":3,"names":["React","deepmerge","colors","darkColors","jsx","_jsx","ThemeContext","createContext","theme","ThemeProvider","_React$Component","props","_this","_classCallCheck","_callSuper","updateTheme","updates","setState","_ref","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","Boolean","_inherits","_createClass","key","value","render","Provider","children","getDerivedStateFromProps","isTheme","Object","keys","length","constructor","Component","default","defaultProps","ThemeConsumer","Consumer"],"sources":["E:/bigshow/node_modules/react-native-elements/dist/config/ThemeProvider.js"],"sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from './colors';\nimport darkColors from './colorsDark';\nexport const ThemeContext = React.createContext({\n    theme: {\n        colors,\n    },\n});\nexport default class ThemeProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateTheme = (updates) => {\n            this.setState(({ theme }) => ({\n                theme: deepmerge(theme, updates),\n            }));\n        };\n        this.replaceTheme = (theme) => {\n            this.setState(() => ({\n                theme: deepmerge(this.defaultTheme, theme),\n            }));\n        };\n        this.getTheme = () => this.state.theme;\n        const defaultColors = props.useDark ? darkColors : colors;\n        this.defaultTheme = deepmerge({\n            colors: defaultColors,\n        }, props.theme);\n        this.state = {\n            theme: this.defaultTheme,\n            useDark: Boolean(props.useDark),\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { useDark } = props;\n        const isTheme = (theme) => {\n            return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n        };\n        //isTheme will check if the theme is provided by user and will update the theme only if its provided by user\n        //Not checking if the theme exist or not will always result in if statement getting executed as props.theme !== state.theme if theme is not provided\n        if (useDark !== state.useDark ||\n            (isTheme(props.theme) && props.theme !== state.theme)) {\n            const defaultColors = useDark ? darkColors : colors;\n            return {\n                theme: deepmerge(state.theme, deepmerge({\n                    colors: defaultColors,\n                }, props.theme)),\n                useDark,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<ThemeContext.Provider value={{\n                theme: this.state.theme,\n                updateTheme: this.updateTheme,\n                replaceTheme: this.replaceTheme,\n            }}>\n        {this.props.children}\n      </ThemeContext.Provider>);\n    }\n}\nThemeProvider.defaultProps = {\n    theme: {},\n    useDark: false,\n};\nexport const ThemeConsumer = ThemeContext.Consumer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}