{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';\nimport { useNavigation } from \"./useNavigation.js\";\nexport function useNavigationState(selector) {\n  var navigation = useNavigation();\n  var subscribe = React.useCallback(function (callback) {\n    var unsubscribe = navigation.addListener('state', callback);\n    return unsubscribe;\n  }, [navigation]);\n  var value = useSyncExternalStoreWithSelector(subscribe, navigation.getState, navigation.getState, selector);\n  return value;\n}","map":{"version":3,"names":["React","useSyncExternalStoreWithSelector","useNavigation","useNavigationState","selector","navigation","subscribe","useCallback","callback","unsubscribe","addListener","value","getState"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\core\\src\\useNavigationState.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';\n\nimport type { NavigationProp } from './types';\nimport { useNavigation } from './useNavigation';\n\ntype Selector<ParamList extends ParamListBase, T> = (\n  state: NavigationState<ParamList>\n) => T;\n\n/**\n * Hook to get a value from the current navigation state using a selector.\n *\n * @param selector Selector function to get a value from the state.\n */\nexport function useNavigationState<ParamList extends ParamListBase, T>(\n  selector: Selector<ParamList, T>\n): T {\n  const navigation = useNavigation<NavigationProp<ParamList>>();\n\n  const subscribe = React.useCallback(\n    (callback: () => void) => {\n      const unsubscribe = navigation.addListener('state', callback);\n\n      return unsubscribe;\n    },\n    [navigation]\n  );\n\n  const value = useSyncExternalStoreWithSelector(\n    subscribe,\n    navigation.getState,\n    navigation.getState,\n    selector\n  );\n\n  return value;\n}\n"],"mappings":";;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gCAAgC,QAAQ,uCAAuC;AAGxF,SAASC,aAAa;AAWtB,OAAO,SAASC,kBAAkBA,CAChCC,QAAgC,EAC7B;EACH,IAAMC,UAAU,GAAGH,aAAa,CAA4B,CAAC;EAE7D,IAAMI,SAAS,GAAGN,KAAK,CAACO,WAAW,CAChC,UAAAC,QAAoB,EAAK;IACxB,IAAMC,WAAW,GAAGJ,UAAU,CAACK,WAAW,CAAC,OAAO,EAAEF,QAAQ,CAAC;IAE7D,OAAOC,WAAW;EACpB,CAAC,EACD,CAACJ,UAAU,CACb,CAAC;EAED,IAAMM,KAAK,GAAGV,gCAAgC,CAC5CK,SAAS,EACTD,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACO,QAAQ,EACnBR,QACF,CAAC;EAED,OAAOO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}