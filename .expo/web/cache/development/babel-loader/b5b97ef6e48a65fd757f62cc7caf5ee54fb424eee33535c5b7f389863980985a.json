{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { db } from \"../lib/firebaseClient\";\nimport { collection, addDoc, serverTimestamp, query, where, getCountFromServer, getDocs } from 'firebase/firestore';\nvar analyticsApi = {\n  logEvent: function () {\n    var _logEvent = _asyncToGenerator(function* (eventType, payload) {\n      try {\n        yield addDoc(collection(db, 'analytics_events'), _objectSpread(_objectSpread({\n          eventType: eventType\n        }, payload), {}, {\n          timestamp: serverTimestamp()\n        }));\n      } catch (error) {\n        console.error('AnalyticsApi.logEvent error', error);\n      }\n    });\n    function logEvent(_x, _x2) {\n      return _logEvent.apply(this, arguments);\n    }\n    return logEvent;\n  }(),\n  getOverview: function () {\n    var _getOverview = _asyncToGenerator(function* () {\n      try {\n        var totalViewsQuery = query(collection(db, 'analytics_events'), where('eventType', '==', 'video_view'));\n        var totalViewsSnap = yield getCountFromServer(totalViewsQuery);\n        var totalViews = totalViewsSnap.data().count;\n        var activeSince = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n        var activeUsersQuery = query(collection(db, 'analytics_events'), where('timestamp', '>=', activeSince));\n        var activeUsersSnap = yield getDocs(activeUsersQuery);\n        var activeUsersSet = new Set(activeUsersSnap.docs.map(function (d) {\n          return d.data().userId;\n        }));\n        var activeUsers = activeUsersSet.size;\n        var watchTimeQuery = query(collection(db, 'analytics_events'), where('eventType', '==', 'watch_time'));\n        var watchTimeSnap = yield getDocs(watchTimeQuery);\n        var watchTimes = watchTimeSnap.docs.map(function (d) {\n          return d.data().secondsWatched || 0;\n        });\n        var avgWatchTime = watchTimes.length ? watchTimes.reduce(function (sum, t) {\n          return sum + t;\n        }, 0) / watchTimes.length : 0;\n        var completeQuery = query(collection(db, 'analytics_events'), where('eventType', '==', 'video_complete'));\n        var completeSnap = yield getCountFromServer(completeQuery);\n        var completes = completeSnap.data().count;\n        var completionRate = totalViews > 0 ? Math.round(completes / totalViews * 100) : 0;\n        var viewDocs = yield getDocs(totalViewsQuery);\n        var counts = {};\n        viewDocs.docs.forEach(function (d) {\n          var cId = d.data().contentId;\n          counts[cId] = (counts[cId] || 0) + 1;\n        });\n        var topContent = '';\n        var maxCount = 0;\n        Object.entries(counts).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            cId = _ref2[0],\n            cnt = _ref2[1];\n          if (cnt > maxCount) {\n            maxCount = cnt;\n            topContent = cId;\n          }\n        });\n        var subQuery = query(collection(db, 'analytics_events'), where('eventType', '==', 'subscribe'));\n        var subSnap = yield getCountFromServer(subQuery);\n        var newSubscribers = subSnap.data().count;\n        return {\n          totalViews: totalViews,\n          activeUsers: activeUsers,\n          avgWatchTime: Math.round(avgWatchTime),\n          completionRate: completionRate,\n          topContent: topContent,\n          newSubscribers: newSubscribers\n        };\n      } catch (error) {\n        console.error('AnalyticsApi.getOverview error', error);\n        return {\n          totalViews: 0,\n          activeUsers: 0,\n          avgWatchTime: 0,\n          completionRate: 0,\n          topContent: '',\n          newSubscribers: 0\n        };\n      }\n    });\n    function getOverview() {\n      return _getOverview.apply(this, arguments);\n    }\n    return getOverview;\n  }()\n};\nexport default analyticsApi;","map":{"version":3,"names":["db","collection","addDoc","serverTimestamp","query","where","getCountFromServer","getDocs","analyticsApi","logEvent","_logEvent","_asyncToGenerator","eventType","payload","_objectSpread","timestamp","error","console","_x","_x2","apply","arguments","getOverview","_getOverview","totalViewsQuery","totalViewsSnap","totalViews","data","count","activeSince","Date","now","activeUsersQuery","activeUsersSnap","activeUsersSet","Set","docs","map","d","userId","activeUsers","size","watchTimeQuery","watchTimeSnap","watchTimes","secondsWatched","avgWatchTime","length","reduce","sum","t","completeQuery","completeSnap","completes","completionRate","Math","round","viewDocs","counts","forEach","cId","contentId","topContent","maxCount","Object","entries","_ref","_ref2","_slicedToArray","cnt","subQuery","subSnap","newSubscribers"],"sources":["E:/bigshow/src/api/analyticsApi.js"],"sourcesContent":["import { db } from '../lib/firebaseClient';\r\nimport { collection, addDoc, serverTimestamp, query, where, getCountFromServer, getDocs } from 'firebase/firestore';\r\n\r\nconst analyticsApi = {\r\n  /**\r\n   * Log an analytics event\r\n   * @param {string} eventType - Type of event (e.g., 'video_view', 'watch_time', 'video_complete', 'subscribe')\r\n   * @param {object} payload - Event-specific data (must include userId, contentId, secondsWatched if applicable)\r\n   */\r\n  logEvent: async (eventType, payload) => {\r\n    try {\r\n      await addDoc(collection(db, 'analytics_events'), {\r\n        eventType,\r\n        ...payload,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n    } catch (error) {\r\n      console.error('AnalyticsApi.logEvent error', error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Fetch overview metrics for the dashboard\r\n   * @returns {Promise<object>} Metrics: totalViews, activeUsers, avgWatchTime, completionRate, topContent, newSubscribers\r\n   */\r\n  getOverview: async () => {\r\n    try {\r\n      // Total Views\r\n      const totalViewsQuery = query(\r\n        collection(db, 'analytics_events'),\r\n        where('eventType', '==', 'video_view')\r\n      );\r\n      const totalViewsSnap = await getCountFromServer(totalViewsQuery);\r\n      const totalViews = totalViewsSnap.data().count;\r\n\r\n      // Active Users (past 30 days)\r\n      const activeSince = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\r\n      const activeUsersQuery = query(\r\n        collection(db, 'analytics_events'),\r\n        where('timestamp', '>=', activeSince)\r\n      );\r\n      const activeUsersSnap = await getDocs(activeUsersQuery);\r\n      const activeUsersSet = new Set(activeUsersSnap.docs.map(d => d.data().userId));\r\n      const activeUsers = activeUsersSet.size;\r\n\r\n      // Average Watch Time\r\n      const watchTimeQuery = query(\r\n        collection(db, 'analytics_events'),\r\n        where('eventType', '==', 'watch_time')\r\n      );\r\n      const watchTimeSnap = await getDocs(watchTimeQuery);\r\n      const watchTimes = watchTimeSnap.docs.map(d => d.data().secondsWatched || 0);\r\n      const avgWatchTime = watchTimes.length\r\n        ? watchTimes.reduce((sum, t) => sum + t, 0) / watchTimes.length\r\n        : 0;\r\n\r\n      // Completion Rate\r\n      const completeQuery = query(\r\n        collection(db, 'analytics_events'),\r\n        where('eventType', '==', 'video_complete')\r\n      );\r\n      const completeSnap = await getCountFromServer(completeQuery);\r\n      const completes = completeSnap.data().count;\r\n      const completionRate = totalViews > 0 ? Math.round((completes / totalViews) * 100) : 0;\r\n\r\n      // Top Content (by views)\r\n      const viewDocs = await getDocs(totalViewsQuery);\r\n      const counts = {};\r\n      viewDocs.docs.forEach(d => {\r\n        const cId = d.data().contentId;\r\n        counts[cId] = (counts[cId] || 0) + 1;\r\n      });\r\n      let topContent = '';\r\n      let maxCount = 0;\r\n      Object.entries(counts).forEach(([cId, cnt]) => {\r\n        if (cnt > maxCount) {\r\n          maxCount = cnt;\r\n          topContent = cId;\r\n        }\r\n      });\r\n\r\n      // New Subscribers\r\n      const subQuery = query(\r\n        collection(db, 'analytics_events'),\r\n        where('eventType', '==', 'subscribe')\r\n      );\r\n      const subSnap = await getCountFromServer(subQuery);\r\n      const newSubscribers = subSnap.data().count;\r\n\r\n      return { totalViews, activeUsers, avgWatchTime: Math.round(avgWatchTime), completionRate, topContent, newSubscribers };\r\n    } catch (error) {\r\n      console.error('AnalyticsApi.getOverview error', error);\r\n      return { totalViews: 0, activeUsers: 0, avgWatchTime: 0, completionRate: 0, topContent: '', newSubscribers: 0 };\r\n    }\r\n  },\r\n};\r\n\r\nexport default analyticsApi; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}