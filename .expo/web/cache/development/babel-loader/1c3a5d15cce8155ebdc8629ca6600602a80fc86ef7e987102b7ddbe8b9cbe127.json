{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFunctions } from \"firebase/functions\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyALxdmsg31bptxg1KKDyJZmDlO1s5mTGXQ\",\n  authDomain: \"bigshow-ott.firebaseapp.com\",\n  projectId: \"bigshow-ott\",\n  storageBucket: \"bigshow-ott.firebasestorage.app\",\n  messagingSenderId: \"629266811201\",\n  appId: \"1:629266811201:web:9c79c2af0e9109949a39c0\",\n  measurementId: \"G-RHZKKTT05V\"\n};\nvar app;\nvar auth;\nvar db;\nvar storage;\nvar functions;\ntry {\n  app = initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  db = getFirestore(app);\n  storage = getStorage(app);\n  functions = getFunctions(app);\n  if (process.env.NODE_ENV === 'development') {\n    console.log('Running in development mode. Firebase is initialized.');\n  }\n} catch (error) {\n  console.error('Error initializing Firebase:', error);\n  if (!app) app = {};\n  if (!auth) auth = {};\n  if (!db) db = {};\n  if (!storage) storage = {};\n  if (!functions) functions = {};\n}\nexport { app, auth, db, storage, functions };","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getStorage","getFunctions","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","storage","functions","process","env","NODE_ENV","console","log","error"],"sources":["E:/bigshow/src/utils/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore, connectFirestoreEmulator } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFunctions } from \"firebase/functions\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyALxdmsg31bptxg1KKDyJZmDlO1s5mTGXQ\",\r\n  authDomain: \"bigshow-ott.firebaseapp.com\",\r\n  projectId: \"bigshow-ott\",\r\n  storageBucket: \"bigshow-ott.firebasestorage.app\",\r\n  messagingSenderId: \"629266811201\",\r\n  appId: \"1:629266811201:web:9c79c2af0e9109949a39c0\",\r\n  measurementId: \"G-RHZKKTT05V\"\r\n};\r\n\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet storage;\r\nlet functions;\r\n\r\ntry {\r\n  app = initializeApp(firebaseConfig);\r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  storage = getStorage(app);\r\n  functions = getFunctions(app);\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('Running in development mode. Firebase is initialized.');\r\n  }\r\n} catch (error) {\r\n  console.error('Error initializing Firebase:', error);\r\n  if (!app) app = {} as any; \r\n  if (!auth) auth = {} as any;\r\n  if (!db) db = {} as any;\r\n  if (!storage) storage = {} as any;\r\n  if (!functions) functions = {} as any;\r\n}\r\n\r\nexport { app, auth, db, storage, functions }; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAkC,oBAAoB;AAC3E,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,6BAA6B;EACzCC,SAAS,EAAE,aAAa;EACxBC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAIC,GAAG;AACP,IAAIC,IAAI;AACR,IAAIC,EAAE;AACN,IAAIC,OAAO;AACX,IAAIC,SAAS;AAEb,IAAI;EACFJ,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;EACnCS,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC;EACnBE,EAAE,GAAGb,YAAY,CAACW,GAAG,CAAC;EACtBG,OAAO,GAAGb,UAAU,CAACU,GAAG,CAAC;EACzBI,SAAS,GAAGb,YAAY,CAACS,GAAG,CAAC;EAE7B,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1CC,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;EACtE;AACF,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACpD,IAAI,CAACV,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAQ;EACzB,IAAI,CAACC,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAQ;EAC3B,IAAI,CAACC,EAAE,EAAEA,EAAE,GAAG,CAAC,CAAQ;EACvB,IAAI,CAACC,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAQ;EACjC,IAAI,CAACC,SAAS,EAAEA,SAAS,GAAG,CAAC,CAAQ;AACvC;AAEA,SAASJ,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}