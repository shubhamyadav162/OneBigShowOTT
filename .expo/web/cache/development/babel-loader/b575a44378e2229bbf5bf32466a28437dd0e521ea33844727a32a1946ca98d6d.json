{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Constants from 'expo-constants';\nvar _ref = Constants.expoConfig.extra || process.env,\n  BUNNY_STORAGE_ZONE = _ref.BUNNY_STORAGE_ZONE,\n  BUNNY_STORAGE_API_KEY = _ref.BUNNY_STORAGE_API_KEY,\n  BUNNY_STREAM_LIBRARY_ID = _ref.BUNNY_STREAM_LIBRARY_ID,\n  BUNNY_STREAM_API_KEY = _ref.BUNNY_STREAM_API_KEY;\nexport function uploadImageBunny(_x, _x2) {\n  return _uploadImageBunny.apply(this, arguments);\n}\nfunction _uploadImageBunny() {\n  _uploadImageBunny = _asyncToGenerator(function* (fileUri, storagePath) {\n    var blob = yield fetch(fileUri).then(function (r) {\n      return r.blob();\n    });\n    var endpoint = `https://${BUNNY_STORAGE_ZONE}.storage.bunnycdn.com/${storagePath}/${Date.now()}`;\n    var res = yield fetch(endpoint, {\n      method: 'PUT',\n      headers: {\n        AccessKey: BUNNY_STORAGE_API_KEY,\n        'Content-Type': blob.type\n      },\n      body: blob\n    });\n    if (!res.ok) {\n      throw new Error('Bunny image upload failed');\n    }\n    return `https://${BUNNY_STORAGE_ZONE}.b-cdn.net/${storagePath}/${Date.now()}`;\n  });\n  return _uploadImageBunny.apply(this, arguments);\n}\nexport function createVideoMeta(_x3) {\n  return _createVideoMeta.apply(this, arguments);\n}\nfunction _createVideoMeta() {\n  _createVideoMeta = _asyncToGenerator(function* (_ref2) {\n    var Title = _ref2.Title,\n      Description = _ref2.Description;\n    var res = yield fetch(`https://video.bunnycdn.com/library/${BUNNY_STREAM_LIBRARY_ID}/videos`, {\n      method: 'POST',\n      headers: {\n        accessKey: BUNNY_STREAM_API_KEY,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Title: Title,\n        Description: Description\n      })\n    });\n    if (!res.ok) {\n      throw new Error('Bunny video meta create failed');\n    }\n    return res.json();\n  });\n  return _createVideoMeta.apply(this, arguments);\n}\nexport function uploadVideoBunny(_x4, _x5) {\n  return _uploadVideoBunny.apply(this, arguments);\n}\nfunction _uploadVideoBunny() {\n  _uploadVideoBunny = _asyncToGenerator(function* (uploadUrl, fileUri) {\n    var blob = yield fetch(fileUri).then(function (r) {\n      return r.blob();\n    });\n    var res = yield fetch(uploadUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': blob.type\n      },\n      body: blob\n    });\n    if (!res.ok) {\n      throw new Error('Bunny video upload failed');\n    }\n  });\n  return _uploadVideoBunny.apply(this, arguments);\n}\nexport function getPlaybackUrlBunny(_x6) {\n  return _getPlaybackUrlBunny.apply(this, arguments);\n}\nfunction _getPlaybackUrlBunny() {\n  _getPlaybackUrlBunny = _asyncToGenerator(function* (videoId) {\n    var res = yield fetch(`https://video.bunnycdn.com/library/${BUNNY_STREAM_LIBRARY_ID}/videos/${videoId}`, {\n      headers: {\n        AccessKey: BUNNY_STREAM_API_KEY\n      }\n    });\n    if (!res.ok) {\n      throw new Error('Bunny get playback URL failed');\n    }\n    var data = yield res.json();\n    return data.Url || data.playbackUrl;\n  });\n  return _getPlaybackUrlBunny.apply(this, arguments);\n}","map":{"version":3,"names":["Constants","_ref","expoConfig","extra","process","env","BUNNY_STORAGE_ZONE","BUNNY_STORAGE_API_KEY","BUNNY_STREAM_LIBRARY_ID","BUNNY_STREAM_API_KEY","uploadImageBunny","_x","_x2","_uploadImageBunny","apply","arguments","_asyncToGenerator","fileUri","storagePath","blob","fetch","then","r","endpoint","Date","now","res","method","headers","AccessKey","type","body","ok","Error","createVideoMeta","_x3","_createVideoMeta","_ref2","Title","Description","accessKey","JSON","stringify","json","uploadVideoBunny","_x4","_x5","_uploadVideoBunny","uploadUrl","getPlaybackUrlBunny","_x6","_getPlaybackUrlBunny","videoId","data","Url","playbackUrl"],"sources":["E:/bigshow/src/utils/bunnyApi.js"],"sourcesContent":["import Constants from 'expo-constants';\r\n\r\nconst {\r\n  BUNNY_STORAGE_ZONE,\r\n  BUNNY_STORAGE_API_KEY,\r\n  BUNNY_STREAM_LIBRARY_ID,\r\n  BUNNY_STREAM_API_KEY,\r\n} = Constants.expoConfig.extra || process.env;\r\n\r\nexport async function uploadImageBunny(fileUri, storagePath) {\r\n  const blob = await fetch(fileUri).then((r) => r.blob());\r\n  const endpoint = `https://${BUNNY_STORAGE_ZONE}.storage.bunnycdn.com/${storagePath}/${Date.now()}`;\r\n  const res = await fetch(endpoint, {\r\n    method: 'PUT',\r\n    headers: {\r\n      AccessKey: BUNNY_STORAGE_API_KEY,\r\n      'Content-Type': blob.type,\r\n    },\r\n    body: blob,\r\n  });\r\n  if (!res.ok) {\r\n    throw new Error('Bunny image upload failed');\r\n  }\r\n  return `https://${BUNNY_STORAGE_ZONE}.b-cdn.net/${storagePath}/${Date.now()}`;\r\n}\r\n\r\nexport async function createVideoMeta({ Title, Description }) {\r\n  const res = await fetch(\r\n    `https://video.bunnycdn.com/library/${BUNNY_STREAM_LIBRARY_ID}/videos`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        accessKey: BUNNY_STREAM_API_KEY,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ Title, Description }),\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    throw new Error('Bunny video meta create failed');\r\n  }\r\n  return res.json(); // { Id, UploadUrl, ... }\r\n}\r\n\r\nexport async function uploadVideoBunny(uploadUrl, fileUri) {\r\n  const blob = await fetch(fileUri).then((r) => r.blob());\r\n  const res = await fetch(uploadUrl, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': blob.type },\r\n    body: blob,\r\n  });\r\n  if (!res.ok) {\r\n    throw new Error('Bunny video upload failed');\r\n  }\r\n}\r\n\r\nexport async function getPlaybackUrlBunny(videoId) {\r\n  const res = await fetch(\r\n    `https://video.bunnycdn.com/library/${BUNNY_STREAM_LIBRARY_ID}/videos/${videoId}`,\r\n    { headers: { AccessKey: BUNNY_STREAM_API_KEY } }\r\n  );\r\n  if (!res.ok) {\r\n    throw new Error('Bunny get playback URL failed');\r\n  }\r\n  const data = await res.json();\r\n  return data.Url || data.playbackUrl;\r\n} "],"mappings":";AAAA,OAAOA,SAAS,MAAM,gBAAgB;AAEtC,IAAAC,IAAA,GAKID,SAAS,CAACE,UAAU,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG;EAJ3CC,kBAAkB,GAAAL,IAAA,CAAlBK,kBAAkB;EAClBC,qBAAqB,GAAAN,IAAA,CAArBM,qBAAqB;EACrBC,uBAAuB,GAAAP,IAAA,CAAvBO,uBAAuB;EACvBC,oBAAoB,GAAAR,IAAA,CAApBQ,oBAAoB;AAGtB,gBAAsBC,gBAAgBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAerC,SAAAF,kBAAA;EAAAA,iBAAA,GAAAG,iBAAA,CAfM,WAAgCC,OAAO,EAAEC,WAAW,EAAE;IAC3D,IAAMC,IAAI,SAASC,KAAK,CAACH,OAAO,CAAC,CAACI,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACH,IAAI,CAAC,CAAC;IAAA,EAAC;IACvD,IAAMI,QAAQ,GAAG,WAAWjB,kBAAkB,yBAAyBY,WAAW,IAAIM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IAClG,IAAMC,GAAG,SAASN,KAAK,CAACG,QAAQ,EAAE;MAChCI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,SAAS,EAAEtB,qBAAqB;QAChC,cAAc,EAAEY,IAAI,CAACW;MACvB,CAAC;MACDC,IAAI,EAAEZ;IACR,CAAC,CAAC;IACF,IAAI,CAACO,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IACA,OAAO,WAAW3B,kBAAkB,cAAcY,WAAW,IAAIM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;EAC/E,CAAC;EAAA,OAAAZ,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBmB,eAAeA,CAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAgBpC,SAAAqB,iBAAA;EAAAA,gBAAA,GAAApB,iBAAA,CAhBM,WAAAqB,KAAA,EAAuD;IAAA,IAAtBC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAAEC,WAAW,GAAAF,KAAA,CAAXE,WAAW;IACxD,IAAMb,GAAG,SAASN,KAAK,CACrB,sCAAsCZ,uBAAuB,SAAS,EACtE;MACEmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPY,SAAS,EAAE/B,oBAAoB;QAC/B,cAAc,EAAE;MAClB,CAAC;MACDsB,IAAI,EAAEU,IAAI,CAACC,SAAS,CAAC;QAAEJ,KAAK,EAALA,KAAK;QAAEC,WAAW,EAAXA;MAAY,CAAC;IAC7C,CACF,CAAC;IACD,IAAI,CAACb,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IACnD;IACA,OAAOP,GAAG,CAACiB,IAAI,CAAC,CAAC;EACnB,CAAC;EAAA,OAAAP,gBAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsB6B,gBAAgBA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAAjC,KAAA,OAAAC,SAAA;AAAA;AAUrC,SAAAgC,kBAAA;EAAAA,iBAAA,GAAA/B,iBAAA,CAVM,WAAgCgC,SAAS,EAAE/B,OAAO,EAAE;IACzD,IAAME,IAAI,SAASC,KAAK,CAACH,OAAO,CAAC,CAACI,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACH,IAAI,CAAC,CAAC;IAAA,EAAC;IACvD,IAAMO,GAAG,SAASN,KAAK,CAAC4B,SAAS,EAAE;MACjCrB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAET,IAAI,CAACW;MAAK,CAAC;MACtCC,IAAI,EAAEZ;IACR,CAAC,CAAC;IACF,IAAI,CAACO,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC;EAAA,OAAAc,iBAAA,CAAAjC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBkC,mBAAmBA,CAAAC,GAAA;EAAA,OAAAC,oBAAA,CAAArC,KAAA,OAAAC,SAAA;AAAA;AAUxC,SAAAoC,qBAAA;EAAAA,oBAAA,GAAAnC,iBAAA,CAVM,WAAmCoC,OAAO,EAAE;IACjD,IAAM1B,GAAG,SAASN,KAAK,CACrB,sCAAsCZ,uBAAuB,WAAW4C,OAAO,EAAE,EACjF;MAAExB,OAAO,EAAE;QAAEC,SAAS,EAAEpB;MAAqB;IAAE,CACjD,CAAC;IACD,IAAI,CAACiB,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACA,IAAMoB,IAAI,SAAS3B,GAAG,CAACiB,IAAI,CAAC,CAAC;IAC7B,OAAOU,IAAI,CAACC,GAAG,IAAID,IAAI,CAACE,WAAW;EACrC,CAAC;EAAA,OAAAJ,oBAAA,CAAArC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}