{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Text, Card, Button, Icon } from 'react-native-elements';\nimport theme from \"../../theme\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from \"../../utils/firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SeriesScreen = function SeriesScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    seriesList = _useState2[0],\n    setSeriesList = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchSeries = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var snap = yield getDocs(collection(db, 'series'));\n        setSeriesList(snap.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        }));\n      });\n      return function fetchSeries() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchSeries();\n  }, []);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(Card, {\n      containerStyle: styles.card,\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: item.title || 'Untitled Series'\n        }), _jsx(Icon, {\n          name: \"edit\",\n          type: \"feather\",\n          color: theme.colors.accent,\n          onPress: function onPress() {\n            return navigation.navigate('SeriesEdit', {\n              id: item.id\n            });\n          }\n        })]\n      }), _jsx(Text, {\n        style: styles.cardSubtitle,\n        children: item.description || 'No description'\n      }), _jsx(Button, {\n        icon: _jsx(Icon, {\n          name: \"chevron-right\",\n          type: \"feather\",\n          color: theme.colors.white\n        }),\n        title: \"Manage Episodes\",\n        buttonStyle: [styles.button, {\n          backgroundColor: theme.colors.primary\n        }],\n        onPress: function onPress() {\n          return navigation.navigate('Episodes', {\n            seriesId: item.id\n          });\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerRow,\n      children: [_jsx(Text, {\n        h4: true,\n        style: styles.header,\n        children: \"Series Management\"\n      }), _jsx(Icon, {\n        name: \"plus-circle\",\n        type: \"feather\",\n        color: theme.colors.success,\n        size: 28,\n        onPress: function onPress() {\n          return navigation.navigate('SeriesAdd');\n        }\n      })]\n    }), _jsx(FlatList, {\n      data: seriesList,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: styles.list\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.large\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.large\n  },\n  header: {\n    color: theme.colors.text\n  },\n  list: {\n    paddingBottom: theme.spacing.large\n  },\n  card: _objectSpread({\n    borderRadius: theme.borderRadius.medium,\n    backgroundColor: theme.colors.backgroundLight\n  }, theme.shadows.medium),\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small\n  },\n  cardTitle: {\n    fontSize: theme.typography.fontSize.large,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text\n  },\n  cardSubtitle: {\n    fontSize: theme.typography.fontSize.medium,\n    color: theme.colors.textSecondary,\n    marginBottom: theme.spacing.small\n  },\n  button: {\n    borderRadius: theme.borderRadius.small,\n    paddingVertical: theme.spacing.small\n  }\n});\nexport default SeriesScreen;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","FlatList","Text","Card","Button","Icon","theme","collection","getDocs","db","useNavigation","jsx","_jsx","jsxs","_jsxs","SeriesScreen","_useState","_useState2","_slicedToArray","seriesList","setSeriesList","navigation","fetchSeries","_ref","_asyncToGenerator","snap","docs","map","doc","_objectSpread","id","data","apply","arguments","renderItem","_ref2","item","containerStyle","styles","card","children","style","cardHeader","cardTitle","title","name","type","color","colors","accent","onPress","navigate","cardSubtitle","description","icon","white","buttonStyle","button","backgroundColor","primary","seriesId","container","headerRow","h4","header","success","size","keyExtractor","contentContainerStyle","list","create","flex","background","padding","spacing","large","flexDirection","justifyContent","alignItems","marginBottom","text","paddingBottom","borderRadius","medium","backgroundLight","shadows","small","fontSize","typography","fontWeight","bold","textSecondary","paddingVertical"],"sources":["E:/bigshow/src/screens/admin/SeriesScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet, FlatList } from 'react-native';\r\nimport { Text, Card, Button, Icon } from 'react-native-elements';\r\nimport theme from '../../theme';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../../utils/firebase';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SeriesScreen = () => {\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const fetchSeries = async () => {\r\n      const snap = await getDocs(collection(db, 'series'));\r\n      setSeriesList(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n    };\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Card containerStyle={styles.card}>\r\n      <View style={styles.cardHeader}>\r\n        <Text style={styles.cardTitle}>{item.title || 'Untitled Series'}</Text>\r\n        <Icon name=\"edit\" type=\"feather\" color={theme.colors.accent} onPress={() => navigation.navigate('SeriesEdit', { id: item.id })} />\r\n      </View>\r\n      <Text style={styles.cardSubtitle}>{item.description || 'No description'}</Text>\r\n      <Button\r\n        icon={<Icon name=\"chevron-right\" type=\"feather\" color={theme.colors.white} />}\r\n        title=\"Manage Episodes\"\r\n        buttonStyle={[styles.button, { backgroundColor: theme.colors.primary }]}\r\n        onPress={() => navigation.navigate('Episodes', { seriesId: item.id })}\r\n      />\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerRow}>\r\n        <Text h4 style={styles.header}>Series Management</Text>\r\n        <Icon\r\n          name=\"plus-circle\"\r\n          type=\"feather\"\r\n          color={theme.colors.success}\r\n          size={28}\r\n          onPress={() => navigation.navigate('SeriesAdd')}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={seriesList}\r\n        keyExtractor={item => item.id}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={styles.list}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    padding: theme.spacing.large,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  header: {\r\n    color: theme.colors.text,\r\n  },\r\n  list: {\r\n    paddingBottom: theme.spacing.large,\r\n  },\r\n  card: {\r\n    borderRadius: theme.borderRadius.medium,\r\n    backgroundColor: theme.colors.backgroundLight,\r\n    ...theme.shadows.medium,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n  cardTitle: {\r\n    fontSize: theme.typography.fontSize.large,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n    color: theme.colors.text,\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: theme.typography.fontSize.medium,\r\n    color: theme.colors.textSecondary,\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n  button: {\r\n    borderRadius: theme.borderRadius.small,\r\n    paddingVertical: theme.spacing.small,\r\n  },\r\n});\r\n\r\nexport default SeriesScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}