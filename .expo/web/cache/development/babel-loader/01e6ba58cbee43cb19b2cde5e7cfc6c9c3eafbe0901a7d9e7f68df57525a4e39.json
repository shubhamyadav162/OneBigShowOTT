{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text, Button, Input, Icon, Card, Divider, CheckBox } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport theme from \"../../theme\";\nimport { db, storage } from \"../../utils/firebase\";\nimport { collection, getDocs, addDoc, updateDoc, doc, serverTimestamp, query, where } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { uploadImageBunny, createVideoMeta, uploadVideoBunny, getPlaybackUrlBunny } from \"../../utils/bunnyApi\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContentManagementScreen = function ContentManagementScreen() {\n  var navigation = useNavigation();\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    appTheme = _useTheme.theme;\n  var titleInputRef = useRef(null);\n  var descriptionInputRef = useRef(null);\n  var screenWidth = Dimensions.get('window').width;\n  var isMobile = screenWidth < 768;\n  var _useState = useState('content'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeSection = _useState2[0],\n    setActiveSection = _useState2[1];\n  var _useState3 = useState('seriesList'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeView = _useState4[0],\n    setActiveView = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedSeriesId = _useState6[0],\n    setSelectedSeriesId = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    seriesList = _useState8[0],\n    setSeriesList = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    loading = _useState0[0],\n    setLoading = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    seriesTitle = _useState10[0],\n    setSeriesTitle = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    seriesDescription = _useState12[0],\n    setSeriesDescription = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    seriesGenre = _useState14[0],\n    setSeriesGenre = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    seriesThumbnail = _useState16[0],\n    setSeriesThumbnail = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    seriesBanner = _useState18[0],\n    setSeriesBanner = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isFeatured = _useState20[0],\n    setIsFeatured = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    releaseYear = _useState22[0],\n    setReleaseYear = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    episodes = _useState24[0],\n    setEpisodes = _useState24[1];\n  var _useState25 = useState({\n      title: '',\n      description: '',\n      thumbnailUri: null,\n      videoUri: null,\n      episodeNumber: 1,\n      duration: '',\n      playbackUrl: ''\n    }),\n    _useState26 = _slicedToArray(_useState25, 2),\n    newEpisode = _useState26[0],\n    setNewEpisode = _useState26[1];\n  useEffect(function () {\n    fetchSeries();\n  }, []);\n  var fetchSeries = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var snapshot = yield getDocs(collection(db, 'series'));\n        var series = snapshot.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        });\n        setSeriesList(series);\n      } catch (error) {\n        console.error('Error fetching series:', error);\n        Alert.alert('Error', 'Failed to load series data');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchSeries() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchEpisodes = function () {\n    var _ref2 = _asyncToGenerator(function* (seriesId) {\n      setLoading(true);\n      try {\n        var q = query(collection(db, 'episodes'), where('seriesId', '==', seriesId));\n        var snapshot = yield getDocs(q);\n        var _episodes = snapshot.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        });\n        setEpisodes(_episodes);\n      } catch (error) {\n        console.error('Error fetching episodes:', error);\n        Alert.alert('Error', 'Failed to load episodes data');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchEpisodes(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref3 = _asyncToGenerator(function* (setter) {\n      var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission required', 'Camera roll permission is required to select images.');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 0.8,\n        aspect: [16, 9]\n      });\n      if (!result.canceled) {\n        setter(result.assets[0].uri);\n      }\n    });\n    return function pickImage(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var pickVideo = function () {\n    var _ref4 = _asyncToGenerator(function* (setter) {\n      var _yield$ImagePicker$re2 = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re2.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission required', 'Camera roll permission is required to select video.');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Videos,\n        quality: 0.8\n      });\n      if (!result.canceled) {\n        setter(result.assets[0].uri);\n      }\n    });\n    return function pickVideo(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var uploadImage = function () {\n    var _ref5 = _asyncToGenerator(function* (uri, path) {\n      if (!uri) return null;\n      try {\n        if (Platform.OS === 'web') {\n          return yield uploadImageBunny(uri, path);\n        }\n        var response = yield fetch(uri);\n        var blob = yield response.blob();\n        var fileName = `${path}_${Date.now()}`;\n        var storageRef = ref(storage, `${path}/${fileName}`);\n        yield uploadBytes(storageRef, blob);\n        return yield getDownloadURL(storageRef);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        throw error;\n      }\n    });\n    return function uploadImage(_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var saveSeries = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (!seriesTitle.trim()) {\n        Alert.alert('Validation', 'Please enter a title for the series');\n        return;\n      }\n      setLoading(true);\n      try {\n        var thumbnailUrl = yield uploadImage(seriesThumbnail, 'series_thumbnails');\n        var bannerUrl = yield uploadImage(seriesBanner, 'series_banners');\n        yield addDoc(collection(db, 'series'), {\n          title: seriesTitle.trim(),\n          description: seriesDescription.trim(),\n          genre: seriesGenre.trim(),\n          thumbnailUrl: thumbnailUrl,\n          bannerUrl: bannerUrl,\n          isFeatured: isFeatured,\n          releaseYear: releaseYear.trim(),\n          createdAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        Alert.alert('Success', 'Series created successfully');\n        resetSeriesForm();\n        fetchSeries();\n        setActiveView('seriesList');\n      } catch (error) {\n        console.error('Error creating series:', error);\n        Alert.alert('Error', 'Failed to create series. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function saveSeries() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var saveEpisode = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      if (!newEpisode.title.trim() || !selectedSeriesId) {\n        Alert.alert('Validation', 'Please enter a title for the episode');\n        return;\n      }\n      setLoading(true);\n      try {\n        var thumbnailUrl = yield uploadImage(newEpisode.thumbnailUri, 'episode_thumbnails');\n        var playbackUrl = newEpisode.playbackUrl;\n        if (Platform.OS === 'web' && newEpisode.videoUri) {\n          var _yield$createVideoMet = yield createVideoMeta({\n              Title: newEpisode.title.trim(),\n              Description: newEpisode.description.trim()\n            }),\n            Id = _yield$createVideoMet.Id,\n            UploadUrl = _yield$createVideoMet.UploadUrl;\n          yield uploadVideoBunny(UploadUrl, newEpisode.videoUri);\n          playbackUrl = yield getPlaybackUrlBunny(Id);\n        }\n        yield addDoc(collection(db, 'episodes'), {\n          seriesId: selectedSeriesId,\n          title: newEpisode.title.trim(),\n          description: newEpisode.description.trim(),\n          thumbnailUrl: thumbnailUrl,\n          videoUrl: playbackUrl,\n          episodeNumber: Number(newEpisode.episodeNumber) || 1,\n          duration: newEpisode.duration.trim(),\n          createdAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        setNewEpisode({\n          title: '',\n          description: '',\n          thumbnailUri: null,\n          videoUri: null,\n          playbackUrl: '',\n          episodeNumber: episodes.length + 1,\n          duration: ''\n        });\n        fetchEpisodes(selectedSeriesId);\n        Alert.alert('Success', 'Episode added successfully');\n      } catch (error) {\n        console.error('Error adding episode:', error);\n        Alert.alert('Error', 'Failed to add episode. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function saveEpisode() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var resetSeriesForm = function resetSeriesForm() {\n    setSeriesTitle('');\n    setSeriesDescription('');\n    setSeriesGenre('');\n    setSeriesThumbnail(null);\n    setSeriesBanner(null);\n    setIsFeatured(false);\n    setReleaseYear('');\n  };\n  var viewSeries = function viewSeries(series) {\n    setSelectedSeriesId(series.id);\n    fetchEpisodes(series.id);\n    setActiveView('viewSeries');\n  };\n  var SeriesListView = function SeriesListView() {\n    return _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.headerWithActions,\n        children: [_jsx(Text, {\n          h4: true,\n          style: styles.headerText,\n          children: \"Series Management\"\n        }), _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"plus\",\n            type: \"feather\",\n            color: \"#fff\",\n            size: 16,\n            style: {\n              marginRight: 10\n            }\n          }),\n          title: \"Add New Series\",\n          onPress: function onPress() {\n            return setActiveView('addSeries');\n          },\n          buttonStyle: styles.primaryButton\n        })]\n      }), loading ? _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary,\n        style: styles.loader\n      }) : _jsx(ScrollView, {\n        children: seriesList.length === 0 ? _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No series found. Create your first series!\"\n        }) : seriesList.map(function (series) {\n          return _jsxs(Card, {\n            containerStyle: styles.seriesCard,\n            children: [_jsxs(View, {\n              style: styles.seriesCardContent,\n              children: [_jsx(Image, {\n                source: {\n                  uri: series.thumbnailUrl || 'https://via.placeholder.com/150'\n                },\n                style: styles.seriesThumbnail\n              }), _jsxs(View, {\n                style: styles.seriesInfo,\n                children: [_jsx(Text, {\n                  style: styles.seriesTitle,\n                  children: series.title\n                }), _jsx(Text, {\n                  style: styles.seriesDescription,\n                  numberOfLines: 2,\n                  children: series.description || 'No description'\n                }), series.genre && _jsxs(Text, {\n                  style: styles.seriesGenre,\n                  children: [\"Genre: \", series.genre]\n                }), series.releaseYear && _jsxs(Text, {\n                  style: styles.seriesReleaseYear,\n                  children: [\"Released: \", series.releaseYear]\n                }), series.isFeatured && _jsx(View, {\n                  style: styles.featuredBadge,\n                  children: _jsx(Text, {\n                    style: styles.featuredText,\n                    children: \"Featured\"\n                  })\n                })]\n              })]\n            }), _jsx(Divider, {\n              style: styles.cardDivider\n            }), _jsxs(View, {\n              style: styles.cardActions,\n              children: [_jsx(Button, {\n                icon: _jsx(Icon, {\n                  name: \"eye\",\n                  type: \"feather\",\n                  color: \"#fff\",\n                  size: 16\n                }),\n                title: \"View & Manage\",\n                onPress: function onPress() {\n                  return viewSeries(series);\n                },\n                buttonStyle: [styles.actionButton, styles.viewButton]\n              }), _jsx(Button, {\n                icon: _jsx(Icon, {\n                  name: \"edit-2\",\n                  type: \"feather\",\n                  color: \"#fff\",\n                  size: 16\n                }),\n                title: \"Edit\",\n                onPress: function onPress() {\n                  return navigation.navigate('SeriesEdit', {\n                    id: series.id\n                  });\n                },\n                buttonStyle: [styles.actionButton, styles.editButton]\n              })]\n            })]\n          }, series.id);\n        })\n      })]\n    });\n  };\n  var AddSeriesView = function AddSeriesView() {\n    return _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.headerWithActions,\n        children: [_jsx(Text, {\n          h4: true,\n          style: styles.headerText,\n          children: \"Add New Series\"\n        }), _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"#fff\",\n            size: 16,\n            style: {\n              marginRight: 10\n            }\n          }),\n          title: \"Back to Series\",\n          onPress: function onPress() {\n            return setActiveView('seriesList');\n          },\n          buttonStyle: styles.secondaryButton\n        })]\n      }), _jsxs(ScrollView, {\n        style: styles.formContainer,\n        keyboardShouldPersistTaps: \"always\",\n        keyboardDismissMode: \"none\",\n        children: [_jsx(Input, {\n          ref: titleInputRef,\n          label: \"Series Title *\",\n          placeholder: \"Enter series title\",\n          value: seriesTitle,\n          onChangeText: setSeriesTitle,\n          leftIcon: _jsx(Icon, {\n            name: \"edit-3\",\n            type: \"feather\",\n            size: 24,\n            color: \"#555\"\n          }),\n          containerStyle: styles.inputContainer\n        }), _jsx(Input, {\n          ref: descriptionInputRef,\n          label: \"Description\",\n          placeholder: \"Enter series description\",\n          value: seriesDescription,\n          onChangeText: setSeriesDescription,\n          multiline: true,\n          numberOfLines: 4,\n          blurOnSubmit: false,\n          leftIcon: _jsx(Icon, {\n            name: \"align-left\",\n            type: \"feather\",\n            size: 24,\n            color: \"#555\"\n          }),\n          containerStyle: styles.inputContainer,\n          inputStyle: styles.textArea\n        }), _jsx(Input, {\n          label: \"Genre\",\n          placeholder: \"E.g., Action, Comedy, Drama\",\n          value: seriesGenre,\n          onChangeText: setSeriesGenre,\n          leftIcon: _jsx(Icon, {\n            name: \"film\",\n            type: \"feather\",\n            size: 24,\n            color: \"#555\"\n          }),\n          containerStyle: styles.inputContainer\n        }), _jsx(Input, {\n          label: \"Release Year\",\n          placeholder: \"E.g., 2023\",\n          value: releaseYear,\n          onChangeText: setReleaseYear,\n          keyboardType: \"numeric\",\n          leftIcon: _jsx(Icon, {\n            name: \"calendar\",\n            type: \"feather\",\n            size: 24,\n            color: \"#555\"\n          }),\n          containerStyle: styles.inputContainer\n        }), _jsx(CheckBox, {\n          title: \"Featured Series\",\n          checked: isFeatured,\n          onPress: function onPress() {\n            return setIsFeatured(!isFeatured);\n          },\n          containerStyle: styles.checkboxContainer\n        }), _jsxs(View, {\n          style: styles.imageSelectionContainer,\n          children: [_jsx(Text, {\n            style: styles.imageLabel,\n            children: \"Thumbnail Image\"\n          }), _jsx(Button, {\n            icon: _jsx(Icon, {\n              name: \"image\",\n              type: \"feather\",\n              color: \"#fff\",\n              size: 16,\n              style: {\n                marginRight: 10\n              }\n            }),\n            title: seriesThumbnail ? \"Change Thumbnail\" : \"Select Thumbnail\",\n            onPress: function onPress() {\n              return pickImage(setSeriesThumbnail);\n            },\n            buttonStyle: styles.imageButton,\n            containerStyle: styles.imageButtonContainer\n          }), seriesThumbnail && _jsx(Image, {\n            source: {\n              uri: seriesThumbnail\n            },\n            style: styles.selectedImage\n          })]\n        }), _jsxs(View, {\n          style: styles.imageSelectionContainer,\n          children: [_jsx(Text, {\n            style: styles.imageLabel,\n            children: \"Banner Image (16:9 ratio recommended)\"\n          }), _jsx(Button, {\n            icon: _jsx(Icon, {\n              name: \"image\",\n              type: \"feather\",\n              color: \"#fff\",\n              size: 16,\n              style: {\n                marginRight: 10\n              }\n            }),\n            title: seriesBanner ? \"Change Banner\" : \"Select Banner\",\n            onPress: function onPress() {\n              return pickImage(setSeriesBanner);\n            },\n            buttonStyle: styles.imageButton,\n            containerStyle: styles.imageButtonContainer\n          }), seriesBanner && _jsx(Image, {\n            source: {\n              uri: seriesBanner\n            },\n            style: styles.selectedBanner\n          })]\n        }), _jsx(Button, {\n          title: loading ? \"Saving...\" : \"Save Series\",\n          onPress: saveSeries,\n          disabled: loading || !seriesTitle.trim(),\n          buttonStyle: styles.saveButton,\n          containerStyle: styles.saveButtonContainer,\n          icon: _jsx(Icon, {\n            name: \"check\",\n            type: \"feather\",\n            color: \"#fff\",\n            size: 16,\n            style: {\n              marginRight: 10\n            }\n          })\n        })]\n      })]\n    });\n  };\n  var ViewSeriesView = function ViewSeriesView() {\n    var series = seriesList.find(function (s) {\n      return s.id === selectedSeriesId;\n    });\n    if (!series) {\n      return _jsxs(View, {\n        style: styles.contentContainer,\n        children: [_jsx(Text, {\n          children: \"Series not found\"\n        }), _jsx(Button, {\n          title: \"Back to Series List\",\n          onPress: function onPress() {\n            return setActiveView('seriesList');\n          },\n          buttonStyle: styles.secondaryButton\n        })]\n      });\n    }\n    return _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.headerWithActions,\n        children: [_jsxs(Text, {\n          h4: true,\n          style: styles.headerText,\n          children: [\"Managing: \", series.title]\n        }), _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"#fff\",\n            size: 16,\n            style: {\n              marginRight: 10\n            }\n          }),\n          title: \"Back to Series\",\n          onPress: function onPress() {\n            return setActiveView('seriesList');\n          },\n          buttonStyle: styles.secondaryButton\n        })]\n      }), _jsxs(ScrollView, {\n        children: [_jsxs(Card, {\n          containerStyle: styles.detailCard,\n          children: [_jsx(Card.Title, {\n            h4: true,\n            children: \"Series Details\"\n          }), _jsx(Card.Divider, {}), _jsxs(View, {\n            style: styles.seriesDetailRow,\n            children: [series.thumbnailUrl && _jsx(Image, {\n              source: {\n                uri: series.thumbnailUrl\n              },\n              style: styles.detailThumbnail\n            }), _jsxs(View, {\n              style: styles.detailInfo,\n              children: [_jsx(Text, {\n                style: styles.detailTitle,\n                children: series.title\n              }), _jsx(Text, {\n                style: styles.detailDescription,\n                children: series.description\n              }), _jsxs(View, {\n                style: styles.detailMetadata,\n                children: [series.genre && _jsxs(Text, {\n                  style: styles.metadataItem,\n                  children: [\"Genre: \", series.genre]\n                }), series.releaseYear && _jsxs(Text, {\n                  style: styles.metadataItem,\n                  children: [\"Released: \", series.releaseYear]\n                }), _jsxs(Text, {\n                  style: styles.metadataItem,\n                  children: [\"Status: \", series.isFeatured ? 'Featured' : 'Standard']\n                })]\n              })]\n            })]\n          }), _jsx(Button, {\n            icon: _jsx(Icon, {\n              name: \"edit-2\",\n              type: \"feather\",\n              color: \"#fff\",\n              size: 16\n            }),\n            title: \"Edit Series Details\",\n            onPress: function onPress() {\n              return navigation.navigate('SeriesEdit', {\n                id: series.id\n              });\n            },\n            buttonStyle: styles.actionButton,\n            containerStyle: {\n              marginTop: 10\n            }\n          })]\n        }), _jsxs(Card, {\n          containerStyle: styles.episodesCard,\n          children: [_jsx(Card.Title, {\n            h4: true,\n            children: \"Episodes\"\n          }), _jsx(Card.Divider, {}), episodes.length > 0 ? episodes.map(function (episode, index) {\n            return _jsxs(View, {\n              style: styles.episodeItem,\n              children: [_jsxs(View, {\n                style: styles.episodeHeader,\n                children: [_jsx(View, {\n                  style: styles.episodeNumberContainer,\n                  children: _jsx(Text, {\n                    style: styles.episodeNumber,\n                    children: episode.episodeNumber || index + 1\n                  })\n                }), _jsxs(View, {\n                  style: styles.episodeInfo,\n                  children: [_jsx(Text, {\n                    style: styles.episodeTitle,\n                    children: episode.title\n                  }), _jsx(Text, {\n                    style: styles.episodeDuration,\n                    children: episode.duration || 'No duration set'\n                  })]\n                }), _jsx(TouchableOpacity, {\n                  style: styles.episodeEditButton,\n                  onPress: function onPress() {\n                    return navigation.navigate('EpisodeEdit', {\n                      id: episode.id\n                    });\n                  },\n                  children: _jsx(Icon, {\n                    name: \"edit-2\",\n                    type: \"feather\",\n                    size: 20,\n                    color: theme.colors.primary\n                  })\n                })]\n              }), episode.thumbnailUrl && _jsx(Image, {\n                source: {\n                  uri: episode.thumbnailUrl\n                },\n                style: styles.episodeThumbnail\n              }), _jsx(Text, {\n                style: styles.episodeDescription,\n                children: episode.description || 'No description'\n              }), _jsx(Text, {\n                style: styles.videoUrl,\n                children: episode.videoUrl ? 'Video URL: Set ✓' : 'Video URL: Not set ✗'\n              }), _jsx(Divider, {\n                style: {\n                  marginTop: 10\n                }\n              })]\n            }, episode.id);\n          }) : _jsx(Text, {\n            style: styles.emptyText,\n            children: \"No episodes yet. Add your first episode below.\"\n          }), _jsxs(View, {\n            style: styles.addEpisodeForm,\n            children: [_jsx(Text, {\n              h4: true,\n              style: styles.formTitle,\n              children: \"Add New Episode\"\n            }), _jsx(Input, {\n              label: \"Episode Title *\",\n              placeholder: \"Enter episode title\",\n              value: newEpisode.title,\n              onChangeText: function onChangeText(text) {\n                return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                  title: text\n                }));\n              },\n              containerStyle: styles.inputContainer\n            }), _jsx(Input, {\n              label: \"Description\",\n              placeholder: \"Enter episode description\",\n              value: newEpisode.description,\n              onChangeText: function onChangeText(text) {\n                return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                  description: text\n                }));\n              },\n              multiline: true,\n              numberOfLines: 3,\n              containerStyle: styles.inputContainer,\n              inputStyle: styles.textArea\n            }), _jsxs(View, {\n              style: styles.rowInputs,\n              children: [_jsx(Input, {\n                label: \"Episode Number\",\n                placeholder: \"1\",\n                value: String(newEpisode.episodeNumber),\n                onChangeText: function onChangeText(text) {\n                  return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                    episodeNumber: text\n                  }));\n                },\n                keyboardType: \"numeric\",\n                containerStyle: [styles.inputContainer, {\n                  flex: 1,\n                  marginRight: 10\n                }]\n              }), _jsx(Input, {\n                label: \"Duration\",\n                placeholder: \"e.g. 45 min\",\n                value: newEpisode.duration,\n                onChangeText: function onChangeText(text) {\n                  return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                    duration: text\n                  }));\n                },\n                containerStyle: [styles.inputContainer, {\n                  flex: 1\n                }]\n              })]\n            }), _jsxs(View, {\n              style: styles.imageSelectionContainer,\n              children: [_jsx(Text, {\n                style: styles.imageLabel,\n                children: \"Episode Video\"\n              }), _jsx(Button, {\n                icon: _jsx(Icon, {\n                  name: \"video\",\n                  type: \"feather\",\n                  color: \"#fff\",\n                  size: 16,\n                  style: {\n                    marginRight: 10\n                  }\n                }),\n                title: newEpisode.videoUri ? \"Change Video\" : \"Select Video\",\n                onPress: function onPress() {\n                  return pickVideo(function (uri) {\n                    return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                      videoUri: uri\n                    }));\n                  });\n                },\n                buttonStyle: styles.imageButton,\n                containerStyle: styles.imageButtonContainer\n              }), newEpisode.videoUri && _jsx(Text, {\n                children: \"Video selected - will upload on save\"\n              })]\n            }), _jsxs(View, {\n              style: styles.imageSelectionContainer,\n              children: [_jsx(Text, {\n                style: styles.imageLabel,\n                children: \"Episode Thumbnail\"\n              }), _jsx(Button, {\n                icon: _jsx(Icon, {\n                  name: \"image\",\n                  type: \"feather\",\n                  color: \"#fff\",\n                  size: 16,\n                  style: {\n                    marginRight: 10\n                  }\n                }),\n                title: newEpisode.thumbnailUri ? \"Change Thumbnail\" : \"Select Thumbnail\",\n                onPress: function onPress() {\n                  return pickImage(function (uri) {\n                    return setNewEpisode(_objectSpread(_objectSpread({}, newEpisode), {}, {\n                      thumbnailUri: uri\n                    }));\n                  });\n                },\n                buttonStyle: styles.imageButton,\n                containerStyle: styles.imageButtonContainer\n              }), newEpisode.thumbnailUri && _jsx(Image, {\n                source: {\n                  uri: newEpisode.thumbnailUri\n                },\n                style: styles.selectedImage\n              })]\n            }), _jsx(Button, {\n              title: loading ? \"Adding...\" : \"Add Episode\",\n              onPress: saveEpisode,\n              disabled: loading || !newEpisode.title.trim(),\n              buttonStyle: styles.saveButton,\n              containerStyle: styles.saveButtonContainer,\n              icon: _jsx(Icon, {\n                name: \"plus\",\n                type: \"feather\",\n                color: \"#fff\",\n                size: 16,\n                style: {\n                  marginRight: 10\n                }\n              })\n            })]\n          })]\n        })]\n      })]\n    });\n  };\n  useEffect(function () {\n    if (activeView === 'addSeries' && titleInputRef.current) {\n      titleInputRef.current.focus();\n    }\n  }, [activeView]);\n  useEffect(function () {\n    if (activeView === 'addSeries' && titleInputRef.current) {\n      titleInputRef.current.focus();\n    }\n  }, [seriesTitle]);\n  useEffect(function () {\n    if (activeView === 'addSeries' && descriptionInputRef.current) {\n      descriptionInputRef.current.focus();\n    }\n  }, [seriesDescription]);\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: appTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode,\n      notificationCount: 0,\n      onLogout: function onLogout() {},\n      onSettings: function onSettings() {\n        return navigation.navigate('Settings');\n      }\n    }), _jsxs(View, {\n      style: styles.bodyContainer,\n      children: [!isMobile && _jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: activeSection,\n        onSectionChange: setActiveSection\n      }), _jsxs(View, {\n        style: [styles.mainContent, {\n          backgroundColor: appTheme.colors.background\n        }],\n        children: [activeView === 'seriesList' && _jsx(SeriesListView, {}), activeView === 'addSeries' && _jsx(AddSeriesView, {}), activeView === 'viewSeries' && _jsx(ViewSeriesView, {})]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    minHeight: '100vh'\n  },\n  bodyContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    minHeight: 'calc(100vh - 64px)'\n  },\n  mainContent: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  contentContainer: {\n    padding: 20\n  },\n  headerWithActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  headerText: {\n    color: theme.colors.text\n  },\n  primaryButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  secondaryButton: {\n    backgroundColor: theme.colors.accent,\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  loader: {\n    marginTop: 50\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 30,\n    fontSize: 16,\n    color: theme.colors.textSecondary\n  },\n  seriesCard: {\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15\n  },\n  seriesCardContent: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  seriesThumbnail: {\n    width: 120,\n    height: 80,\n    borderRadius: 5\n  },\n  seriesInfo: {\n    flex: 1,\n    marginLeft: 15,\n    justifyContent: 'center'\n  },\n  seriesTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  seriesDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 5\n  },\n  seriesGenre: {\n    fontSize: 13,\n    color: '#777'\n  },\n  seriesReleaseYear: {\n    fontSize: 13,\n    color: '#777'\n  },\n  featuredBadge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: theme.colors.success,\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 10\n  },\n  featuredText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  cardDivider: {\n    marginVertical: 10\n  },\n  cardActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  actionButton: {\n    paddingHorizontal: 15,\n    height: 38\n  },\n  viewButton: {\n    backgroundColor: theme.colors.primary\n  },\n  editButton: {\n    backgroundColor: theme.colors.accent\n  },\n  formContainer: {\n    paddingBottom: 30\n  },\n  inputContainer: {\n    marginBottom: 15\n  },\n  textArea: {\n    minHeight: 80,\n    textAlignVertical: 'top'\n  },\n  checkboxContainer: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    marginLeft: 0,\n    marginTop: 5,\n    marginBottom: 15\n  },\n  imageSelectionContainer: {\n    marginBottom: 20\n  },\n  imageLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#86939e',\n    marginLeft: 10\n  },\n  imageButton: {\n    backgroundColor: theme.colors.primary\n  },\n  imageButtonContainer: {\n    marginBottom: 10\n  },\n  selectedImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  selectedBanner: {\n    width: '100%',\n    height: 150,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  saveButton: {\n    backgroundColor: theme.colors.success,\n    height: 50\n  },\n  saveButtonContainer: {\n    marginTop: 20,\n    marginBottom: 30\n  },\n  detailCard: {\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  seriesDetailRow: {\n    flexDirection: 'row'\n  },\n  detailThumbnail: {\n    width: 150,\n    height: 100,\n    borderRadius: 5\n  },\n  detailInfo: {\n    flex: 1,\n    marginLeft: 15\n  },\n  detailTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  detailDescription: {\n    fontSize: 14,\n    color: '#555',\n    marginBottom: 10\n  },\n  detailMetadata: {\n    marginTop: 5\n  },\n  metadataItem: {\n    fontSize: 13,\n    color: '#666',\n    marginBottom: 3\n  },\n  episodesCard: {\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  episodeItem: {\n    marginBottom: 15,\n    paddingBottom: 10\n  },\n  episodeHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  episodeNumberContainer: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10\n  },\n  episodeNumber: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  episodeInfo: {\n    flex: 1\n  },\n  episodeTitle: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  episodeDuration: {\n    fontSize: 12,\n    color: '#888'\n  },\n  episodeEditButton: {\n    padding: 5\n  },\n  episodeThumbnail: {\n    width: '100%',\n    height: 180,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  episodeDescription: {\n    fontSize: 14,\n    color: '#555',\n    marginVertical: 5\n  },\n  videoUrl: {\n    fontSize: 13,\n    color: '#777'\n  },\n  addEpisodeForm: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#eee'\n  },\n  formTitle: {\n    marginBottom: 15,\n    fontSize: 18\n  },\n  rowInputs: {\n    flexDirection: 'row'\n  }\n});\nvar ContentManagementScreenWithTheme = function ContentManagementScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(ContentManagementScreen, _objectSpread({}, props))\n  });\n};\nexport default ContentManagementScreenWithTheme;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","StyleSheet","ScrollView","TouchableOpacity","Image","Alert","ActivityIndicator","Dimensions","Platform","Text","Button","Input","Icon","Card","Divider","CheckBox","useNavigation","ImagePicker","theme","db","storage","collection","getDocs","addDoc","updateDoc","doc","serverTimestamp","query","where","ref","uploadBytes","getDownloadURL","HeaderBar","ThemeProvider","useTheme","Sidebar","uploadImageBunny","createVideoMeta","uploadVideoBunny","getPlaybackUrlBunny","jsx","_jsx","jsxs","_jsxs","ContentManagementScreen","navigation","_useTheme","isDarkMode","toggleTheme","appTheme","titleInputRef","descriptionInputRef","screenWidth","get","width","isMobile","_useState","_useState2","_slicedToArray","activeSection","setActiveSection","_useState3","_useState4","activeView","setActiveView","_useState5","_useState6","selectedSeriesId","setSelectedSeriesId","_useState7","_useState8","seriesList","setSeriesList","_useState9","_useState0","loading","setLoading","_useState1","_useState10","seriesTitle","setSeriesTitle","_useState11","_useState12","seriesDescription","setSeriesDescription","_useState13","_useState14","seriesGenre","setSeriesGenre","_useState15","_useState16","seriesThumbnail","setSeriesThumbnail","_useState17","_useState18","seriesBanner","setSeriesBanner","_useState19","_useState20","isFeatured","setIsFeatured","_useState21","_useState22","releaseYear","setReleaseYear","_useState23","_useState24","episodes","setEpisodes","_useState25","title","description","thumbnailUri","videoUri","episodeNumber","duration","playbackUrl","_useState26","newEpisode","setNewEpisode","fetchSeries","_ref","_asyncToGenerator","snapshot","series","docs","map","_objectSpread","id","data","error","console","alert","apply","arguments","fetchEpisodes","_ref2","seriesId","q","_x","pickImage","_ref3","setter","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","aspect","canceled","assets","uri","_x2","pickVideo","_ref4","_yield$ImagePicker$re2","Videos","_x3","uploadImage","_ref5","path","OS","response","fetch","blob","fileName","Date","now","storageRef","_x4","_x5","saveSeries","_ref6","trim","thumbnailUrl","bannerUrl","genre","createdAt","updatedAt","resetSeriesForm","saveEpisode","_ref7","_yield$createVideoMet","Title","Description","Id","UploadUrl","videoUrl","Number","length","viewSeries","SeriesListView","style","styles","contentContainer","children","headerWithActions","h4","headerText","icon","name","type","color","size","marginRight","onPress","buttonStyle","primaryButton","colors","primary","loader","emptyText","containerStyle","seriesCard","seriesCardContent","source","seriesInfo","numberOfLines","seriesReleaseYear","featuredBadge","featuredText","cardDivider","cardActions","actionButton","viewButton","navigate","editButton","AddSeriesView","secondaryButton","formContainer","keyboardShouldPersistTaps","keyboardDismissMode","label","placeholder","value","onChangeText","leftIcon","inputContainer","multiline","blurOnSubmit","inputStyle","textArea","keyboardType","checked","checkboxContainer","imageSelectionContainer","imageLabel","imageButton","imageButtonContainer","selectedImage","selectedBanner","disabled","saveButton","saveButtonContainer","ViewSeriesView","find","s","detailCard","seriesDetailRow","detailThumbnail","detailInfo","detailTitle","detailDescription","detailMetadata","metadataItem","marginTop","episodesCard","episode","index","episodeItem","episodeHeader","episodeNumberContainer","episodeInfo","episodeTitle","episodeDuration","episodeEditButton","episodeThumbnail","episodeDescription","addEpisodeForm","formTitle","text","rowInputs","String","flex","current","focus","container","backgroundColor","background","onToggleTheme","notificationCount","onLogout","onSettings","bodyContainer","onSectionChange","mainContent","create","minHeight","flexDirection","padding","justifyContent","alignItems","marginBottom","borderRadius","paddingHorizontal","accent","textAlign","fontSize","textSecondary","height","marginLeft","fontWeight","position","top","right","success","paddingVertical","marginVertical","paddingBottom","textAlignVertical","borderWidth","paddingTop","borderTopWidth","borderTopColor","ContentManagementScreenWithTheme","props"],"sources":["E:/bigshow/src/screens/admin/ContentManagementScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  View, \r\n  StyleSheet, \r\n  ScrollView, \r\n  TouchableOpacity, \r\n  Image, \r\n  Alert,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n  Platform\r\n} from 'react-native';\r\nimport { \r\n  Text, \r\n  Button, \r\n  Input, \r\n  Icon, \r\n  Card, \r\n  Divider,\r\n  CheckBox\r\n} from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport theme from '../../theme';\r\nimport { db, storage } from '../../utils/firebase';\r\nimport { \r\n  collection, \r\n  getDocs, \r\n  addDoc, \r\n  updateDoc, \r\n  doc, \r\n  serverTimestamp, \r\n  query,\r\n  where\r\n} from 'firebase/firestore';\r\nimport { \r\n  ref, \r\n  uploadBytes, \r\n  getDownloadURL \r\n} from 'firebase/storage';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport { uploadImageBunny, createVideoMeta, uploadVideoBunny, getPlaybackUrlBunny } from '../../utils/bunnyApi';\r\n\r\nconst ContentManagementScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { isDarkMode, toggleTheme, theme: appTheme } = useTheme();\r\n  // refs to keep focus on web inputs\r\n  const titleInputRef = useRef(null);\r\n  const descriptionInputRef = useRef(null);\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const isMobile = screenWidth < 768;\r\n  const [activeSection, setActiveSection] = useState('content');\r\n\r\n  // States for series\r\n  const [activeView, setActiveView] = useState('seriesList'); // seriesList, addSeries, viewSeries\r\n  const [selectedSeriesId, setSelectedSeriesId] = useState(null);\r\n  const [seriesList, setSeriesList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // States for managing series\r\n  const [seriesTitle, setSeriesTitle] = useState('');\r\n  const [seriesDescription, setSeriesDescription] = useState('');\r\n  const [seriesGenre, setSeriesGenre] = useState('');\r\n  const [seriesThumbnail, setSeriesThumbnail] = useState(null);\r\n  const [seriesBanner, setSeriesBanner] = useState(null);\r\n  const [isFeatured, setIsFeatured] = useState(false);\r\n  const [releaseYear, setReleaseYear] = useState('');\r\n\r\n  // States for episodes\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [newEpisode, setNewEpisode] = useState({\r\n    title: '', \r\n    description: '', \r\n    thumbnailUri: null,\r\n    videoUri: null,\r\n    episodeNumber: 1,\r\n    duration: '',\r\n    playbackUrl: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchSeries();\r\n  }, []);\r\n\r\n  const fetchSeries = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const snapshot = await getDocs(collection(db, 'series'));\r\n      const series = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setSeriesList(series);\r\n    } catch (error) {\r\n      console.error('Error fetching series:', error);\r\n      Alert.alert('Error', 'Failed to load series data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEpisodes = async (seriesId) => {\r\n    setLoading(true);\r\n    try {\r\n      const q = query(collection(db, 'episodes'), where('seriesId', '==', seriesId));\r\n      const snapshot = await getDocs(q);\r\n      const episodes = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setEpisodes(episodes);\r\n    } catch (error) {\r\n      console.error('Error fetching episodes:', error);\r\n      Alert.alert('Error', 'Failed to load episodes data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const pickImage = async (setter) => {\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission required', 'Camera roll permission is required to select images.');\r\n      return;\r\n    }\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      quality: 0.8,\r\n      aspect: [16, 9]\r\n    });\r\n    if (!result.canceled) {\r\n      setter(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  const pickVideo = async (setter) => {\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission required', 'Camera roll permission is required to select video.');\r\n      return;\r\n    }\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Videos,\r\n      quality: 0.8,\r\n    });\r\n    if (!result.canceled) {\r\n      setter(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (uri, path) => {\r\n    if (!uri) return null;\r\n    \r\n    try {\r\n      if (Platform.OS === 'web') {\r\n        return await uploadImageBunny(uri, path);\r\n      }\r\n      const response = await fetch(uri);\r\n      const blob = await response.blob();\r\n      const fileName = `${path}_${Date.now()}`;\r\n      const storageRef = ref(storage, `${path}/${fileName}`);\r\n      await uploadBytes(storageRef, blob);\r\n      return await getDownloadURL(storageRef);\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const saveSeries = async () => {\r\n    if (!seriesTitle.trim()) {\r\n      Alert.alert('Validation', 'Please enter a title for the series');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Upload thumbnail and banner (Bunny on web)\r\n      const thumbnailUrl = await uploadImage(seriesThumbnail, 'series_thumbnails');\r\n      const bannerUrl = await uploadImage(seriesBanner, 'series_banners');\r\n\r\n      // Create series document\r\n      await addDoc(collection(db, 'series'), {\r\n        title: seriesTitle.trim(),\r\n        description: seriesDescription.trim(),\r\n        genre: seriesGenre.trim(),\r\n        thumbnailUrl,\r\n        bannerUrl,\r\n        isFeatured,\r\n        releaseYear: releaseYear.trim(),\r\n        createdAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n\r\n      Alert.alert('Success', 'Series created successfully');\r\n      resetSeriesForm();\r\n      fetchSeries();\r\n      setActiveView('seriesList');\r\n    } catch (error) {\r\n      console.error('Error creating series:', error);\r\n      Alert.alert('Error', 'Failed to create series. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveEpisode = async () => {\r\n    if (!newEpisode.title.trim() || !selectedSeriesId) {\r\n      Alert.alert('Validation', 'Please enter a title for the episode');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Upload thumbnail\r\n      const thumbnailUrl = await uploadImage(newEpisode.thumbnailUri, 'episode_thumbnails');\r\n      // Upload video via Bunny on web, else use provided playbackUrl or static URL\r\n      let playbackUrl = newEpisode.playbackUrl;\r\n      if (Platform.OS === 'web' && newEpisode.videoUri) {\r\n        const { Id, UploadUrl } = await createVideoMeta({ Title: newEpisode.title.trim(), Description: newEpisode.description.trim() });\r\n        await uploadVideoBunny(UploadUrl, newEpisode.videoUri);\r\n        playbackUrl = await getPlaybackUrlBunny(Id);\r\n      }\r\n      // Create episode document\r\n      await addDoc(collection(db, 'episodes'), {\r\n        seriesId: selectedSeriesId,\r\n        title: newEpisode.title.trim(),\r\n        description: newEpisode.description.trim(),\r\n        thumbnailUrl,\r\n        videoUrl: playbackUrl,\r\n        episodeNumber: Number(newEpisode.episodeNumber) || 1,\r\n        duration: newEpisode.duration.trim(),\r\n        createdAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp()\r\n      });\r\n\r\n      // Reset form and refresh episodes\r\n      setNewEpisode({\r\n        title: '', \r\n        description: '', \r\n        thumbnailUri: null,\r\n        videoUri: null,\r\n        playbackUrl: '',\r\n        episodeNumber: episodes.length + 1,\r\n        duration: ''\r\n      });\r\n      fetchEpisodes(selectedSeriesId);\r\n      Alert.alert('Success', 'Episode added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding episode:', error);\r\n      Alert.alert('Error', 'Failed to add episode. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetSeriesForm = () => {\r\n    setSeriesTitle('');\r\n    setSeriesDescription('');\r\n    setSeriesGenre('');\r\n    setSeriesThumbnail(null);\r\n    setSeriesBanner(null);\r\n    setIsFeatured(false);\r\n    setReleaseYear('');\r\n  };\r\n\r\n  const viewSeries = (series) => {\r\n    setSelectedSeriesId(series.id);\r\n    fetchEpisodes(series.id);\r\n    setActiveView('viewSeries');\r\n  };\r\n\r\n  const SeriesListView = () => (\r\n    <View style={styles.contentContainer}>\r\n      <View style={styles.headerWithActions}>\r\n        <Text h4 style={styles.headerText}>Series Management</Text>\r\n        <Button\r\n          icon={<Icon name=\"plus\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n          title=\"Add New Series\"\r\n          onPress={() => setActiveView('addSeries')}\r\n          buttonStyle={styles.primaryButton}\r\n        />\r\n      </View>\r\n\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} style={styles.loader} />\r\n      ) : (\r\n        <ScrollView>\r\n          {seriesList.length === 0 ? (\r\n            <Text style={styles.emptyText}>No series found. Create your first series!</Text>\r\n          ) : (\r\n            seriesList.map((series) => (\r\n              <Card key={series.id} containerStyle={styles.seriesCard}>\r\n                <View style={styles.seriesCardContent}>\r\n                  <Image \r\n                    source={{ uri: series.thumbnailUrl || 'https://via.placeholder.com/150' }} \r\n                    style={styles.seriesThumbnail} \r\n                  />\r\n                  <View style={styles.seriesInfo}>\r\n                    <Text style={styles.seriesTitle}>{series.title}</Text>\r\n                    <Text style={styles.seriesDescription} numberOfLines={2}>\r\n                      {series.description || 'No description'}\r\n                    </Text>\r\n                    {series.genre && (\r\n                      <Text style={styles.seriesGenre}>Genre: {series.genre}</Text>\r\n                    )}\r\n                    {series.releaseYear && (\r\n                      <Text style={styles.seriesReleaseYear}>Released: {series.releaseYear}</Text>\r\n                    )}\r\n                    {series.isFeatured && (\r\n                      <View style={styles.featuredBadge}>\r\n                        <Text style={styles.featuredText}>Featured</Text>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n                <Divider style={styles.cardDivider} />\r\n                <View style={styles.cardActions}>\r\n                  <Button\r\n                    icon={<Icon name=\"eye\" type=\"feather\" color=\"#fff\" size={16} />}\r\n                    title=\"View & Manage\"\r\n                    onPress={() => viewSeries(series)}\r\n                    buttonStyle={[styles.actionButton, styles.viewButton]}\r\n                  />\r\n                  <Button\r\n                    icon={<Icon name=\"edit-2\" type=\"feather\" color=\"#fff\" size={16} />}\r\n                    title=\"Edit\"\r\n                    onPress={() => navigation.navigate('SeriesEdit', { id: series.id })}\r\n                    buttonStyle={[styles.actionButton, styles.editButton]}\r\n                  />\r\n                </View>\r\n              </Card>\r\n            ))\r\n          )}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  const AddSeriesView = () => (\r\n    <View style={styles.contentContainer}>\r\n      <View style={styles.headerWithActions}>\r\n        <Text h4 style={styles.headerText}>Add New Series</Text>\r\n        <Button\r\n          icon={<Icon name=\"arrow-left\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n          title=\"Back to Series\"\r\n          onPress={() => setActiveView('seriesList')}\r\n          buttonStyle={styles.secondaryButton}\r\n        />\r\n      </View>\r\n\r\n      <ScrollView\r\n        style={styles.formContainer}\r\n        keyboardShouldPersistTaps=\"always\"\r\n        keyboardDismissMode=\"none\"\r\n      >\r\n        <Input\r\n          ref={titleInputRef}\r\n          label=\"Series Title *\"\r\n          placeholder=\"Enter series title\"\r\n          value={seriesTitle}\r\n          onChangeText={setSeriesTitle}\r\n          leftIcon={<Icon name=\"edit-3\" type=\"feather\" size={24} color=\"#555\" />}\r\n          containerStyle={styles.inputContainer}\r\n        />\r\n\r\n        <Input\r\n          ref={descriptionInputRef}\r\n          label=\"Description\"\r\n          placeholder=\"Enter series description\"\r\n          value={seriesDescription}\r\n          onChangeText={setSeriesDescription}\r\n          multiline\r\n          numberOfLines={4}\r\n          blurOnSubmit={false}\r\n          leftIcon={<Icon name=\"align-left\" type=\"feather\" size={24} color=\"#555\" />}\r\n          containerStyle={styles.inputContainer}\r\n          inputStyle={styles.textArea}\r\n        />\r\n\r\n        <Input\r\n          label=\"Genre\"\r\n          placeholder=\"E.g., Action, Comedy, Drama\"\r\n          value={seriesGenre}\r\n          onChangeText={setSeriesGenre}\r\n          leftIcon={<Icon name=\"film\" type=\"feather\" size={24} color=\"#555\" />}\r\n          containerStyle={styles.inputContainer}\r\n        />\r\n\r\n        <Input\r\n          label=\"Release Year\"\r\n          placeholder=\"E.g., 2023\"\r\n          value={releaseYear}\r\n          onChangeText={setReleaseYear}\r\n          keyboardType=\"numeric\"\r\n          leftIcon={<Icon name=\"calendar\" type=\"feather\" size={24} color=\"#555\" />}\r\n          containerStyle={styles.inputContainer}\r\n        />\r\n\r\n        <CheckBox\r\n          title=\"Featured Series\"\r\n          checked={isFeatured}\r\n          onPress={() => setIsFeatured(!isFeatured)}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n\r\n        <View style={styles.imageSelectionContainer}>\r\n          <Text style={styles.imageLabel}>Thumbnail Image</Text>\r\n          <Button\r\n            icon={<Icon name=\"image\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n            title={seriesThumbnail ? \"Change Thumbnail\" : \"Select Thumbnail\"}\r\n            onPress={() => pickImage(setSeriesThumbnail)}\r\n            buttonStyle={styles.imageButton}\r\n            containerStyle={styles.imageButtonContainer}\r\n          />\r\n          {seriesThumbnail && (\r\n            <Image source={{ uri: seriesThumbnail }} style={styles.selectedImage} />\r\n          )}\r\n        </View>\r\n\r\n        <View style={styles.imageSelectionContainer}>\r\n          <Text style={styles.imageLabel}>Banner Image (16:9 ratio recommended)</Text>\r\n          <Button\r\n            icon={<Icon name=\"image\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n            title={seriesBanner ? \"Change Banner\" : \"Select Banner\"}\r\n            onPress={() => pickImage(setSeriesBanner)}\r\n            buttonStyle={styles.imageButton}\r\n            containerStyle={styles.imageButtonContainer}\r\n          />\r\n          {seriesBanner && (\r\n            <Image source={{ uri: seriesBanner }} style={styles.selectedBanner} />\r\n          )}\r\n        </View>\r\n\r\n        <Button\r\n          title={loading ? \"Saving...\" : \"Save Series\"}\r\n          onPress={saveSeries}\r\n          disabled={loading || !seriesTitle.trim()}\r\n          buttonStyle={styles.saveButton}\r\n          containerStyle={styles.saveButtonContainer}\r\n          icon={<Icon name=\"check\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n\r\n  const ViewSeriesView = () => {\r\n    const series = seriesList.find(s => s.id === selectedSeriesId);\r\n    \r\n    if (!series) {\r\n      return (\r\n        <View style={styles.contentContainer}>\r\n          <Text>Series not found</Text>\r\n          <Button \r\n            title=\"Back to Series List\" \r\n            onPress={() => setActiveView('seriesList')}\r\n            buttonStyle={styles.secondaryButton}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.headerWithActions}>\r\n          <Text h4 style={styles.headerText}>Managing: {series.title}</Text>\r\n          <Button\r\n            icon={<Icon name=\"arrow-left\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n            title=\"Back to Series\"\r\n            onPress={() => setActiveView('seriesList')}\r\n            buttonStyle={styles.secondaryButton}\r\n          />\r\n        </View>\r\n\r\n        <ScrollView>\r\n          {/* Series Info Card */}\r\n          <Card containerStyle={styles.detailCard}>\r\n            <Card.Title h4>Series Details</Card.Title>\r\n            <Card.Divider />\r\n            \r\n            <View style={styles.seriesDetailRow}>\r\n              {series.thumbnailUrl && (\r\n                <Image source={{ uri: series.thumbnailUrl }} style={styles.detailThumbnail} />\r\n              )}\r\n              \r\n              <View style={styles.detailInfo}>\r\n                <Text style={styles.detailTitle}>{series.title}</Text>\r\n                <Text style={styles.detailDescription}>{series.description}</Text>\r\n                \r\n                <View style={styles.detailMetadata}>\r\n                  {series.genre && <Text style={styles.metadataItem}>Genre: {series.genre}</Text>}\r\n                  {series.releaseYear && <Text style={styles.metadataItem}>Released: {series.releaseYear}</Text>}\r\n                  <Text style={styles.metadataItem}>\r\n                    Status: {series.isFeatured ? 'Featured' : 'Standard'}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            \r\n            <Button\r\n              icon={<Icon name=\"edit-2\" type=\"feather\" color=\"#fff\" size={16} />}\r\n              title=\"Edit Series Details\"\r\n              onPress={() => navigation.navigate('SeriesEdit', { id: series.id })}\r\n              buttonStyle={styles.actionButton}\r\n              containerStyle={{marginTop: 10}}\r\n            />\r\n          </Card>\r\n\r\n          {/* Episodes Section */}\r\n          <Card containerStyle={styles.episodesCard}>\r\n            <Card.Title h4>Episodes</Card.Title>\r\n            <Card.Divider />\r\n\r\n            {/* Episode List */}\r\n            {episodes.length > 0 ? (\r\n              episodes.map((episode, index) => (\r\n                <View key={episode.id} style={styles.episodeItem}>\r\n                  <View style={styles.episodeHeader}>\r\n                    <View style={styles.episodeNumberContainer}>\r\n                      <Text style={styles.episodeNumber}>{episode.episodeNumber || index + 1}</Text>\r\n                    </View>\r\n                    <View style={styles.episodeInfo}>\r\n                      <Text style={styles.episodeTitle}>{episode.title}</Text>\r\n                      <Text style={styles.episodeDuration}>{episode.duration || 'No duration set'}</Text>\r\n                    </View>\r\n                    <TouchableOpacity \r\n                      style={styles.episodeEditButton}\r\n                      onPress={() => navigation.navigate('EpisodeEdit', { id: episode.id })}\r\n                    >\r\n                      <Icon name=\"edit-2\" type=\"feather\" size={20} color={theme.colors.primary} />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  \r\n                  {episode.thumbnailUrl && (\r\n                    <Image source={{ uri: episode.thumbnailUrl }} style={styles.episodeThumbnail} />\r\n                  )}\r\n                  \r\n                  <Text style={styles.episodeDescription}>{episode.description || 'No description'}</Text>\r\n                  <Text style={styles.videoUrl}>\r\n                    {episode.videoUrl ? 'Video URL: Set ✓' : 'Video URL: Not set ✗'}\r\n                  </Text>\r\n                  \r\n                  <Divider style={{marginTop: 10}} />\r\n                </View>\r\n              ))\r\n            ) : (\r\n              <Text style={styles.emptyText}>No episodes yet. Add your first episode below.</Text>\r\n            )}\r\n\r\n            {/* Add New Episode Form */}\r\n            <View style={styles.addEpisodeForm}>\r\n              <Text h4 style={styles.formTitle}>Add New Episode</Text>\r\n              \r\n              <Input\r\n                label=\"Episode Title *\"\r\n                placeholder=\"Enter episode title\"\r\n                value={newEpisode.title}\r\n                onChangeText={(text) => setNewEpisode({...newEpisode, title: text})}\r\n                containerStyle={styles.inputContainer}\r\n              />\r\n              \r\n              <Input\r\n                label=\"Description\"\r\n                placeholder=\"Enter episode description\"\r\n                value={newEpisode.description}\r\n                onChangeText={(text) => setNewEpisode({...newEpisode, description: text})}\r\n                multiline\r\n                numberOfLines={3}\r\n                containerStyle={styles.inputContainer}\r\n                inputStyle={styles.textArea}\r\n              />\r\n              \r\n              <View style={styles.rowInputs}>\r\n                <Input\r\n                  label=\"Episode Number\"\r\n                  placeholder=\"1\"\r\n                  value={String(newEpisode.episodeNumber)}\r\n                  onChangeText={(text) => setNewEpisode({...newEpisode, episodeNumber: text})}\r\n                  keyboardType=\"numeric\"\r\n                  containerStyle={[styles.inputContainer, {flex: 1, marginRight: 10}]}\r\n                />\r\n                \r\n                <Input\r\n                  label=\"Duration\"\r\n                  placeholder=\"e.g. 45 min\"\r\n                  value={newEpisode.duration}\r\n                  onChangeText={(text) => setNewEpisode({...newEpisode, duration: text})}\r\n                  containerStyle={[styles.inputContainer, {flex: 1}]}\r\n                />\r\n              </View>\r\n              \r\n              <View style={styles.imageSelectionContainer}>\r\n                <Text style={styles.imageLabel}>Episode Video</Text>\r\n                <Button\r\n                  icon={<Icon name=\"video\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n                  title={newEpisode.videoUri ? \"Change Video\" : \"Select Video\"}\r\n                  onPress={() => pickVideo((uri) => setNewEpisode({...newEpisode, videoUri: uri}))}\r\n                  buttonStyle={styles.imageButton}\r\n                  containerStyle={styles.imageButtonContainer}\r\n                />\r\n                {newEpisode.videoUri && (\r\n                  <Text>Video selected - will upload on save</Text>\r\n                )}\r\n              </View>\r\n              \r\n              <View style={styles.imageSelectionContainer}>\r\n                <Text style={styles.imageLabel}>Episode Thumbnail</Text>\r\n                <Button\r\n                  icon={<Icon name=\"image\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n                  title={newEpisode.thumbnailUri ? \"Change Thumbnail\" : \"Select Thumbnail\"}\r\n                  onPress={() => pickImage((uri) => setNewEpisode({...newEpisode, thumbnailUri: uri}))}\r\n                  buttonStyle={styles.imageButton}\r\n                  containerStyle={styles.imageButtonContainer}\r\n                />\r\n                {newEpisode.thumbnailUri && (\r\n                  <Image source={{ uri: newEpisode.thumbnailUri }} style={styles.selectedImage} />\r\n                )}\r\n              </View>\r\n              \r\n              <Button\r\n                title={loading ? \"Adding...\" : \"Add Episode\"}\r\n                onPress={saveEpisode}\r\n                disabled={loading || !newEpisode.title.trim()}\r\n                buttonStyle={styles.saveButton}\r\n                containerStyle={styles.saveButtonContainer}\r\n                icon={<Icon name=\"plus\" type=\"feather\" color=\"#fff\" size={16} style={{marginRight: 10}} />}\r\n              />\r\n            </View>\r\n          </Card>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // keep focus on inputs during typing\r\n  useEffect(() => {\r\n    if (activeView === 'addSeries' && titleInputRef.current) {\r\n      titleInputRef.current.focus();\r\n    }\r\n  }, [activeView]);\r\n  useEffect(() => {\r\n    if (activeView === 'addSeries' && titleInputRef.current) {\r\n      titleInputRef.current.focus();\r\n    }\r\n  }, [seriesTitle]);\r\n  useEffect(() => {\r\n    if (activeView === 'addSeries' && descriptionInputRef.current) {\r\n      descriptionInputRef.current.focus();\r\n    }\r\n  }, [seriesDescription]);\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: appTheme.colors.background }]}>\r\n      <HeaderBar\r\n        onToggleTheme={toggleTheme}\r\n        isDarkMode={isDarkMode}\r\n        notificationCount={0}\r\n        onLogout={() => {}}\r\n        onSettings={() => navigation.navigate('Settings')}\r\n      />\r\n      \r\n      <View style={styles.bodyContainer}>\r\n        {!isMobile && (\r\n          <Sidebar\r\n            navigation={navigation}\r\n            activeSection={activeSection}\r\n            onSectionChange={setActiveSection}\r\n          />\r\n        )}\r\n        \r\n        {/* Main Content Area */}\r\n        <View style={[styles.mainContent, { backgroundColor: appTheme.colors.background }]}>\r\n          {activeView === 'seriesList' && <SeriesListView />}\r\n          {activeView === 'addSeries' && <AddSeriesView />}\r\n          {activeView === 'viewSeries' && <ViewSeriesView />}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    minHeight: '100vh',\r\n  },\r\n  bodyContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    minHeight: 'calc(100vh - 64px)',\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  contentContainer: {\r\n    padding: 20,\r\n  },\r\n  headerWithActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    color: theme.colors.text,\r\n  },\r\n  primaryButton: {\r\n    backgroundColor: theme.colors.primary,\r\n    borderRadius: 5,\r\n    paddingHorizontal: 15,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: theme.colors.accent,\r\n    borderRadius: 5,\r\n    paddingHorizontal: 15,\r\n  },\r\n  loader: {\r\n    marginTop: 50,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    marginTop: 30,\r\n    fontSize: 16,\r\n    color: theme.colors.textSecondary,\r\n  },\r\n  seriesCard: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n  },\r\n  seriesCardContent: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n  },\r\n  seriesThumbnail: {\r\n    width: 120,\r\n    height: 80,\r\n    borderRadius: 5,\r\n  },\r\n  seriesInfo: {\r\n    flex: 1,\r\n    marginLeft: 15,\r\n    justifyContent: 'center',\r\n  },\r\n  seriesTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  seriesDescription: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginBottom: 5,\r\n  },\r\n  seriesGenre: {\r\n    fontSize: 13,\r\n    color: '#777',\r\n  },\r\n  seriesReleaseYear: {\r\n    fontSize: 13,\r\n    color: '#777',\r\n  },\r\n  featuredBadge: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: theme.colors.success,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 3,\r\n    borderRadius: 10,\r\n  },\r\n  featuredText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDivider: {\r\n    marginVertical: 10,\r\n  },\r\n  cardActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  actionButton: {\r\n    paddingHorizontal: 15,\r\n    height: 38,\r\n  },\r\n  viewButton: {\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  editButton: {\r\n    backgroundColor: theme.colors.accent,\r\n  },\r\n  formContainer: {\r\n    paddingBottom: 30,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  textArea: {\r\n    minHeight: 80,\r\n    textAlignVertical: 'top',\r\n  },\r\n  checkboxContainer: {\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 0,\r\n    marginLeft: 0,\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n  },\r\n  imageSelectionContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  imageLabel: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    color: '#86939e',\r\n    marginLeft: 10,\r\n  },\r\n  imageButton: {\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  imageButtonContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  selectedImage: {\r\n    width: '100%',\r\n    height: 200,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  selectedBanner: {\r\n    width: '100%',\r\n    height: 150,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: theme.colors.success,\r\n    height: 50,\r\n  },\r\n  saveButtonContainer: {\r\n    marginTop: 20,\r\n    marginBottom: 30,\r\n  },\r\n  detailCard: {\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n  },\r\n  seriesDetailRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  detailThumbnail: {\r\n    width: 150,\r\n    height: 100,\r\n    borderRadius: 5,\r\n  },\r\n  detailInfo: {\r\n    flex: 1,\r\n    marginLeft: 15,\r\n  },\r\n  detailTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  detailDescription: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n    marginBottom: 10,\r\n  },\r\n  detailMetadata: {\r\n    marginTop: 5,\r\n  },\r\n  metadataItem: {\r\n    fontSize: 13,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  episodesCard: {\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n  },\r\n  episodeItem: {\r\n    marginBottom: 15,\r\n    paddingBottom: 10,\r\n  },\r\n  episodeHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  episodeNumberContainer: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    backgroundColor: theme.colors.primary,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n  episodeNumber: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  episodeInfo: {\r\n    flex: 1,\r\n  },\r\n  episodeTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  episodeDuration: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n  },\r\n  episodeEditButton: {\r\n    padding: 5,\r\n  },\r\n  episodeThumbnail: {\r\n    width: '100%',\r\n    height: 180,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  episodeDescription: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n    marginVertical: 5,\r\n  },\r\n  videoUrl: {\r\n    fontSize: 13,\r\n    color: '#777',\r\n  },\r\n  addEpisodeForm: {\r\n    marginTop: 20,\r\n    paddingTop: 20,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#eee',\r\n  },\r\n  formTitle: {\r\n    marginBottom: 15,\r\n    fontSize: 18,\r\n  },\r\n  rowInputs: {\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n\r\n// Wrap with ThemeProvider for dark/light mode support\r\nconst ContentManagementScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <ContentManagementScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default ContentManagementScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}