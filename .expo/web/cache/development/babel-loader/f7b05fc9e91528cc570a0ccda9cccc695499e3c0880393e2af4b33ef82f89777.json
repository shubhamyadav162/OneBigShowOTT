{"ast":null,"code":"import React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DashboardScreenWithTheme from \"../screens/admin/DashboardScreen\";\nimport SeriesScreen from \"../screens/admin/SeriesScreen\";\nimport SeriesAddScreen from \"../screens/admin/SeriesAddScreen\";\nimport SeriesEditScreen from \"../screens/admin/SeriesEditScreen\";\nimport EpisodesScreen from \"../screens/admin/EpisodesScreen\";\nimport EpisodeAddScreen from \"../screens/admin/EpisodeAddScreen\";\nimport EpisodeEditScreen from \"../screens/admin/EpisodeEditScreen\";\nimport UsersScreen from \"../screens/admin/UsersScreen\";\nimport AnalyticsScreen from \"../screens/admin/AnalyticsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nvar ContentStackNavigator = function ContentStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"SeriesList\",\n      component: SeriesScreen,\n      options: {\n        title: 'Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesAdd\",\n      component: SeriesAddScreen,\n      options: {\n        title: 'Add Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SeriesEdit\",\n      component: SeriesEditScreen,\n      options: {\n        title: 'Edit Series'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodesList\",\n      component: EpisodesScreen,\n      options: {\n        title: 'Episodes'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeAdd\",\n      component: EpisodeAddScreen,\n      options: {\n        title: 'Add Episode'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EpisodeEdit\",\n      component: EpisodeEditScreen,\n      options: {\n        title: 'Edit Episode'\n      }\n    })]\n  });\n};\nvar AdminNavigator = function AdminNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Dashboard\",\n    screenOptions: {\n      headerShown: false,\n      drawerType: 'permanent'\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Dashboard\",\n      component: DashboardScreenWithTheme,\n      options: {\n        title: 'Dashboard'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Content\",\n      component: ContentStackNavigator,\n      options: {\n        title: 'Content'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Users\",\n      component: UsersScreen,\n      options: {\n        title: 'Users'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Analytics\",\n      component: AnalyticsScreen,\n      options: {\n        title: 'Analytics'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#1e1e1e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#bbbbbb',\n    textAlign: 'center'\n  }\n});\nexport default AdminNavigator;","map":{"version":3,"names":["React","createDrawerNavigator","createStackNavigator","View","Text","StyleSheet","DashboardScreenWithTheme","SeriesScreen","SeriesAddScreen","SeriesEditScreen","EpisodesScreen","EpisodeAddScreen","EpisodeEditScreen","UsersScreen","AnalyticsScreen","jsx","_jsx","jsxs","_jsxs","Drawer","Stack","ContentStackNavigator","Navigator","screenOptions","headerShown","children","Screen","name","component","options","title","AdminNavigator","initialRouteName","drawerType","styles","create","container","flex","padding","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","color","marginBottom","subtitle","textAlign"],"sources":["E:/bigshow/src/navigation/AdminNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport DashboardScreenWithTheme from '../screens/admin/DashboardScreen';\r\nimport SeriesScreen from '../screens/admin/SeriesScreen';\r\nimport SeriesAddScreen from '../screens/admin/SeriesAddScreen';\r\nimport SeriesEditScreen from '../screens/admin/SeriesEditScreen';\r\nimport EpisodesScreen from '../screens/admin/EpisodesScreen';\r\nimport EpisodeAddScreen from '../screens/admin/EpisodeAddScreen';\r\nimport EpisodeEditScreen from '../screens/admin/EpisodeEditScreen';\r\nimport UsersScreen from '../screens/admin/UsersScreen';\r\nimport AnalyticsScreen from '../screens/admin/AnalyticsScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst ContentStackNavigator = () => (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n    <Stack.Screen name=\"SeriesList\" component={SeriesScreen} options={{ title: 'Series' }} />\r\n    <Stack.Screen name=\"SeriesAdd\" component={SeriesAddScreen} options={{ title: 'Add Series' }} />\r\n    <Stack.Screen name=\"SeriesEdit\" component={SeriesEditScreen} options={{ title: 'Edit Series' }} />\r\n    <Stack.Screen name=\"EpisodesList\" component={EpisodesScreen} options={{ title: 'Episodes' }} />\r\n    <Stack.Screen name=\"EpisodeAdd\" component={EpisodeAddScreen} options={{ title: 'Add Episode' }} />\r\n    <Stack.Screen name=\"EpisodeEdit\" component={EpisodeEditScreen} options={{ title: 'Edit Episode' }} />\r\n  </Stack.Navigator>\r\n);\r\n\r\nconst AdminNavigator = () => (\r\n  <Drawer.Navigator initialRouteName=\"Dashboard\" screenOptions={{ headerShown: false, drawerType: 'permanent' }}>\r\n    <Drawer.Screen name=\"Dashboard\" component={DashboardScreenWithTheme} options={{ title: 'Dashboard' }} />\r\n    <Drawer.Screen name=\"Content\" component={ContentStackNavigator} options={{ title: 'Content' }} />\r\n    <Drawer.Screen name=\"Users\" component={UsersScreen} options={{ title: 'Users' }} />\r\n    <Drawer.Screen name=\"Analytics\" component={AnalyticsScreen} options={{ title: 'Analytics' }} />\r\n  </Drawer.Navigator>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#1e1e1e',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#bbbbbb',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n\r\nexport default AdminNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}