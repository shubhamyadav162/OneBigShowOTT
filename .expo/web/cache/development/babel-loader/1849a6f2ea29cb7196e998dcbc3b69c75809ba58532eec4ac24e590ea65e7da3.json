{"ast":null,"code":"\"use strict\";\n\nexport function goBack() {\n  return {\n    type: 'GO_BACK'\n  };\n}\nexport function navigate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (typeof args[0] === 'string') {\n    var name = args[0],\n      params = args[1],\n      options = args[2];\n    if (typeof options === 'boolean') {\n      console.warn(`Passing a boolean as the third argument to 'navigate' is deprecated. Pass '{ merge: true }' instead.`);\n    }\n    return {\n      type: 'NAVIGATE',\n      payload: {\n        name: name,\n        params: params,\n        merge: typeof options === 'boolean' ? options : options == null ? void 0 : options.merge,\n        pop: options == null ? void 0 : options.pop\n      }\n    };\n  } else {\n    var payload = args[0] || {};\n    if (!('name' in payload)) {\n      throw new Error('You need to specify a name when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.');\n    }\n    return {\n      type: 'NAVIGATE',\n      payload: payload\n    };\n  }\n}\nexport function navigateDeprecated() {\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    return {\n      type: 'NAVIGATE_DEPRECATED',\n      payload: {\n        name: arguments.length <= 0 ? undefined : arguments[0],\n        params: arguments.length <= 1 ? undefined : arguments[1]\n      }\n    };\n  } else {\n    var payload = (arguments.length <= 0 ? undefined : arguments[0]) || {};\n    if (!('name' in payload)) {\n      throw new Error('You need to specify a name when calling navigateDeprecated with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigatelegacy for usage.');\n    }\n    return {\n      type: 'NAVIGATE_DEPRECATED',\n      payload: payload\n    };\n  }\n}\nexport function reset(state) {\n  return {\n    type: 'RESET',\n    payload: state\n  };\n}\nexport function setParams(params) {\n  return {\n    type: 'SET_PARAMS',\n    payload: {\n      params: params\n    }\n  };\n}\nexport function preload(name, params) {\n  return {\n    type: 'PRELOAD',\n    payload: {\n      name: name,\n      params: params\n    }\n  };\n}","map":{"version":3,"names":["goBack","type","navigate","_len","arguments","length","args","Array","_key","name","params","options","console","warn","payload","merge","pop","Error","navigateDeprecated","undefined","reset","state","setParams","preload"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\routers\\src\\CommonActions.tsx"],"sourcesContent":["import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\ntype GoBackAction = {\n  type: 'GO_BACK';\n  source?: string;\n  target?: string;\n};\n\ntype NavigateAction = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: object;\n    path?: string;\n    merge?: boolean;\n    pop?: boolean;\n  };\n  source?: string;\n  target?: string;\n};\n\ntype NavigateDeprecatedAction = {\n  type: 'NAVIGATE_DEPRECATED';\n  payload: {\n    name: string;\n    params?: object;\n    merge?: boolean;\n  };\n  source?: string;\n  target?: string;\n};\n\ntype ResetAction = {\n  type: 'RESET';\n  payload: ResetState | undefined;\n  source?: string;\n  target?: string;\n};\n\ntype SetParamsAction = {\n  type: 'SET_PARAMS';\n  payload: { params?: object };\n  source?: string;\n  target?: string;\n};\n\ntype PreloadAction = {\n  type: 'PRELOAD';\n  payload: {\n    name: string;\n    params?: object;\n  };\n  source?: string;\n  target?: string;\n};\n\nexport type Action =\n  | GoBackAction\n  | NavigateAction\n  | NavigateDeprecatedAction\n  | ResetAction\n  | SetParamsAction\n  | PreloadAction;\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  name: string,\n  params?: object,\n  options?: {\n    merge?: boolean;\n    pop?: boolean;\n  }\n): Action;\n\nexport function navigate(options: {\n  name: string;\n  params?: object;\n  path?: string;\n  merge?: boolean;\n  pop?: boolean;\n}): Action;\n\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    const [name, params, options] = args;\n\n    if (typeof options === 'boolean') {\n      console.warn(\n        `Passing a boolean as the third argument to 'navigate' is deprecated. Pass '{ merge: true }' instead.`\n      );\n    }\n\n    return {\n      type: 'NAVIGATE',\n      payload: {\n        name,\n        params,\n        merge: typeof options === 'boolean' ? options : options?.merge,\n        pop: options?.pop,\n      },\n    };\n  } else {\n    const payload = args[0] || {};\n\n    if (!('name' in payload)) {\n      throw new Error(\n        'You need to specify a name when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function navigateDeprecated(\n  ...args:\n    | [name: string]\n    | [name: string, params: object | undefined]\n    | [options: { name: string; params?: object }]\n): Action {\n  if (typeof args[0] === 'string') {\n    return {\n      type: 'NAVIGATE_DEPRECATED',\n      payload: { name: args[0], params: args[1] },\n    };\n  } else {\n    const payload = args[0] || {};\n\n    if (!('name' in payload)) {\n      throw new Error(\n        'You need to specify a name when calling navigateDeprecated with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigatelegacy for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE_DEPRECATED', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n\nexport function preload(name: string, params?: object): Action {\n  return { type: 'PRELOAD', payload: { name, params } };\n}\n"],"mappings":";;AAuEA,OAAO,SAASA,MAAMA,CAAA,EAAW;EAC/B,OAAO;IAAEC,IAAI,EAAE;EAAU,CAAC;AAC5B;AAmBA,OAAO,SAASC,QAAQA,CAAA,EAAuB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAnBC,IAAS,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAATF,IAAS,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACnC,IAAI,OAAOF,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC/B,IAAOG,IAAI,GAAqBH,IAAI;MAAvBI,MAAM,GAAaJ,IAAI;MAAfK,OAAO,GAAIL,IAAI;IAEpC,IAAI,OAAOK,OAAO,KAAK,SAAS,EAAE;MAChCC,OAAO,CAACC,IAAI,CACV,sGACF,CAAC;IACH;IAEA,OAAO;MACLZ,IAAI,EAAE,UAAU;MAChBa,OAAO,EAAE;QACPL,IAAI,EAAJA,IAAI;QACJC,MAAM,EAANA,MAAM;QACNK,KAAK,EAAE,OAAOJ,OAAO,KAAK,SAAS,GAAGA,OAAO,GAAGA,OAAO,oBAAPA,OAAO,CAAEI,KAAK;QAC9DC,GAAG,EAAEL,OAAO,oBAAPA,OAAO,CAAEK;MAChB;IACF,CAAC;EACH,CAAC,MAAM;IACL,IAAMF,OAAO,GAAGR,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE7B,IAAI,EAAE,MAAM,IAAIQ,OAAO,CAAC,EAAE;MACxB,MAAM,IAAIG,KAAK,CACb,8JACF,CAAC;IACH;IAEA,OAAO;MAAEhB,IAAI,EAAE,UAAU;MAAEa,OAAA,EAAAA;IAAQ,CAAC;EACtC;AACF;AAEA,OAAO,SAASI,kBAAkBA,CAAA,EAKxB;EACR,IAAI,QAAAd,SAAA,CAAAC,MAAA,QAAAc,SAAA,GAAAf,SAAA,IAAc,KAAK,QAAQ,EAAE;IAC/B,OAAO;MACLH,IAAI,EAAE,qBAAqB;MAC3Ba,OAAO,EAAE;QAAEL,IAAI,EAAAL,SAAA,CAAAC,MAAA,QAAAc,SAAA,GAAAf,SAAA,GAAS;QAAEM,MAAM,EAAAN,SAAA,CAAAC,MAAA,QAAAc,SAAA,GAAAf,SAAA;MAAU;IAC5C,CAAC;EACH,CAAC,MAAM;IACL,IAAMU,OAAO,GAAG,CAAAV,SAAA,CAAAC,MAAA,QAAAc,SAAA,GAAAf,SAAA,QAAW,CAAC,CAAC;IAE7B,IAAI,EAAE,MAAM,IAAIU,OAAO,CAAC,EAAE;MACxB,MAAM,IAAIG,KAAK,CACb,8KACF,CAAC;IACH;IAEA,OAAO;MAAEhB,IAAI,EAAE,qBAAqB;MAAEa,OAAA,EAAAA;IAAQ,CAAC;EACjD;AACF;AAEA,OAAO,SAASM,KAAKA,CAACC,KAA6B,EAAU;EAC3D,OAAO;IAAEpB,IAAI,EAAE,OAAO;IAAEa,OAAO,EAAEO;EAAM,CAAC;AAC1C;AAEA,OAAO,SAASC,SAASA,CAACZ,MAAc,EAAU;EAChD,OAAO;IAAET,IAAI,EAAE,YAAY;IAAEa,OAAO,EAAE;MAAEJ,MAAA,EAAAA;IAAO;EAAE,CAAC;AACpD;AAEA,OAAO,SAASa,OAAOA,CAACd,IAAY,EAAEC,MAAe,EAAU;EAC7D,OAAO;IAAET,IAAI,EAAE,SAAS;IAAEa,OAAO,EAAE;MAAEL,IAAI,EAAJA,IAAI;MAAEC,MAAA,EAAAA;IAAO;EAAE,CAAC;AACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}