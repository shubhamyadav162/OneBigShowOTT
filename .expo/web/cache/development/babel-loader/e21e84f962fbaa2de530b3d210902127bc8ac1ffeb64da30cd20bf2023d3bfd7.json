{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Button } from 'react-native-elements';\nimport theme from \"../../theme\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationLogsScreen = function NotificationLogsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    logs = _useState2[0],\n    setLogs = _useState2[1];\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    currentTheme = _useTheme.theme;\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: currentTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: \"publishing\"\n      }), _jsxs(ScrollView, {\n        contentContainerStyle: styles.contentContainer,\n        children: [_jsxs(View, {\n          style: styles.headerRow,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Delivery Logs\"\n          }), _jsx(Button, {\n            title: \"Export CSV\",\n            type: \"outline\",\n            onPress: function onPress() {}\n          })]\n        }), _jsx(View, {\n          style: styles.placeholder,\n          children: _jsx(Text, {\n            style: styles.placeholderText,\n            children: \"Logs table will appear here.\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar NotificationLogsScreenWithTheme = function NotificationLogsScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(NotificationLogsScreen, _objectSpread({}, props))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%'\n  },\n  body: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    padding: theme.spacing.large\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.medium\n  },\n  title: {\n    fontSize: theme.typography.fontSize.xlarge,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text\n  },\n  placeholder: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  placeholderText: {\n    color: theme.colors.textSecondary\n  }\n});\nexport default NotificationLogsScreenWithTheme;","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","Text","Button","theme","Sidebar","HeaderBar","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","NotificationLogsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","logs","setLogs","_useTheme","isDarkMode","toggleTheme","currentTheme","style","styles","container","backgroundColor","colors","background","children","onToggleTheme","body","activeSection","contentContainerStyle","contentContainer","headerRow","title","type","onPress","placeholder","placeholderText","NotificationLogsScreenWithTheme","props","_objectSpread","create","flex","height","flexDirection","padding","spacing","large","justifyContent","alignItems","marginBottom","medium","fontSize","typography","xlarge","fontWeight","bold","color","text","textSecondary"],"sources":["E:/bigshow/src/screens/admin/NotificationLogsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Text, Button } from 'react-native-elements';\r\nimport theme from '../../theme';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\n\r\nconst NotificationLogsScreen = ({ navigation }) => {\r\n  const [logs, setLogs] = useState([]);\r\n  const { isDarkMode, toggleTheme, theme: currentTheme } = useTheme();\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: currentTheme.colors.background }]}> \r\n      <HeaderBar onToggleTheme={toggleTheme} isDarkMode={isDarkMode} />\r\n      <View style={styles.body}>\r\n        <Sidebar navigation={navigation} activeSection=\"publishing\" />\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n          <View style={styles.headerRow}>\r\n            <Text style={styles.title}>Delivery Logs</Text>\r\n            <Button title=\"Export CSV\" type=\"outline\" onPress={() => {/* TODO */}} />\r\n          </View>\r\n          <View style={styles.placeholder}>\r\n            <Text style={styles.placeholderText}>Logs table will appear here.</Text>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst NotificationLogsScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <NotificationLogsScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, height: '100%' },\r\n  body: { flex: 1, flexDirection: 'row' },\r\n  contentContainer: { flex: 1, padding: theme.spacing.large },\r\n  headerRow: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing.medium },\r\n  title: { fontSize: theme.typography.fontSize.xlarge, fontWeight: theme.typography.fontWeight.bold, color: theme.colors.text },\r\n  placeholder: { flex: 1, alignItems: 'center', justifyContent: 'center' },\r\n  placeholderText: { color: theme.colors.textSecondary },\r\n});\r\n\r\nexport default NotificationLogsScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}