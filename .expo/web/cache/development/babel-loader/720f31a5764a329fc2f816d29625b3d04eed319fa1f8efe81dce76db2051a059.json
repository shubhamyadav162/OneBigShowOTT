{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Card, Button, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport theme from \"../../theme\";\nimport { db } from \"../../utils/firebase\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      series: 0,\n      episodes: 0,\n      users: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    stats = _useState2[0],\n    setStats = _useState2[1];\n  useEffect(function () {\n    var fetchStats = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$Promise$all = yield Promise.all([getDocs(collection(db, 'series')), getDocs(collection(db, 'episodes')), getDocs(collection(db, 'users'))]),\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3),\n          seriesSnap = _yield$Promise$all2[0],\n          episodesSnap = _yield$Promise$all2[1],\n          usersSnap = _yield$Promise$all2[2];\n        setStats({\n          series: seriesSnap.size,\n          episodes: episodesSnap.size,\n          users: usersSnap.size\n        });\n      });\n      return function fetchStats() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchStats();\n  }, []);\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      h3: true,\n      style: styles.header,\n      children: \"Admin Dashboard\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsxs(Card, {\n        containerStyle: [styles.card, {\n          backgroundColor: theme.colors.accent\n        }],\n        children: [_jsx(Icon, {\n          name: \"tv\",\n          type: \"font-awesome\",\n          color: theme.colors.white,\n          size: 28\n        }), _jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Series\"\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: stats.series\n        }), _jsx(Button, {\n          title: \"Manage\",\n          onPress: function onPress() {\n            return navigation.navigate('Series');\n          },\n          buttonStyle: styles.cardButton\n        })]\n      }), _jsxs(Card, {\n        containerStyle: [styles.card, {\n          backgroundColor: theme.colors.primary\n        }],\n        children: [_jsx(Icon, {\n          name: \"video-camera\",\n          type: \"font-awesome\",\n          color: theme.colors.white,\n          size: 28\n        }), _jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Episodes\"\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: stats.episodes\n        }), _jsx(Button, {\n          title: \"Manage\",\n          onPress: function onPress() {\n            return navigation.navigate('Episodes');\n          },\n          buttonStyle: styles.cardButton\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsxs(Card, {\n        containerStyle: [styles.card, {\n          backgroundColor: theme.colors.success\n        }],\n        children: [_jsx(Icon, {\n          name: \"users\",\n          type: \"font-awesome\",\n          color: theme.colors.white,\n          size: 28\n        }), _jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Users\"\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: stats.users\n        }), _jsx(Button, {\n          title: \"Manage\",\n          onPress: function onPress() {\n            return navigation.navigate('Users');\n          },\n          buttonStyle: styles.cardButton\n        })]\n      }), _jsxs(Card, {\n        containerStyle: [styles.card, {\n          backgroundColor: theme.colors.warning\n        }],\n        children: [_jsx(Icon, {\n          name: \"bar-chart\",\n          type: \"font-awesome\",\n          color: theme.colors.white,\n          size: 28\n        }), _jsx(Text, {\n          style: styles.cardTitle,\n          children: \"Analytics\"\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: \"View\"\n        }), _jsx(Button, {\n          title: \"View\",\n          onPress: function onPress() {\n            return navigation.navigate('Analytics');\n          },\n          buttonStyle: styles.cardButton\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.large,\n    backgroundColor: theme.colors.background\n  },\n  header: {\n    color: theme.colors.text,\n    marginBottom: theme.spacing.large,\n    alignSelf: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing.large\n  },\n  card: {\n    flex: 1,\n    borderRadius: theme.borderRadius.medium,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: theme.spacing.medium,\n    marginHorizontal: theme.spacing.small\n  },\n  cardTitle: {\n    color: theme.colors.white,\n    marginTop: theme.spacing.small,\n    fontSize: theme.typography.fontSize.medium,\n    fontWeight: theme.typography.fontWeight.bold\n  },\n  cardValue: {\n    color: theme.colors.white,\n    fontSize: theme.typography.fontSize.xxlarge,\n    fontWeight: theme.typography.fontWeight.black,\n    marginVertical: theme.spacing.small\n  },\n  cardButton: {\n    backgroundColor: theme.colors.backgroundLight,\n    borderRadius: theme.borderRadius.small,\n    paddingHorizontal: theme.spacing.large\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useEffect","useState","ScrollView","View","StyleSheet","Text","Card","Button","Icon","useNavigation","theme","db","collection","getDocs","jsx","_jsx","jsxs","_jsxs","DashboardScreen","navigation","_useState","series","episodes","users","_useState2","_slicedToArray","stats","setStats","fetchStats","_ref","_asyncToGenerator","_yield$Promise$all","Promise","all","_yield$Promise$all2","seriesSnap","episodesSnap","usersSnap","size","apply","arguments","contentContainerStyle","styles","container","children","h3","style","header","row","containerStyle","card","backgroundColor","colors","accent","name","type","color","white","cardTitle","cardValue","title","onPress","navigate","buttonStyle","cardButton","primary","success","warning","create","padding","spacing","large","background","text","marginBottom","alignSelf","flexDirection","justifyContent","flex","borderRadius","medium","alignItems","paddingVertical","marginHorizontal","small","marginTop","fontSize","typography","fontWeight","bold","xxlarge","black","marginVertical","backgroundLight","paddingHorizontal"],"sources":["E:/bigshow/src/screens/admin/DashboardScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ScrollView, View, StyleSheet } from 'react-native';\r\nimport { Text, Card, Button, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport theme from '../../theme';\r\nimport { db } from '../../utils/firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n\r\nconst DashboardScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [stats, setStats] = useState({ series: 0, episodes: 0, users: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      const [seriesSnap, episodesSnap, usersSnap] = await Promise.all([\r\n        getDocs(collection(db, 'series')),\r\n        getDocs(collection(db, 'episodes')),\r\n        getDocs(collection(db, 'users'))\r\n      ]);\r\n      setStats({ series: seriesSnap.size, episodes: episodesSnap.size, users: usersSnap.size });\r\n    };\r\n    fetchStats();\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text h3 style={styles.header}>Admin Dashboard</Text>\r\n      <View style={styles.row}>\r\n        <Card containerStyle={[styles.card, { backgroundColor: theme.colors.accent }] }>\r\n          <Icon name=\"tv\" type=\"font-awesome\" color={theme.colors.white} size={28} />\r\n          <Text style={styles.cardTitle}>Series</Text>\r\n          <Text style={styles.cardValue}>{stats.series}</Text>\r\n          <Button title=\"Manage\" onPress={() => navigation.navigate('Series')} buttonStyle={styles.cardButton} />\r\n        </Card>\r\n        <Card containerStyle={[styles.card, { backgroundColor: theme.colors.primary }] }>\r\n          <Icon name=\"video-camera\" type=\"font-awesome\" color={theme.colors.white} size={28} />\r\n          <Text style={styles.cardTitle}>Episodes</Text>\r\n          <Text style={styles.cardValue}>{stats.episodes}</Text>\r\n          <Button title=\"Manage\" onPress={() => navigation.navigate('Episodes')} buttonStyle={styles.cardButton} />\r\n        </Card>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Card containerStyle={[styles.card, { backgroundColor: theme.colors.success }] }>\r\n          <Icon name=\"users\" type=\"font-awesome\" color={theme.colors.white} size={28} />\r\n          <Text style={styles.cardTitle}>Users</Text>\r\n          <Text style={styles.cardValue}>{stats.users}</Text>\r\n          <Button title=\"Manage\" onPress={() => navigation.navigate('Users')} buttonStyle={styles.cardButton} />\r\n        </Card>\r\n        <Card containerStyle={[styles.card, { backgroundColor: theme.colors.warning }] }>\r\n          <Icon name=\"bar-chart\" type=\"font-awesome\" color={theme.colors.white} size={28} />\r\n          <Text style={styles.cardTitle}>Analytics</Text>\r\n          <Text style={styles.cardValue}>View</Text>\r\n          <Button title=\"View\" onPress={() => navigation.navigate('Analytics')} buttonStyle={styles.cardButton} />\r\n        </Card>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: theme.spacing.large,\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n  header: {\r\n    color: theme.colors.text,\r\n    marginBottom: theme.spacing.large,\r\n    alignSelf: 'center',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  card: {\r\n    flex: 1,\r\n    borderRadius: theme.borderRadius.medium,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: theme.spacing.medium,\r\n    marginHorizontal: theme.spacing.small,\r\n  },\r\n  cardTitle: {\r\n    color: theme.colors.white,\r\n    marginTop: theme.spacing.small,\r\n    fontSize: theme.typography.fontSize.medium,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n  },\r\n  cardValue: {\r\n    color: theme.colors.white,\r\n    fontSize: theme.typography.fontSize.xxlarge,\r\n    fontWeight: theme.typography.fontWeight.black,\r\n    marginVertical: theme.spacing.small,\r\n  },\r\n  cardButton: {\r\n    backgroundColor: theme.colors.backgroundLight,\r\n    borderRadius: theme.borderRadius.small,\r\n    paddingHorizontal: theme.spacing.large,\r\n  },\r\n});\r\n\r\nexport default DashboardScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}