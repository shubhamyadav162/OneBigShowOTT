{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { hideAsync } from 'expo-splash-screen';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AppSplash = function AppSplash(_ref) {\n  var onPlaybackStatusUpdate = _ref.onPlaybackStatusUpdate;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  useEffect(function () {\n    var loadSplash = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          yield new Promise(function (resolve) {\n            return setTimeout(resolve, 500);\n          });\n          try {\n            yield hideAsync();\n          } catch (e) {\n            console.log('Non-critical error hiding native splash:', e);\n          }\n          yield new Promise(function (resolve) {\n            return setTimeout(resolve, 1500);\n          });\n          onPlaybackStatusUpdate({\n            didJustFinish: true\n          });\n        } catch (error) {\n          console.error('Splash screen error:', error);\n          setError('Error initializing app');\n          setTimeout(function () {\n            onPlaybackStatusUpdate({\n              didJustFinish: true\n            });\n          }, 1500);\n        }\n      });\n      return function loadSplash() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadSplash();\n    var safetyTimeout = setTimeout(function () {\n      console.log('Safety timeout triggered for splash screen');\n      onPlaybackStatusUpdate({\n        didJustFinish: true\n      });\n    }, 4000);\n    return function () {\n      return clearTimeout(safetyTimeout);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"transparent\",\n      translucent: true\n    }), function () {\n      try {\n        return _jsx(Image, {\n          source: require(\"../../../assets/logo_main.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        });\n      } catch (e) {\n        console.error('Error rendering splash image:', e);\n        return _jsx(View, {\n          style: styles.fallbackContainer,\n          children: _jsx(Text, {\n            style: styles.appName,\n            children: \"Big Show\"\n          })\n        });\n      }\n    }(), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#FFFFFF\",\n      style: styles.loader\n    }), error && _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logo: {\n    width: '80%',\n    height: '50%'\n  },\n  fallbackContainer: {\n    width: '80%',\n    height: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: '#333',\n    borderRadius: 20\n  },\n  appName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFFFFF'\n  },\n  loader: {\n    marginTop: 20\n  },\n  errorText: {\n    color: '#FF6B6B',\n    marginTop: 20,\n    fontSize: 16\n  }\n});\nexport default AppSplash;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","StatusBar","View","Image","Text","ActivityIndicator","hideAsync","jsx","_jsx","jsxs","_jsxs","AppSplash","_ref","onPlaybackStatusUpdate","_useState","_useState2","_slicedToArray","error","setError","loadSplash","_ref2","_asyncToGenerator","Promise","resolve","setTimeout","e","console","log","didJustFinish","apply","arguments","safetyTimeout","clearTimeout","style","styles","container","children","barStyle","backgroundColor","translucent","source","require","logo","resizeMode","fallbackContainer","appName","size","color","loader","errorText","create","flex","justifyContent","alignItems","width","height","borderWidth","borderColor","borderRadius","fontSize","fontWeight","marginTop"],"sources":["E:/bigshow/src/components/common/AppSplash.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, StatusBar, View, Image, Text, ActivityIndicator } from 'react-native';\nimport { hideAsync } from 'expo-splash-screen';\n\nconst AppSplash = ({ onPlaybackStatusUpdate }) => {\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const loadSplash = async () => {\n      try {\n        // Wait 500ms before hiding native splash\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        try {\n          // Try to hide the native splash screen\n          await hideAsync();\n        } catch (e) {\n          console.log('Non-critical error hiding native splash:', e);\n          // Continue even if there's an error hiding the splash\n        }\n        \n        // Simulate additional loading time (reduced to 1.5 seconds)\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        \n        // Complete the splash screen transition\n        onPlaybackStatusUpdate({ didJustFinish: true });\n      } catch (error) {\n        console.error('Splash screen error:', error);\n        setError('Error initializing app');\n        \n        // Allow a brief moment to show the error then continue\n        setTimeout(() => {\n          onPlaybackStatusUpdate({ didJustFinish: true });\n        }, 1500);\n      }\n    };\n    \n    loadSplash();\n    \n    // Add a safety timeout to ensure splash screen doesn't get stuck\n    const safetyTimeout = setTimeout(() => {\n      console.log('Safety timeout triggered for splash screen');\n      onPlaybackStatusUpdate({ didJustFinish: true });\n    }, 4000);\n    \n    return () => clearTimeout(safetyTimeout);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"transparent\" translucent />\n      \n      {/* Use try-catch in the render to prevent errors from crashing the app */}\n      {(() => {\n        try {\n          return (\n            <Image \n              source={require('../../../assets/logo_main.png')}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n          );\n        } catch (e) {\n          console.error('Error rendering splash image:', e);\n          return (\n            <View style={styles.fallbackContainer}>\n              <Text style={styles.appName}>Big Show</Text>\n            </View>\n          );\n        }\n      })()}\n      \n      <ActivityIndicator \n        size=\"large\" \n        color=\"#FFFFFF\" \n        style={styles.loader}\n      />\n      \n      {error && (\n        <Text style={styles.errorText}>{error}</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logo: {\n    width: '80%',\n    height: '50%',\n  },\n  fallbackContainer: {\n    width: '80%',\n    height: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: '#333',\n    borderRadius: 20,\n  },\n  appName: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  loader: {\n    marginTop: 20,\n  },\n  errorText: {\n    color: '#FF6B6B',\n    marginTop: 20,\n    fontSize: 16,\n  },\n});\n\nexport default AppSplash; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAEnD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAmC;EAAA,IAA7BC,sBAAsB,GAAAD,IAAA,CAAtBC,sBAAsB;EACzC,IAAAC,SAAA,GAA0Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBjB,SAAS,CAAC,YAAM;IACd,IAAMqB,UAAU;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC7B,IAAI;UAEF,MAAM,IAAIC,OAAO,CAAC,UAAAC,OAAO;YAAA,OAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC;UAAA,EAAC;UAEtD,IAAI;YAEF,MAAMjB,SAAS,CAAC,CAAC;UACnB,CAAC,CAAC,OAAOmB,CAAC,EAAE;YACVC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEF,CAAC,CAAC;UAE5D;UAGA,MAAM,IAAIH,OAAO,CAAC,UAAAC,OAAO;YAAA,OAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;UAAA,EAAC;UAGvDV,sBAAsB,CAAC;YAAEe,aAAa,EAAE;UAAK,CAAC,CAAC;QACjD,CAAC,CAAC,OAAOX,KAAK,EAAE;UACdS,OAAO,CAACT,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CC,QAAQ,CAAC,wBAAwB,CAAC;UAGlCM,UAAU,CAAC,YAAM;YACfX,sBAAsB,CAAC;cAAEe,aAAa,EAAE;YAAK,CAAC,CAAC;UACjD,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAAA,gBA3BKT,UAAUA,CAAA;QAAA,OAAAC,KAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GA2Bf;IAEDX,UAAU,CAAC,CAAC;IAGZ,IAAMY,aAAa,GAAGP,UAAU,CAAC,YAAM;MACrCE,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MACzDd,sBAAsB,CAAC;QAAEe,aAAa,EAAE;MAAK,CAAC,CAAC;IACjD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO;MAAA,OAAMI,YAAY,CAACD,aAAa,CAAC;IAAA;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,OACErB,KAAA,CAACR,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B5B,IAAA,CAACP,SAAS;MAACoC,QAAQ,EAAC,eAAe;MAACC,eAAe,EAAC,aAAa;MAACC,WAAW;IAAA,CAAE,CAAC,EAG9E,YAAM;MACN,IAAI;QACF,OACE/B,IAAA,CAACL,KAAK;UACJqC,MAAM,EAAEC,OAAO,gCAAgC,CAAE;UACjDR,KAAK,EAAEC,MAAM,CAACQ,IAAK;UACnBC,UAAU,EAAC;QAAS,CACrB,CAAC;MAEN,CAAC,CAAC,OAAOlB,CAAC,EAAE;QACVC,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAEQ,CAAC,CAAC;QACjD,OACEjB,IAAA,CAACN,IAAI;UAAC+B,KAAK,EAAEC,MAAM,CAACU,iBAAkB;UAAAR,QAAA,EACpC5B,IAAA,CAACJ,IAAI;YAAC6B,KAAK,EAAEC,MAAM,CAACW,OAAQ;YAAAT,QAAA,EAAC;UAAQ,CAAM;QAAC,CACxC,CAAC;MAEX;IACF,CAAC,CAAE,CAAC,EAEJ5B,IAAA,CAACH,iBAAiB;MAChByC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,SAAS;MACfd,KAAK,EAAEC,MAAM,CAACc;IAAO,CACtB,CAAC,EAED/B,KAAK,IACJT,IAAA,CAACJ,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACe,SAAU;MAAAb,QAAA,EAAEnB;IAAK,CAAO,CAC7C;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMiB,MAAM,GAAGlC,UAAU,CAACkD,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPb,eAAe,EAAE,MAAM;IACvBc,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDX,IAAI,EAAE;IACJY,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACV,CAAC;EACDX,iBAAiB,EAAE;IACjBU,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbH,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDb,OAAO,EAAE;IACPc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBb,KAAK,EAAE;EACT,CAAC;EACDC,MAAM,EAAE;IACNa,SAAS,EAAE;EACb,CAAC;EACDZ,SAAS,EAAE;IACTF,KAAK,EAAE,SAAS;IAChBc,SAAS,EAAE,EAAE;IACbF,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAehD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}