{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { SyntheticPlatformEmitter, Platform } from 'expo-modules-core';\nimport { getOrientationLockAsync, getOrientationAsync } from \"./ScreenOrientation\";\nimport { Orientation, OrientationLock, WebOrientationLock, WebOrientation } from \"./ScreenOrientation.types\";\nvar OrientationLockAPIToWeb = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, OrientationLock.DEFAULT, WebOrientationLock.NATURAL), OrientationLock.ALL, WebOrientationLock.ANY), OrientationLock.PORTRAIT, WebOrientationLock.PORTRAIT), OrientationLock.PORTRAIT_UP, WebOrientationLock.PORTRAIT_PRIMARY), OrientationLock.PORTRAIT_DOWN, WebOrientationLock.PORTRAIT_SECONDARY), OrientationLock.LANDSCAPE, WebOrientationLock.LANDSCAPE), OrientationLock.LANDSCAPE_LEFT, WebOrientationLock.LANDSCAPE_PRIMARY), OrientationLock.LANDSCAPE_RIGHT, WebOrientationLock.LANDSCAPE_SECONDARY);\nvar OrientationWebToAPI = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, WebOrientation.PORTRAIT_PRIMARY, Orientation.PORTRAIT_UP), WebOrientation.PORTRAIT_SECONDARY, Orientation.PORTRAIT_DOWN), WebOrientation.LANDSCAPE_PRIMARY, Orientation.LANDSCAPE_LEFT), WebOrientation.LANDSCAPE_SECONDARY, Orientation.LANDSCAPE_RIGHT);\nvar screen = Platform.canUseViewport ? window.screen : {};\nvar orientation = Platform.canUseViewport ? screen.orientation || screen.msOrientation || null : null;\nfunction emitOrientationEvent() {\n  return _emitOrientationEvent.apply(this, arguments);\n}\nfunction _emitOrientationEvent() {\n  _emitOrientationEvent = _asyncToGenerator(function* () {\n    var _yield$Promise$all = yield Promise.all([getOrientationLockAsync(), getOrientationAsync()]),\n      _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n      orientationLock = _yield$Promise$all2[0],\n      orientation = _yield$Promise$all2[1];\n    SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n      orientationLock: orientationLock,\n      orientationInfo: {\n        orientation: orientation\n      }\n    });\n  });\n  return _emitOrientationEvent.apply(this, arguments);\n}\nif (Platform.canUseEventListeners) {\n  if (orientation && orientation.addEventListener) {\n    orientation.addEventListener('change', emitOrientationEvent);\n  } else {\n    window.addEventListener('orientationchange', emitOrientationEvent);\n  }\n}\nfunction _convertToLegacyOrientationLock(orientationLock) {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(`expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.`);\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\nfunction _lockAsync(_x) {\n  return _lockAsync2.apply(this, arguments);\n}\nfunction _lockAsync2() {\n  _lockAsync2 = _asyncToGenerator(function* (webOrientationLock) {\n    if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n      throw new Error(`expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.`);\n    }\n    if (screen.orientation && screen.orientation.lock) {\n      yield screen.orientation.lock(webOrientationLock);\n    } else if (screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation']) {\n      var legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n      var lockOrientation = screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n      var isSuccess = lockOrientation.call(screen, legacyLock);\n      if (!isSuccess) {\n        throw new Error(`Applying orientation lock: ${JSON.stringify(webOrientationLock)} to device was denied`);\n      }\n    } else {\n      throw new Error(`expo-screen-orientation: The browser doesn't support locking screen orientation.`);\n    }\n  });\n  return _lockAsync2.apply(this, arguments);\n}\nvar _lastWebOrientationLock = WebOrientationLock.UNKNOWN;\nexport default {\n  get name() {\n    return 'ExpoScreenOrientation';\n  },\n  supportsOrientationLockAsync: function () {\n    var _supportsOrientationLockAsync = _asyncToGenerator(function* (orientationLock) {\n      return orientationLock in OrientationLockAPIToWeb;\n    });\n    function supportsOrientationLockAsync(_x2) {\n      return _supportsOrientationLockAsync.apply(this, arguments);\n    }\n    return supportsOrientationLockAsync;\n  }(),\n  getPlatformOrientationLockAsync: function () {\n    var _getPlatformOrientationLockAsync = _asyncToGenerator(function* () {\n      return _lastWebOrientationLock;\n    });\n    function getPlatformOrientationLockAsync() {\n      return _getPlatformOrientationLockAsync.apply(this, arguments);\n    }\n    return getPlatformOrientationLockAsync;\n  }(),\n  getOrientationAsync: function () {\n    var _getOrientationAsync = _asyncToGenerator(function* () {\n      var webOrientation = screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n      if (!webOrientation) {\n        return Orientation.UNKNOWN;\n      }\n      return OrientationWebToAPI[webOrientation];\n    });\n    function getOrientationAsync() {\n      return _getOrientationAsync.apply(this, arguments);\n    }\n    return getOrientationAsync;\n  }(),\n  lockAsync: function () {\n    var _lockAsync3 = _asyncToGenerator(function* (orientationLock) {\n      var webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n      if (!webOrientationLock) {\n        throw new TypeError(`Invalid Orientation Lock: ${orientationLock}`);\n      }\n      yield _lockAsync(webOrientationLock);\n    });\n    function lockAsync(_x3) {\n      return _lockAsync3.apply(this, arguments);\n    }\n    return lockAsync;\n  }(),\n  lockPlatformAsync: function () {\n    var _lockPlatformAsync = _asyncToGenerator(function* (webOrientationLock) {\n      yield _lockAsync(webOrientationLock);\n      _lastWebOrientationLock = webOrientationLock;\n    });\n    function lockPlatformAsync(_x4) {\n      return _lockPlatformAsync.apply(this, arguments);\n    }\n    return lockPlatformAsync;\n  }(),\n  unlockAsync: function () {\n    var _unlockAsync = _asyncToGenerator(function* () {\n      if (screen.orientation && screen.orientation.unlock) {\n        screen.orientation.unlock();\n      } else if (screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation']) {\n        var unlockOrientation = screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation'];\n        var isSuccess = unlockOrientation.call(screen);\n        if (!isSuccess) {\n          throw new Error(`Unlocking screen orientation on device was denied`);\n        }\n      } else {\n        throw new Error(`expo-screen-orientation: The browser doesn't support unlocking screen orientation.`);\n      }\n    });\n    function unlockAsync() {\n      return _unlockAsync.apply(this, arguments);\n    }\n    return unlockAsync;\n  }()\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","Platform","getOrientationLockAsync","getOrientationAsync","Orientation","OrientationLock","WebOrientationLock","WebOrientation","OrientationLockAPIToWeb","_defineProperty","DEFAULT","NATURAL","ALL","ANY","PORTRAIT","PORTRAIT_UP","PORTRAIT_PRIMARY","PORTRAIT_DOWN","PORTRAIT_SECONDARY","LANDSCAPE","LANDSCAPE_LEFT","LANDSCAPE_PRIMARY","LANDSCAPE_RIGHT","LANDSCAPE_SECONDARY","OrientationWebToAPI","screen","canUseViewport","window","orientation","msOrientation","emitOrientationEvent","_emitOrientationEvent","apply","arguments","_asyncToGenerator","_yield$Promise$all","Promise","all","_yield$Promise$all2","_slicedToArray","orientationLock","emit","orientationInfo","canUseEventListeners","addEventListener","_convertToLegacyOrientationLock","UNKNOWN","Error","_lockAsync","_x","_lockAsync2","webOrientationLock","lock","legacyLock","lockOrientation","isSuccess","call","JSON","stringify","_lastWebOrientationLock","name","supportsOrientationLockAsync","_supportsOrientationLockAsync","_x2","getPlatformOrientationLockAsync","_getPlatformOrientationLockAsync","_getOrientationAsync","webOrientation","type","lockAsync","_lockAsync3","TypeError","_x3","lockPlatformAsync","_lockPlatformAsync","_x4","unlockAsync","_unlockAsync","unlock","unlockOrientation"],"sources":["E:\\bigshow\\node_modules\\expo-screen-orientation\\src\\ExpoScreenOrientation.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter, Platform } from 'expo-modules-core';\n\nimport { getOrientationLockAsync, getOrientationAsync } from './ScreenOrientation';\nimport {\n  Orientation,\n  OrientationLock,\n  WebOrientationLock,\n  WebOrientation,\n} from './ScreenOrientation.types';\n\nconst OrientationLockAPIToWeb: {\n  [lock: string]: WebOrientationLock;\n} = {\n  [OrientationLock.DEFAULT]: WebOrientationLock.NATURAL,\n  [OrientationLock.ALL]: WebOrientationLock.ANY,\n  [OrientationLock.PORTRAIT]: WebOrientationLock.PORTRAIT,\n  [OrientationLock.PORTRAIT_UP]: WebOrientationLock.PORTRAIT_PRIMARY,\n  [OrientationLock.PORTRAIT_DOWN]: WebOrientationLock.PORTRAIT_SECONDARY,\n  [OrientationLock.LANDSCAPE]: WebOrientationLock.LANDSCAPE,\n  [OrientationLock.LANDSCAPE_LEFT]: WebOrientationLock.LANDSCAPE_PRIMARY,\n  [OrientationLock.LANDSCAPE_RIGHT]: WebOrientationLock.LANDSCAPE_SECONDARY,\n};\n\nconst OrientationWebToAPI: {\n  [orientationWeb: string]: Orientation;\n} = {\n  [WebOrientation.PORTRAIT_PRIMARY]: Orientation.PORTRAIT_UP,\n  [WebOrientation.PORTRAIT_SECONDARY]: Orientation.PORTRAIT_DOWN,\n  [WebOrientation.LANDSCAPE_PRIMARY]: Orientation.LANDSCAPE_LEFT,\n  [WebOrientation.LANDSCAPE_SECONDARY]: Orientation.LANDSCAPE_RIGHT,\n};\n\ndeclare const window: Window;\n\nconst screen: Screen = Platform.canUseViewport ? window.screen : ({} as Screen);\nconst orientation: ScreenOrientation | null = Platform.canUseViewport\n  ? screen.orientation || (screen as any).msOrientation || null\n  : null;\n\nasync function emitOrientationEvent() {\n  const [orientationLock, orientation] = await Promise.all([\n    getOrientationLockAsync(),\n    getOrientationAsync(),\n  ]);\n  SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n    orientationLock,\n    orientationInfo: { orientation },\n  });\n}\n\nif (Platform.canUseEventListeners) {\n  if (orientation && orientation.addEventListener) {\n    orientation.addEventListener('change', emitOrientationEvent);\n  } else {\n    window.addEventListener('orientationchange', emitOrientationEvent);\n  }\n}\n\nfunction _convertToLegacyOrientationLock(orientationLock: WebOrientationLock): string | string[] {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\n        `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.`\n      );\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\n\nasync function _lockAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n  if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n    throw new Error(\n      `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.`\n    );\n  }\n  if (screen.orientation && screen.orientation.lock) {\n    await screen.orientation.lock(webOrientationLock);\n  } else if (\n    screen['lockOrientation'] ||\n    screen['mozLockOrientation'] ||\n    screen['msLockOrientation']\n  ) {\n    const legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n    const lockOrientation =\n      screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n    // correct `this` context must be passed in otherwise method call is disallowed by browser\n    const isSuccess = lockOrientation.call(screen, legacyLock);\n    if (!isSuccess) {\n      throw new Error(\n        `Applying orientation lock: ${JSON.stringify(webOrientationLock)} to device was denied`\n      );\n    }\n  } else {\n    throw new Error(\n      `expo-screen-orientation: The browser doesn't support locking screen orientation.`\n    );\n  }\n}\n\nlet _lastWebOrientationLock: WebOrientationLock = WebOrientationLock.UNKNOWN;\n\nexport default {\n  get name(): string {\n    return 'ExpoScreenOrientation';\n  },\n  async supportsOrientationLockAsync(orientationLock: OrientationLock): Promise<boolean> {\n    return orientationLock in OrientationLockAPIToWeb;\n  },\n  async getPlatformOrientationLockAsync(): Promise<WebOrientationLock> {\n    return _lastWebOrientationLock;\n  },\n  async getOrientationAsync(): Promise<Orientation> {\n    const webOrientation =\n      screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n    if (!webOrientation) {\n      return Orientation.UNKNOWN;\n    }\n    return OrientationWebToAPI[webOrientation];\n  },\n  async lockAsync(orientationLock: OrientationLock): Promise<void> {\n    const webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n    if (!webOrientationLock) {\n      throw new TypeError(`Invalid Orientation Lock: ${orientationLock}`);\n    }\n    await _lockAsync(webOrientationLock);\n  },\n  async lockPlatformAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n    await _lockAsync(webOrientationLock);\n    _lastWebOrientationLock = webOrientationLock;\n  },\n  async unlockAsync(): Promise<void> {\n    if (screen.orientation && screen.orientation.unlock) {\n      screen.orientation.unlock();\n    } else if (\n      screen['unlockOrientation'] ||\n      screen['mozUnlockOrientation'] ||\n      screen['msUnlockOrientation']\n    ) {\n      const unlockOrientation =\n        screen['unlockOrientation'] ||\n        screen['mozUnlockOrientation'] ||\n        screen['msUnlockOrientation'];\n      // correct `this` context must be passed in otherwise method call is disallowed by browser\n      const isSuccess = unlockOrientation.call(screen);\n      if (!isSuccess) {\n        throw new Error(`Unlocking screen orientation on device was denied`);\n      }\n    } else {\n      throw new Error(\n        `expo-screen-orientation: The browser doesn't support unlocking screen orientation.`\n      );\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}