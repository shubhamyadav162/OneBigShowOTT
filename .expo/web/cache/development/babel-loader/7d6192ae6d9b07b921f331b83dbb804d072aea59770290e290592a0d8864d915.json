{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Input, Button, Text, Icon, CheckBox } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db } from \"../../utils/firebase\";\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport baseTheme from \"../../theme\";\nimport { uploadImageBunny } from \"../../utils/bunnyApi\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SeriesAddScreen = function SeriesAddScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    genre = _useState6[0],\n    setGenre = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    releaseYear = _useState8[0],\n    setReleaseYear = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    subscriptionPlan = _useState0[0],\n    setSubscriptionPlan = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    isFeatured = _useState10[0],\n    setIsFeatured = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    thumbnail = _useState12[0],\n    setThumbnail = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    banner = _useState14[0],\n    setBanner = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    uploading = _useState16[0],\n    setUploading = _useState16[1];\n  var pickThumbnail = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission required', 'Camera roll permission is required to select thumbnail.');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 0.8\n      });\n      if (!result.canceled) {\n        setThumbnail(result.assets[0].uri);\n      }\n    });\n    return function pickThumbnail() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickBanner = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$ImagePicker$re2 = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re2.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission required', 'Camera roll permission is required to select banner.');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 0.8,\n        aspect: [16, 9]\n      });\n      if (!result.canceled) {\n        setBanner(result.assets[0].uri);\n      }\n    });\n    return function pickBanner() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSave = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!title.trim()) {\n        Alert.alert('Validation', 'Please enter a title for the series.');\n        return;\n      }\n      setUploading(true);\n      try {\n        var thumbnailUrl = null;\n        var bannerUrl = null;\n        if (thumbnail) {\n          if (Platform.OS === 'web') {\n            thumbnailUrl = yield uploadImageBunny(thumbnail, 'series_thumbnails');\n          } else {\n            var response = yield fetch(thumbnail);\n            var blob = yield response.blob();\n            var fileName = `series_${Date.now()}`;\n            var storageRef = ref(storage, `series/${fileName}`);\n            yield uploadBytes(storageRef, blob);\n            thumbnailUrl = yield getDownloadURL(storageRef);\n          }\n        }\n        if (banner) {\n          if (Platform.OS === 'web') {\n            bannerUrl = yield uploadImageBunny(banner, 'series_banners');\n          } else {\n            var responseB = yield fetch(banner);\n            var blobB = yield responseB.blob();\n            var fileNameB = `banner_${Date.now()}`;\n            var storageRefB = ref(storage, `series_banners/${fileNameB}`);\n            yield uploadBytes(storageRefB, blobB);\n            bannerUrl = yield getDownloadURL(storageRefB);\n          }\n        }\n        yield addDoc(collection(db, 'series'), {\n          title: title.trim(),\n          description: description.trim(),\n          genre: genre.trim(),\n          releaseYear: releaseYear.trim(),\n          subscriptionPlan: subscriptionPlan.trim(),\n          isFeatured: isFeatured,\n          thumbnailUrl: thumbnailUrl,\n          bannerUrl: bannerUrl,\n          createdAt: serverTimestamp()\n        });\n        Alert.alert('Success', 'Series created successfully.');\n        navigation.navigate('Series');\n      } catch (error) {\n        console.error('Error creating series:', error);\n        Alert.alert('Error', 'Could not create series. Please try again.');\n      } finally {\n        setUploading(false);\n      }\n    });\n    return function handleSave() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(Text, {\n      h4: true,\n      style: [styles.header, {\n        color: theme.colors.primary\n      }],\n      children: \"Add New Series\"\n    }), _jsx(Input, {\n      placeholder: \"Title *\",\n      value: title,\n      onChangeText: setTitle,\n      leftIcon: {\n        name: 'edit',\n        type: 'feather',\n        color: theme.colors.primary\n      },\n      inputStyle: {\n        color: theme.colors.text\n      },\n      placeholderTextColor: theme.colors.textSecondary,\n      inputContainerStyle: {\n        borderBottomColor: theme.colors.border\n      }\n    }), _jsx(Input, {\n      placeholder: \"Description\",\n      value: description,\n      onChangeText: setDescription,\n      multiline: true,\n      leftIcon: {\n        name: 'align-left',\n        type: 'feather',\n        color: theme.colors.primary\n      },\n      inputStyle: {\n        color: theme.colors.text\n      },\n      placeholderTextColor: theme.colors.textSecondary,\n      inputContainerStyle: {\n        borderBottomColor: theme.colors.border\n      }\n    }), _jsx(Input, {\n      placeholder: \"Genre\",\n      value: genre,\n      onChangeText: setGenre,\n      leftIcon: {\n        name: 'tag',\n        type: 'feather',\n        color: theme.colors.primary\n      },\n      inputStyle: {\n        color: theme.colors.text\n      },\n      placeholderTextColor: theme.colors.textSecondary,\n      inputContainerStyle: {\n        borderBottomColor: theme.colors.border\n      }\n    }), _jsx(Input, {\n      placeholder: \"Release Year\",\n      value: releaseYear,\n      onChangeText: setReleaseYear,\n      keyboardType: \"numeric\",\n      leftIcon: {\n        name: 'calendar',\n        type: 'feather',\n        color: theme.colors.primary\n      },\n      inputStyle: {\n        color: theme.colors.text\n      },\n      placeholderTextColor: theme.colors.textSecondary,\n      inputContainerStyle: {\n        borderBottomColor: theme.colors.border\n      }\n    }), _jsx(Input, {\n      placeholder: \"Subscription Plan\",\n      value: subscriptionPlan,\n      onChangeText: setSubscriptionPlan,\n      leftIcon: {\n        name: 'credit-card',\n        type: 'feather',\n        color: theme.colors.primary\n      },\n      inputStyle: {\n        color: theme.colors.text\n      },\n      placeholderTextColor: theme.colors.textSecondary,\n      inputContainerStyle: {\n        borderBottomColor: theme.colors.border\n      }\n    }), _jsx(CheckBox, {\n      title: \"Featured Series\",\n      checked: isFeatured,\n      onPress: function onPress() {\n        return setIsFeatured(!isFeatured);\n      },\n      containerStyle: [styles.checkboxContainer, {\n        backgroundColor: 'transparent'\n      }],\n      textStyle: {\n        color: theme.colors.text\n      },\n      checkedColor: theme.colors.primary,\n      uncheckedColor: theme.colors.textSecondary\n    }), _jsx(Button, {\n      icon: _jsx(Icon, {\n        name: \"image\",\n        type: \"feather\",\n        color: \"#FFFFFF\",\n        style: {\n          marginRight: 8\n        }\n      }),\n      title: thumbnail ? 'Change Thumbnail' : 'Pick Thumbnail',\n      onPress: pickThumbnail,\n      containerStyle: styles.button,\n      buttonStyle: {\n        backgroundColor: theme.colors.primary\n      },\n      titleStyle: {\n        color: '#FFFFFF'\n      },\n      raised: true\n    }), thumbnail && _jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: thumbnail\n        },\n        style: styles.preview\n      })\n    }), _jsx(Button, {\n      icon: _jsx(Icon, {\n        name: \"image\",\n        type: \"feather\",\n        color: \"#FFFFFF\",\n        style: {\n          marginRight: 8\n        }\n      }),\n      title: banner ? 'Change Banner' : 'Pick Banner',\n      onPress: pickBanner,\n      containerStyle: styles.button,\n      buttonStyle: {\n        backgroundColor: theme.colors.secondary\n      },\n      titleStyle: {\n        color: '#FFFFFF'\n      },\n      raised: true\n    }), banner && _jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: banner\n        },\n        style: styles.previewBanner\n      })\n    }), _jsxs(View, {\n      style: styles.actionButtons,\n      children: [_jsx(Button, {\n        title: \"Cancel\",\n        type: \"outline\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        containerStyle: [styles.button, styles.cancelButton],\n        buttonStyle: {\n          borderColor: theme.colors.error\n        },\n        titleStyle: {\n          color: theme.colors.error\n        },\n        icon: _jsx(Icon, {\n          name: \"x\",\n          type: \"feather\",\n          color: theme.colors.error,\n          style: {\n            marginRight: 8\n          }\n        })\n      }), _jsx(Button, {\n        title: uploading ? 'Saving...' : 'Save Series',\n        onPress: handleSave,\n        disabled: uploading,\n        containerStyle: [styles.button, styles.saveButton],\n        buttonStyle: {\n          backgroundColor: theme.colors.accent\n        },\n        disabledStyle: {\n          backgroundColor: theme.colors.inactive\n        },\n        titleStyle: {\n          color: '#FFFFFF',\n          fontWeight: 'bold'\n        },\n        icon: _jsx(Icon, {\n          name: \"save\",\n          type: \"feather\",\n          color: \"#FFFFFF\",\n          style: {\n            marginRight: 8\n          }\n        }),\n        raised: true\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: baseTheme.spacing.large,\n    minHeight: '100%'\n  },\n  header: {\n    marginBottom: baseTheme.spacing.large,\n    alignSelf: 'center',\n    fontSize: 26\n  },\n  button: {\n    marginVertical: baseTheme.spacing.medium,\n    borderRadius: baseTheme.borderRadius.medium,\n    overflow: 'hidden'\n  },\n  checkboxContainer: {\n    borderWidth: 0,\n    marginLeft: 0,\n    marginBottom: baseTheme.spacing.medium\n  },\n  imageContainer: {\n    borderWidth: 1,\n    borderColor: baseTheme.colors.border,\n    borderRadius: baseTheme.borderRadius.medium,\n    overflow: 'hidden',\n    marginBottom: baseTheme.spacing.medium\n  },\n  preview: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'cover'\n  },\n  previewBanner: {\n    width: '100%',\n    height: 120,\n    resizeMode: 'cover'\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: baseTheme.spacing.medium\n  },\n  cancelButton: {\n    flex: 1,\n    marginRight: baseTheme.spacing.small\n  },\n  saveButton: {\n    flex: 2,\n    marginLeft: baseTheme.spacing.small\n  }\n});\nvar SeriesAddScreenWithTheme = function SeriesAddScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(SeriesAddScreen, _objectSpread({}, props))\n  });\n};\nexport default SeriesAddScreenWithTheme;","map":{"version":3,"names":["React","useState","View","StyleSheet","Image","ScrollView","Alert","Platform","Input","Button","Text","Icon","CheckBox","ImagePicker","storage","db","ref","uploadBytes","getDownloadURL","addDoc","collection","serverTimestamp","ThemeProvider","useTheme","baseTheme","uploadImageBunny","jsx","_jsx","jsxs","_jsxs","SeriesAddScreen","_ref","navigation","_useTheme","theme","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","genre","setGenre","_useState7","_useState8","releaseYear","setReleaseYear","_useState9","_useState0","subscriptionPlan","setSubscriptionPlan","_useState1","_useState10","isFeatured","setIsFeatured","_useState11","_useState12","thumbnail","setThumbnail","_useState13","_useState14","banner","setBanner","_useState15","_useState16","uploading","setUploading","pickThumbnail","_ref2","_asyncToGenerator","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","alert","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","canceled","assets","uri","apply","arguments","pickBanner","_ref3","_yield$ImagePicker$re2","aspect","handleSave","_ref4","trim","thumbnailUrl","bannerUrl","OS","response","fetch","blob","fileName","Date","now","storageRef","responseB","blobB","fileNameB","storageRefB","createdAt","navigate","error","console","contentContainerStyle","styles","container","backgroundColor","colors","background","children","h4","style","header","color","primary","placeholder","value","onChangeText","leftIcon","name","type","inputStyle","text","placeholderTextColor","textSecondary","inputContainerStyle","borderBottomColor","border","multiline","keyboardType","checked","onPress","containerStyle","checkboxContainer","textStyle","checkedColor","uncheckedColor","icon","marginRight","button","buttonStyle","titleStyle","raised","imageContainer","source","preview","secondary","previewBanner","actionButtons","goBack","cancelButton","borderColor","disabled","saveButton","accent","disabledStyle","inactive","fontWeight","create","padding","spacing","large","minHeight","marginBottom","alignSelf","fontSize","marginVertical","medium","borderRadius","overflow","borderWidth","marginLeft","width","height","resizeMode","flexDirection","justifyContent","marginTop","flex","small","SeriesAddScreenWithTheme","props","_objectSpread"],"sources":["E:/bigshow/src/screens/admin/SeriesAddScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Image, ScrollView, Alert, Platform } from 'react-native';\r\nimport { Input, Button, Text, Icon, CheckBox } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { storage, db } from '../../utils/firebase';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\nimport baseTheme from '../../theme';\r\nimport { uploadImageBunny } from '../../utils/bunnyApi';\r\n\r\nconst SeriesAddScreen = ({ navigation }) => {\r\n  const { theme } = useTheme();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [releaseYear, setReleaseYear] = useState('');\r\n  const [subscriptionPlan, setSubscriptionPlan] = useState('');\r\n  const [isFeatured, setIsFeatured] = useState(false);\r\n  const [thumbnail, setThumbnail] = useState(null);\r\n  const [banner, setBanner] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const pickThumbnail = async () => {\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission required', 'Camera roll permission is required to select thumbnail.');\r\n      return;\r\n    }\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      quality: 0.8,\r\n    });\r\n    if (!result.canceled) {\r\n      setThumbnail(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  const pickBanner = async () => {\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission required', 'Camera roll permission is required to select banner.');\r\n      return;\r\n    }\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      quality: 0.8,\r\n      aspect: [16, 9],\r\n    });\r\n    if (!result.canceled) {\r\n      setBanner(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!title.trim()) {\r\n      Alert.alert('Validation', 'Please enter a title for the series.');\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    try {\r\n      let thumbnailUrl = null;\r\n      let bannerUrl = null;\r\n      if (thumbnail) {\r\n        if (Platform.OS === 'web') {\r\n          thumbnailUrl = await uploadImageBunny(thumbnail, 'series_thumbnails');\r\n        } else {\r\n          const response = await fetch(thumbnail);\r\n          const blob = await response.blob();\r\n          const fileName = `series_${Date.now()}`;\r\n          const storageRef = ref(storage, `series/${fileName}`);\r\n          await uploadBytes(storageRef, blob);\r\n          thumbnailUrl = await getDownloadURL(storageRef);\r\n        }\r\n      }\r\n      if (banner) {\r\n        if (Platform.OS === 'web') {\r\n          bannerUrl = await uploadImageBunny(banner, 'series_banners');\r\n        } else {\r\n          const responseB = await fetch(banner);\r\n          const blobB = await responseB.blob();\r\n          const fileNameB = `banner_${Date.now()}`;\r\n          const storageRefB = ref(storage, `series_banners/${fileNameB}`);\r\n          await uploadBytes(storageRefB, blobB);\r\n          bannerUrl = await getDownloadURL(storageRefB);\r\n        }\r\n      }\r\n      await addDoc(collection(db, 'series'), {\r\n        title: title.trim(),\r\n        description: description.trim(),\r\n        genre: genre.trim(),\r\n        releaseYear: releaseYear.trim(),\r\n        subscriptionPlan: subscriptionPlan.trim(),\r\n        isFeatured,\r\n        thumbnailUrl,\r\n        bannerUrl,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      Alert.alert('Success', 'Series created successfully.');\r\n      navigation.navigate('Series');\r\n    } catch (error) {\r\n      console.error('Error creating series:', error);\r\n      Alert.alert('Error', 'Could not create series. Please try again.');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <Text h4 style={[styles.header, { color: theme.colors.primary }]}>Add New Series</Text>\r\n      \r\n      <Input\r\n        placeholder=\"Title *\"\r\n        value={title}\r\n        onChangeText={setTitle}\r\n        leftIcon={{ name: 'edit', type: 'feather', color: theme.colors.primary }}\r\n        inputStyle={{ color: theme.colors.text }}\r\n        placeholderTextColor={theme.colors.textSecondary}\r\n        inputContainerStyle={{ borderBottomColor: theme.colors.border }}\r\n      />\r\n      \r\n      <Input\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChangeText={setDescription}\r\n        multiline\r\n        leftIcon={{ name: 'align-left', type: 'feather', color: theme.colors.primary }}\r\n        inputStyle={{ color: theme.colors.text }}\r\n        placeholderTextColor={theme.colors.textSecondary}\r\n        inputContainerStyle={{ borderBottomColor: theme.colors.border }}\r\n      />\r\n      \r\n      <Input\r\n        placeholder=\"Genre\"\r\n        value={genre}\r\n        onChangeText={setGenre}\r\n        leftIcon={{ name: 'tag', type: 'feather', color: theme.colors.primary }}\r\n        inputStyle={{ color: theme.colors.text }}\r\n        placeholderTextColor={theme.colors.textSecondary}\r\n        inputContainerStyle={{ borderBottomColor: theme.colors.border }}\r\n      />\r\n      \r\n      <Input\r\n        placeholder=\"Release Year\"\r\n        value={releaseYear}\r\n        onChangeText={setReleaseYear}\r\n        keyboardType=\"numeric\"\r\n        leftIcon={{ name: 'calendar', type: 'feather', color: theme.colors.primary }}\r\n        inputStyle={{ color: theme.colors.text }}\r\n        placeholderTextColor={theme.colors.textSecondary}\r\n        inputContainerStyle={{ borderBottomColor: theme.colors.border }}\r\n      />\r\n      \r\n      <Input\r\n        placeholder=\"Subscription Plan\"\r\n        value={subscriptionPlan}\r\n        onChangeText={setSubscriptionPlan}\r\n        leftIcon={{ name: 'credit-card', type: 'feather', color: theme.colors.primary }}\r\n        inputStyle={{ color: theme.colors.text }}\r\n        placeholderTextColor={theme.colors.textSecondary}\r\n        inputContainerStyle={{ borderBottomColor: theme.colors.border }}\r\n      />\r\n      \r\n      <CheckBox\r\n        title=\"Featured Series\"\r\n        checked={isFeatured}\r\n        onPress={() => setIsFeatured(!isFeatured)}\r\n        containerStyle={[styles.checkboxContainer, { backgroundColor: 'transparent' }]}\r\n        textStyle={{ color: theme.colors.text }}\r\n        checkedColor={theme.colors.primary}\r\n        uncheckedColor={theme.colors.textSecondary}\r\n      />\r\n      \r\n      <Button\r\n        icon={<Icon name=\"image\" type=\"feather\" color=\"#FFFFFF\" style={{ marginRight: 8 }} />}\r\n        title={thumbnail ? 'Change Thumbnail' : 'Pick Thumbnail'}\r\n        onPress={pickThumbnail}\r\n        containerStyle={styles.button}\r\n        buttonStyle={{ backgroundColor: theme.colors.primary }}\r\n        titleStyle={{ color: '#FFFFFF' }}\r\n        raised\r\n      />\r\n      \r\n      {thumbnail && (\r\n        <View style={styles.imageContainer}>\r\n          <Image source={{ uri: thumbnail }} style={styles.preview} />\r\n        </View>\r\n      )}\r\n      \r\n      <Button\r\n        icon={<Icon name=\"image\" type=\"feather\" color=\"#FFFFFF\" style={{ marginRight: 8 }} />}\r\n        title={banner ? 'Change Banner' : 'Pick Banner'}\r\n        onPress={pickBanner}\r\n        containerStyle={styles.button}\r\n        buttonStyle={{ backgroundColor: theme.colors.secondary }}\r\n        titleStyle={{ color: '#FFFFFF' }}\r\n        raised\r\n      />\r\n      \r\n      {banner && (\r\n        <View style={styles.imageContainer}>\r\n          <Image source={{ uri: banner }} style={styles.previewBanner} />\r\n        </View>\r\n      )}\r\n      \r\n      <View style={styles.actionButtons}>\r\n        <Button\r\n          title=\"Cancel\"\r\n          type=\"outline\"\r\n          onPress={() => navigation.goBack()}\r\n          containerStyle={[styles.button, styles.cancelButton]}\r\n          buttonStyle={{ borderColor: theme.colors.error }}\r\n          titleStyle={{ color: theme.colors.error }}\r\n          icon={<Icon name=\"x\" type=\"feather\" color={theme.colors.error} style={{ marginRight: 8 }} />}\r\n        />\r\n        \r\n        <Button\r\n          title={uploading ? 'Saving...' : 'Save Series'}\r\n          onPress={handleSave}\r\n          disabled={uploading}\r\n          containerStyle={[styles.button, styles.saveButton]}\r\n          buttonStyle={{ backgroundColor: theme.colors.accent }}\r\n          disabledStyle={{ backgroundColor: theme.colors.inactive }}\r\n          titleStyle={{ color: '#FFFFFF', fontWeight: 'bold' }}\r\n          icon={<Icon name=\"save\" type=\"feather\" color=\"#FFFFFF\" style={{ marginRight: 8 }} />}\r\n          raised\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: baseTheme.spacing.large,\r\n    minHeight: '100%',\r\n  },\r\n  header: {\r\n    marginBottom: baseTheme.spacing.large,\r\n    alignSelf: 'center',\r\n    fontSize: 26,\r\n  },\r\n  button: {\r\n    marginVertical: baseTheme.spacing.medium,\r\n    borderRadius: baseTheme.borderRadius.medium,\r\n    overflow: 'hidden',\r\n  },\r\n  checkboxContainer: {\r\n    borderWidth: 0,\r\n    marginLeft: 0,\r\n    marginBottom: baseTheme.spacing.medium,\r\n  },\r\n  imageContainer: {\r\n    borderWidth: 1,\r\n    borderColor: baseTheme.colors.border,\r\n    borderRadius: baseTheme.borderRadius.medium,\r\n    overflow: 'hidden',\r\n    marginBottom: baseTheme.spacing.medium,\r\n  },\r\n  preview: {\r\n    width: '100%',\r\n    height: 200,\r\n    resizeMode: 'cover',\r\n  },\r\n  previewBanner: {\r\n    width: '100%',\r\n    height: 120,\r\n    resizeMode: 'cover',\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: baseTheme.spacing.medium,\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: baseTheme.spacing.small,\r\n  },\r\n  saveButton: {\r\n    flex: 2,\r\n    marginLeft: baseTheme.spacing.small,\r\n  },\r\n});\r\n\r\nconst SeriesAddScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <SeriesAddScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default SeriesAddScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}