{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport Constants from 'expo-constants';\nvar auth = null;\nvar db = null;\nvar getExpoConfig = function getExpoConfig() {\n  if (Constants.expoConfig) {\n    return Constants.expoConfig;\n  }\n  return Constants.manifest;\n};\ntry {\n  var expoConfig = getExpoConfig();\n  var env = (expoConfig == null ? void 0 : expoConfig.extra) || {};\n  console.log('Raw Firebase Config Values:', {\n    apiKey: env.FIREBASE_API_KEY,\n    authDomain: env.FIREBASE_AUTH_DOMAIN,\n    projectId: env.FIREBASE_PROJECT_ID,\n    appId: env.FIREBASE_APP_ID\n  });\n  var firebaseConfig = {\n    apiKey: env.FIREBASE_API_KEY,\n    authDomain: env.FIREBASE_AUTH_DOMAIN,\n    projectId: env.FIREBASE_PROJECT_ID,\n    storageBucket: env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: env.FIREBASE_APP_ID\n  };\n  console.log('Firebase config:', {\n    apiKeyExists: Boolean(firebaseConfig.apiKey),\n    authDomainExists: Boolean(firebaseConfig.authDomain),\n    projectIdExists: Boolean(firebaseConfig.projectId),\n    appIdExists: Boolean(firebaseConfig.appId)\n  });\n  if (firebaseConfig.apiKey && firebaseConfig.projectId && firebaseConfig.appId) {\n    var firebaseApp = initializeApp(firebaseConfig);\n    auth = getAuth(firebaseApp);\n    db = getFirestore(firebaseApp);\n    console.log('✅ Firebase initialized successfully');\n  } else {\n    console.error('❌ Missing required Firebase configuration. Using mock Firebase client.');\n    console.error('Please make sure app.json contains valid Firebase configuration in the \"extra\" section.');\n    auth = {\n      currentUser: null,\n      onAuthStateChanged: function onAuthStateChanged(callback) {\n        callback(null);\n        return function () {};\n      },\n      signInWithEmailAndPassword: function signInWithEmailAndPassword() {\n        return Promise.reject(new Error('Firebase not initialized'));\n      },\n      createUserWithEmailAndPassword: function createUserWithEmailAndPassword() {\n        return Promise.reject(new Error('Firebase not initialized'));\n      },\n      signOut: function signOut() {\n        return Promise.resolve();\n      }\n    };\n    db = {\n      collection: function collection() {\n        return {\n          doc: function doc() {\n            return {\n              get: function () {\n                var _get = _asyncToGenerator(function* () {\n                  return {\n                    exists: function exists() {\n                      return false;\n                    },\n                    data: function data() {\n                      return {};\n                    }\n                  };\n                });\n                function get() {\n                  return _get.apply(this, arguments);\n                }\n                return get;\n              }(),\n              set: function () {\n                var _set = _asyncToGenerator(function* () {});\n                function set() {\n                  return _set.apply(this, arguments);\n                }\n                return set;\n              }(),\n              update: function () {\n                var _update = _asyncToGenerator(function* () {});\n                function update() {\n                  return _update.apply(this, arguments);\n                }\n                return update;\n              }(),\n              delete: function () {\n                var _delete2 = _asyncToGenerator(function* () {});\n                function _delete() {\n                  return _delete2.apply(this, arguments);\n                }\n                return _delete;\n              }()\n            };\n          },\n          get: function () {\n            var _get2 = _asyncToGenerator(function* () {\n              return {\n                docs: []\n              };\n            });\n            function get() {\n              return _get2.apply(this, arguments);\n            }\n            return get;\n          }(),\n          add: function () {\n            var _add = _asyncToGenerator(function* () {\n              return {\n                id: 'mock-id'\n              };\n            });\n            function add() {\n              return _add.apply(this, arguments);\n            }\n            return add;\n          }()\n        };\n      }\n    };\n  }\n} catch (error) {\n  console.error('Firebase initialization error:', error);\n  auth = {\n    currentUser: null,\n    onAuthStateChanged: function onAuthStateChanged(callback) {\n      callback(null);\n      return function () {};\n    },\n    signInWithEmailAndPassword: function signInWithEmailAndPassword() {\n      return Promise.reject(error);\n    },\n    createUserWithEmailAndPassword: function createUserWithEmailAndPassword() {\n      return Promise.reject(error);\n    },\n    signOut: function signOut() {\n      return Promise.resolve();\n    }\n  };\n  db = {\n    collection: function collection() {\n      return {\n        doc: function doc() {\n          return {\n            get: function () {\n              var _get3 = _asyncToGenerator(function* () {\n                return {\n                  exists: function exists() {\n                    return false;\n                  },\n                  data: function data() {\n                    return {};\n                  }\n                };\n              });\n              function get() {\n                return _get3.apply(this, arguments);\n              }\n              return get;\n            }(),\n            set: function () {\n              var _set2 = _asyncToGenerator(function* () {});\n              function set() {\n                return _set2.apply(this, arguments);\n              }\n              return set;\n            }(),\n            update: function () {\n              var _update2 = _asyncToGenerator(function* () {});\n              function update() {\n                return _update2.apply(this, arguments);\n              }\n              return update;\n            }(),\n            delete: function () {\n              var _delete3 = _asyncToGenerator(function* () {});\n              function _delete() {\n                return _delete3.apply(this, arguments);\n              }\n              return _delete;\n            }()\n          };\n        },\n        get: function () {\n          var _get4 = _asyncToGenerator(function* () {\n            return {\n              docs: []\n            };\n          });\n          function get() {\n            return _get4.apply(this, arguments);\n          }\n          return get;\n        }(),\n        add: function () {\n          var _add2 = _asyncToGenerator(function* () {\n            return {\n              id: 'mock-id'\n            };\n          });\n          function add() {\n            return _add2.apply(this, arguments);\n          }\n          return add;\n        }()\n      };\n    }\n  };\n}\nexport { auth, db };","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","Constants","auth","db","getExpoConfig","expoConfig","manifest","env","extra","console","log","apiKey","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","projectId","FIREBASE_PROJECT_ID","appId","FIREBASE_APP_ID","firebaseConfig","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","apiKeyExists","Boolean","authDomainExists","projectIdExists","appIdExists","firebaseApp","error","currentUser","onAuthStateChanged","callback","signInWithEmailAndPassword","Promise","reject","Error","createUserWithEmailAndPassword","signOut","resolve","collection","doc","get","_get","_asyncToGenerator","exists","data","apply","arguments","set","_set","update","_update","delete","_delete2","_get2","docs","add","_add","id","_get3","_set2","_update2","_delete3","_get4","_add2"],"sources":["E:/bigshow/src/lib/firebaseClient.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport Constants from 'expo-constants';\r\n\r\n// Firebase client-side configuration with better error handling\r\nlet auth = null;\r\nlet db = null;\r\n\r\n// Get proper config based on Expo SDK version\r\nconst getExpoConfig = () => {\r\n  // For Expo SDK 46 and above\r\n  if (Constants.expoConfig) {\r\n    return Constants.expoConfig;\r\n  }\r\n  \r\n  // For Expo SDK 45 and below\r\n  return Constants.manifest;\r\n};\r\n\r\ntry {\r\n  // Get configuration from app.json extras\r\n  const expoConfig = getExpoConfig();\r\n  const env = expoConfig?.extra || {};\r\n  \r\n  // For debugging - log out the full config values\r\n  console.log('Raw Firebase Config Values:', {\r\n    apiKey: env.FIREBASE_API_KEY,\r\n    authDomain: env.FIREBASE_AUTH_DOMAIN,\r\n    projectId: env.FIREBASE_PROJECT_ID, \r\n    appId: env.FIREBASE_APP_ID\r\n  });\r\n  \r\n  const firebaseConfig = {\r\n    apiKey: env.FIREBASE_API_KEY,\r\n    authDomain: env.FIREBASE_AUTH_DOMAIN,\r\n    projectId: env.FIREBASE_PROJECT_ID,\r\n    storageBucket: env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: env.FIREBASE_APP_ID,\r\n  };\r\n  \r\n  console.log('Firebase config:', {\r\n    apiKeyExists: Boolean(firebaseConfig.apiKey),\r\n    authDomainExists: Boolean(firebaseConfig.authDomain),\r\n    projectIdExists: Boolean(firebaseConfig.projectId),\r\n    appIdExists: Boolean(firebaseConfig.appId),\r\n  });\r\n  \r\n  // Only initialize if we have the minimum required config\r\n  if (firebaseConfig.apiKey && firebaseConfig.projectId && firebaseConfig.appId) {\r\n    // Initialize Firebase\r\n    const firebaseApp = initializeApp(firebaseConfig);\r\n    \r\n    // Initialize Firebase Auth\r\n    auth = getAuth(firebaseApp);\r\n    \r\n    // Initialize Firestore database\r\n    db = getFirestore(firebaseApp);\r\n    \r\n    console.log('✅ Firebase initialized successfully');\r\n  } else {\r\n    console.error('❌ Missing required Firebase configuration. Using mock Firebase client.');\r\n    console.error('Please make sure app.json contains valid Firebase configuration in the \"extra\" section.');\r\n    \r\n    // Create mock implementations\r\n    auth = {\r\n      currentUser: null,\r\n      onAuthStateChanged: (callback) => {\r\n        callback(null);\r\n        return () => {};\r\n      },\r\n      signInWithEmailAndPassword: () => Promise.reject(new Error('Firebase not initialized')),\r\n      createUserWithEmailAndPassword: () => Promise.reject(new Error('Firebase not initialized')),\r\n      signOut: () => Promise.resolve(),\r\n    };\r\n    \r\n    db = {\r\n      collection: () => ({\r\n        doc: () => ({\r\n          get: async () => ({ exists: () => false, data: () => ({}) }),\r\n          set: async () => {},\r\n          update: async () => {},\r\n          delete: async () => {},\r\n        }),\r\n        get: async () => ({ docs: [] }),\r\n        add: async () => ({ id: 'mock-id' }),\r\n      }),\r\n    };\r\n  }\r\n} catch (error) {\r\n  console.error('Firebase initialization error:', error);\r\n  \r\n  // Create mock implementations on error\r\n  auth = {\r\n    currentUser: null,\r\n    onAuthStateChanged: (callback) => {\r\n      callback(null);\r\n      return () => {};\r\n    },\r\n    signInWithEmailAndPassword: () => Promise.reject(error),\r\n    createUserWithEmailAndPassword: () => Promise.reject(error),\r\n    signOut: () => Promise.resolve(),\r\n  };\r\n  \r\n  db = {\r\n    collection: () => ({\r\n      doc: () => ({\r\n        get: async () => ({ exists: () => false, data: () => ({}) }),\r\n        set: async () => {},\r\n        update: async () => {},\r\n        delete: async () => {},\r\n      }),\r\n      get: async () => ({ docs: [] }),\r\n      add: async () => ({ id: 'mock-id' }),\r\n    }),\r\n  };\r\n}\r\n\r\nexport { auth, db }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}