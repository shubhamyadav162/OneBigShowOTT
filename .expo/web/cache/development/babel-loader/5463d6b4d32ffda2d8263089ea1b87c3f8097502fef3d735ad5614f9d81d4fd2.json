{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Input } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport theme from \"../../theme\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationsOverviewContent = function NotificationsOverviewContent(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  return _jsxs(View, {\n    style: styles.contentContainer,\n    children: [_jsxs(View, {\n      style: styles.headerRow,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Notifications\"\n      }), _jsx(Button, {\n        icon: _jsx(Ionicons, {\n          name: \"add-circle-outline\",\n          size: 20,\n          color: \"white\"\n        }),\n        title: \" New Notification\",\n        buttonStyle: styles.newButton,\n        onPress: function onPress() {\n          return navigation.navigate('NotificationWizard');\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.filterRow,\n      children: _jsx(Input, {\n        placeholder: \"Search by title, ID...\",\n        leftIcon: {\n          type: 'ionicon',\n          name: 'search'\n        },\n        containerStyle: styles.searchContainer,\n        value: search,\n        onChangeText: setSearch\n      })\n    }), _jsx(View, {\n      style: styles.placeholder,\n      children: _jsx(Text, {\n        style: styles.placeholderText,\n        children: \"Notification list will appear here.\"\n      })\n    })]\n  });\n};\nvar NotificationsOverviewScreen = function NotificationsOverviewScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState3 = useState('publishing'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeSection = _useState4[0],\n    setActiveSection = _useState4[1];\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    currentTheme = _useTheme.theme;\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: currentTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: activeSection,\n        onSectionChange: setActiveSection\n      }), _jsx(NotificationsOverviewContent, {\n        navigation: navigation\n      })]\n    })]\n  });\n};\nvar NotificationsOverviewScreenWithTheme = function NotificationsOverviewScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(NotificationsOverviewScreen, _objectSpread({}, props))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%'\n  },\n  body: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    padding: theme.spacing.large\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.medium\n  },\n  title: {\n    fontSize: theme.typography.fontSize.xlarge,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text\n  },\n  newButton: {\n    backgroundColor: theme.colors.primary\n  },\n  filterRow: {\n    flexDirection: 'row',\n    marginBottom: theme.spacing.medium\n  },\n  searchContainer: {\n    flex: 1\n  },\n  placeholder: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  placeholderText: {\n    color: theme.colors.textSecondary\n  }\n});\nexport default NotificationsOverviewScreenWithTheme;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Button","Input","Ionicons","theme","Sidebar","HeaderBar","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","NotificationsOverviewContent","_ref","navigation","_useState","_useState2","_slicedToArray","search","setSearch","style","styles","contentContainer","children","headerRow","title","icon","name","size","color","buttonStyle","newButton","onPress","navigate","filterRow","placeholder","leftIcon","type","containerStyle","searchContainer","value","onChangeText","placeholderText","NotificationsOverviewScreen","_ref2","_useState3","_useState4","activeSection","setActiveSection","_useTheme","isDarkMode","toggleTheme","currentTheme","container","backgroundColor","colors","background","onToggleTheme","body","onSectionChange","NotificationsOverviewScreenWithTheme","props","_objectSpread","create","flex","height","flexDirection","padding","spacing","large","justifyContent","alignItems","marginBottom","medium","fontSize","typography","xlarge","fontWeight","bold","text","primary","textSecondary"],"sources":["E:/bigshow/src/screens/admin/NotificationsOverviewScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Button, Input } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport theme from '../../theme';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\n\r\nconst NotificationsOverviewContent = ({ navigation }) => {\r\n  const [search, setSearch] = useState('');\r\n  // TODO: implement data fetch and filters\r\n\r\n  return (\r\n    <View style={styles.contentContainer}>\r\n      <View style={styles.headerRow}>\r\n        <Text style={styles.title}>Notifications</Text>\r\n        <Button\r\n          icon={<Ionicons name=\"add-circle-outline\" size={20} color=\"white\" />}\r\n          title=\" New Notification\"\r\n          buttonStyle={styles.newButton}\r\n          onPress={() => navigation.navigate('NotificationWizard')}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.filterRow}>\r\n        <Input\r\n          placeholder=\"Search by title, ID...\"\r\n          leftIcon={{ type: 'ionicon', name: 'search' }}\r\n          containerStyle={styles.searchContainer}\r\n          value={search}\r\n          onChangeText={setSearch}\r\n        />\r\n        {/* TODO: Add filters (status, type, audience) and date range picker here */}\r\n      </View>\r\n\r\n      {/* TODO: Bulk action toolbar and data table go here */}\r\n      <View style={styles.placeholder}>\r\n        <Text style={styles.placeholderText}>Notification list will appear here.</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst NotificationsOverviewScreen = ({ navigation }) => {\r\n  const [activeSection, setActiveSection] = useState('publishing');\r\n  const { isDarkMode, toggleTheme, theme: currentTheme } = useTheme();\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: currentTheme.colors.background }]}> \r\n      <HeaderBar onToggleTheme={toggleTheme} isDarkMode={isDarkMode} />\r\n      <View style={styles.body}>\r\n        <Sidebar navigation={navigation} activeSection={activeSection} onSectionChange={setActiveSection} />\r\n        <NotificationsOverviewContent navigation={navigation} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst NotificationsOverviewScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <NotificationsOverviewScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, height: '100%' },\r\n  body: { flex: 1, flexDirection: 'row' },\r\n  contentContainer: { flex: 1, padding: theme.spacing.large },\r\n  headerRow: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing.medium },\r\n  title: { fontSize: theme.typography.fontSize.xlarge, fontWeight: theme.typography.fontWeight.bold, color: theme.colors.text },\r\n  newButton: { backgroundColor: theme.colors.primary },\r\n  filterRow: { flexDirection: 'row', marginBottom: theme.spacing.medium },\r\n  searchContainer: { flex: 1 },\r\n  placeholder: { flex: 1, alignItems: 'center', justifyContent: 'center' },\r\n  placeholderText: { color: theme.colors.textSecondary },\r\n});\r\n\r\nexport default NotificationsOverviewScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}