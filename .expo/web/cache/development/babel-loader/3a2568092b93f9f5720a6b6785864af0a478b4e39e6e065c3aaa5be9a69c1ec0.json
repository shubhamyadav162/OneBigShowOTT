{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Button, Card } from 'react-native-elements';\nimport theme from \"../../theme\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport HeaderBar from \"../../components/common/HeaderBar\";\nimport { ThemeProvider, useTheme } from \"../../components/common/ThemeProvider\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationTemplatesScreen = function NotificationTemplatesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    templates = _useState2[0],\n    setTemplates = _useState2[1];\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    currentTheme = _useTheme.theme;\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: currentTheme.colors.background\n    }],\n    children: [_jsx(HeaderBar, {\n      onToggleTheme: toggleTheme,\n      isDarkMode: isDarkMode\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Sidebar, {\n        navigation: navigation,\n        activeSection: \"publishing\"\n      }), _jsxs(ScrollView, {\n        contentContainerStyle: styles.contentContainer,\n        children: [_jsxs(View, {\n          style: styles.headerRow,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Notification Templates\"\n          }), _jsx(Button, {\n            title: \"New Template\",\n            type: \"outline\",\n            onPress: function onPress() {\n              return navigation.navigate('NotificationWizard');\n            }\n          })]\n        }), templates.map(function (tpl, idx) {\n          return _jsxs(Card, {\n            containerStyle: styles.card,\n            children: [_jsx(Text, {\n              style: styles.templateTitle,\n              children: tpl.title || 'Template Title'\n            }), _jsxs(View, {\n              style: styles.actionsRow,\n              children: [_jsx(Button, {\n                title: \"Apply\",\n                onPress: function onPress() {}\n              }), _jsx(Button, {\n                title: \"Edit\",\n                type: \"outline\",\n                onPress: function onPress() {}\n              }), _jsx(Button, {\n                title: \"Delete\",\n                type: \"clear\",\n                onPress: function onPress() {}\n              })]\n            })]\n          }, idx);\n        }), templates.length === 0 && _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No templates available.\"\n        })]\n      })]\n    })]\n  });\n};\nvar NotificationTemplatesScreenWithTheme = function NotificationTemplatesScreenWithTheme(props) {\n  return _jsx(ThemeProvider, {\n    children: _jsx(NotificationTemplatesScreen, _objectSpread({}, props))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100%'\n  },\n  body: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  contentContainer: {\n    flex: 1,\n    padding: theme.spacing.large\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.medium\n  },\n  title: {\n    fontSize: theme.typography.fontSize.xlarge,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text\n  },\n  card: {\n    marginBottom: theme.spacing.medium\n  },\n  templateTitle: {\n    fontSize: theme.typography.fontSize.large,\n    fontWeight: theme.typography.fontWeight.bold,\n    marginBottom: theme.spacing.small,\n    color: theme.colors.text\n  },\n  actionsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: theme.spacing.large,\n    color: theme.colors.textSecondary\n  }\n});\nexport default NotificationTemplatesScreenWithTheme;","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","Text","Button","Card","theme","Sidebar","HeaderBar","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","NotificationTemplatesScreen","_ref","navigation","_useState","_useState2","_slicedToArray","templates","setTemplates","_useTheme","isDarkMode","toggleTheme","currentTheme","style","styles","container","backgroundColor","colors","background","children","onToggleTheme","body","activeSection","contentContainerStyle","contentContainer","headerRow","title","type","onPress","navigate","map","tpl","idx","containerStyle","card","templateTitle","actionsRow","length","emptyText","NotificationTemplatesScreenWithTheme","props","_objectSpread","create","flex","height","flexDirection","padding","spacing","large","justifyContent","alignItems","marginBottom","medium","fontSize","typography","xlarge","fontWeight","bold","color","text","small","textAlign","marginTop","textSecondary"],"sources":["E:/bigshow/src/screens/admin/NotificationTemplatesScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Text, Button, Card } from 'react-native-elements';\r\nimport theme from '../../theme';\r\nimport Sidebar from '../../components/common/Sidebar';\r\nimport HeaderBar from '../../components/common/HeaderBar';\r\nimport { ThemeProvider, useTheme } from '../../components/common/ThemeProvider';\r\n\r\nconst NotificationTemplatesScreen = ({ navigation }) => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const { isDarkMode, toggleTheme, theme: currentTheme } = useTheme();\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: currentTheme.colors.background }]}> \r\n      <HeaderBar onToggleTheme={toggleTheme} isDarkMode={isDarkMode} />\r\n      <View style={styles.body}>\r\n        <Sidebar navigation={navigation} activeSection=\"publishing\" />\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n          <View style={styles.headerRow}>\r\n            <Text style={styles.title}>Notification Templates</Text>\r\n            <Button\r\n              title=\"New Template\"\r\n              type=\"outline\"\r\n              onPress={() => navigation.navigate('NotificationWizard')}\r\n            />\r\n          </View>\r\n          {templates.map((tpl, idx) => (\r\n            <Card key={idx} containerStyle={styles.card}>\r\n              <Text style={styles.templateTitle}>{tpl.title || 'Template Title'}</Text>\r\n              <View style={styles.actionsRow}>\r\n                <Button title=\"Apply\" onPress={() => {/* TODO */}} />\r\n                <Button title=\"Edit\" type=\"outline\" onPress={() => {/* TODO */}} />\r\n                <Button title=\"Delete\" type=\"clear\" onPress={() => {/* TODO */}} />\r\n              </View>\r\n            </Card>\r\n          ))}\r\n          {templates.length === 0 && <Text style={styles.emptyText}>No templates available.</Text>}\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst NotificationTemplatesScreenWithTheme = (props) => (\r\n  <ThemeProvider>\r\n    <NotificationTemplatesScreen {...props} />\r\n  </ThemeProvider>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, height: '100%' },\r\n  body: { flex: 1, flexDirection: 'row' },\r\n  contentContainer: { flex: 1, padding: theme.spacing.large },\r\n  headerRow: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: theme.spacing.medium },\r\n  title: { fontSize: theme.typography.fontSize.xlarge, fontWeight: theme.typography.fontWeight.bold, color: theme.colors.text },\r\n  card: { marginBottom: theme.spacing.medium },\r\n  templateTitle: { fontSize: theme.typography.fontSize.large, fontWeight: theme.typography.fontWeight.bold, marginBottom: theme.spacing.small, color: theme.colors.text },\r\n  actionsRow: { flexDirection: 'row', justifyContent: 'space-around' },\r\n  emptyText: { textAlign: 'center', marginTop: theme.spacing.large, color: theme.colors.textSecondary },\r\n});\r\n\r\nexport default NotificationTemplatesScreenWithTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}