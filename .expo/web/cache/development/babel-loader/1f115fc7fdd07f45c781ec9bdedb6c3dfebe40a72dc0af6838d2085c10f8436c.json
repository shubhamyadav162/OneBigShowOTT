{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Card, Button, Icon } from 'react-native-elements';\nimport theme from \"../../theme\";\nimport { db } from \"../../utils/firebase\";\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EpisodesScreen = function EpisodesScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var seriesId = route.params.seriesId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    episodes = _useState2[0],\n    setEpisodes = _useState2[1];\n  useEffect(function () {\n    var fetchEpisodes = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var q = query(collection(db, 'episodes'), where('seriesId', '==', seriesId));\n        var snap = yield getDocs(q);\n        setEpisodes(snap.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        }));\n      });\n      return function fetchEpisodes() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchEpisodes();\n  }, [seriesId]);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(Card, {\n      containerStyle: styles.card,\n      children: [item.thumbnailUrl && _jsx(Image, {\n        source: {\n          uri: item.thumbnailUrl\n        },\n        style: styles.thumbnail\n      }), _jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: item.title || 'Untitled Episode'\n        }), _jsx(Icon, {\n          name: \"edit\",\n          type: \"feather\",\n          color: theme.colors.accent,\n          onPress: function onPress() {\n            return navigation.navigate('EpisodeEdit', {\n              id: item.id\n            });\n          }\n        })]\n      }), _jsx(Text, {\n        style: styles.cardSubtitle,\n        children: item.description || 'No description'\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerRow,\n      children: [_jsx(Text, {\n        h4: true,\n        style: styles.header,\n        children: \"Episodes Management\"\n      }), _jsx(Icon, {\n        name: \"plus-circle\",\n        type: \"feather\",\n        color: theme.colors.success,\n        size: 28,\n        onPress: function onPress() {\n          return navigation.navigate('EpisodeAdd', {\n            seriesId: seriesId\n          });\n        }\n      })]\n    }), _jsx(FlatList, {\n      data: episodes,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: styles.list\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.large\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.large\n  },\n  header: {\n    color: theme.colors.text\n  },\n  list: {\n    paddingBottom: theme.spacing.large\n  },\n  card: _objectSpread(_objectSpread({\n    borderRadius: theme.borderRadius.medium,\n    backgroundColor: theme.colors.backgroundLight\n  }, theme.shadows.medium), {}, {\n    marginBottom: theme.spacing.large\n  }),\n  thumbnail: {\n    width: '100%',\n    height: 200,\n    borderRadius: theme.borderRadius.small,\n    marginBottom: theme.spacing.small\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small\n  },\n  cardTitle: {\n    fontSize: theme.typography.fontSize.large,\n    fontWeight: theme.typography.fontWeight.bold,\n    color: theme.colors.text\n  },\n  cardSubtitle: {\n    fontSize: theme.typography.fontSize.medium,\n    color: theme.colors.textSecondary,\n    marginBottom: theme.spacing.small\n  }\n});\nexport default EpisodesScreen;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","FlatList","Image","Text","Card","Button","Icon","theme","db","collection","getDocs","query","where","useNavigation","useRoute","jsx","_jsx","jsxs","_jsxs","EpisodesScreen","navigation","route","seriesId","params","_useState","_useState2","_slicedToArray","episodes","setEpisodes","fetchEpisodes","_ref","_asyncToGenerator","q","snap","docs","map","doc","_objectSpread","id","data","apply","arguments","renderItem","_ref2","item","containerStyle","styles","card","children","thumbnailUrl","source","uri","style","thumbnail","cardHeader","cardTitle","title","name","type","color","colors","accent","onPress","navigate","cardSubtitle","description","container","headerRow","h4","header","success","size","keyExtractor","contentContainerStyle","list","create","flex","backgroundColor","background","padding","spacing","large","flexDirection","justifyContent","alignItems","marginBottom","text","paddingBottom","borderRadius","medium","backgroundLight","shadows","width","height","small","fontSize","typography","fontWeight","bold","textSecondary"],"sources":["E:/bigshow/src/screens/admin/EpisodesScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet, FlatList, Image } from 'react-native';\r\nimport { Text, Card, Button, Icon } from 'react-native-elements';\r\nimport theme from '../../theme';\r\nimport { db } from '../../utils/firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nconst EpisodesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { seriesId } = route.params;\r\n  const [episodes, setEpisodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEpisodes = async () => {\r\n      const q = query(collection(db, 'episodes'), where('seriesId', '==', seriesId));\r\n      const snap = await getDocs(q);\r\n      setEpisodes(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n    };\r\n    fetchEpisodes();\r\n  }, [seriesId]);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Card containerStyle={styles.card}>\r\n      {item.thumbnailUrl && <Image source={{ uri: item.thumbnailUrl }} style={styles.thumbnail} />}\r\n      <View style={styles.cardHeader}>\r\n        <Text style={styles.cardTitle}>{item.title || 'Untitled Episode'}</Text>\r\n        <Icon name=\"edit\" type=\"feather\" color={theme.colors.accent} onPress={() => navigation.navigate('EpisodeEdit', { id: item.id })} />\r\n      </View>\r\n      <Text style={styles.cardSubtitle}>{item.description || 'No description'}</Text>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerRow}>\r\n        <Text h4 style={styles.header}>Episodes Management</Text>\r\n        <Icon\r\n          name=\"plus-circle\"\r\n          type=\"feather\"\r\n          color={theme.colors.success}\r\n          size={28}\r\n          onPress={() => navigation.navigate('EpisodeAdd', { seriesId })}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={episodes}\r\n        keyExtractor={item => item.id}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={styles.list}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    padding: theme.spacing.large,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  header: {\r\n    color: theme.colors.text,\r\n  },\r\n  list: {\r\n    paddingBottom: theme.spacing.large,\r\n  },\r\n  card: {\r\n    borderRadius: theme.borderRadius.medium,\r\n    backgroundColor: theme.colors.backgroundLight,\r\n    ...theme.shadows.medium,\r\n    marginBottom: theme.spacing.large,\r\n  },\r\n  thumbnail: {\r\n    width: '100%',\r\n    height: 200,\r\n    borderRadius: theme.borderRadius.small,\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n  cardTitle: {\r\n    fontSize: theme.typography.fontSize.large,\r\n    fontWeight: theme.typography.fontWeight.bold,\r\n    color: theme.colors.text,\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: theme.typography.fontSize.medium,\r\n    color: theme.colors.textSecondary,\r\n    marginBottom: theme.spacing.small,\r\n  },\r\n});\r\n\r\nexport default EpisodesScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}