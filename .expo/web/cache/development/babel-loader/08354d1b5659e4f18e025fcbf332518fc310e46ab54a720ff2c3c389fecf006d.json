{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useLocale } from '@react-navigation/native';\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerPositionContext } from \"../utils/DrawerPositionContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SPACING = 12;\nfunction DrawerContentScrollViewInner(_ref, ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeAreaInsets();\n  var _useLocale = useLocale(),\n    direction = _useLocale.direction;\n  var isRight = direction === 'rtl' ? drawerPosition === 'left' : drawerPosition === 'right';\n  return _jsx(ScrollView, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    contentContainerStyle: [{\n      paddingTop: SPACING + insets.top,\n      paddingBottom: SPACING + insets.bottom,\n      paddingStart: SPACING + (!isRight ? insets.left : 0),\n      paddingEnd: SPACING + (isRight ? insets.right : 0)\n    }, contentContainerStyle],\n    style: [styles.container, style],\n    children: children\n  }));\n}\nexport var DrawerContentScrollView = React.forwardRef(DrawerContentScrollViewInner);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useLocale","React","ScrollView","StyleSheet","useSafeAreaInsets","DrawerPositionContext","jsx","_jsx","SPACING","DrawerContentScrollViewInner","_ref","ref","contentContainerStyle","style","children","rest","_objectWithoutProperties","_excluded","drawerPosition","useContext","insets","_useLocale","direction","isRight","_objectSpread","paddingTop","top","paddingBottom","bottom","paddingStart","left","paddingEnd","right","styles","container","DrawerContentScrollView","forwardRef","create","flex"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerContentScrollView.tsx"],"sourcesContent":["import { useLocale } from '@react-navigation/native';\nimport * as React from 'react';\nimport { ScrollView, type ScrollViewProps, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { DrawerPositionContext } from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nconst SPACING = 12;\n\nfunction DrawerContentScrollViewInner(\n  { contentContainerStyle, style, children, ...rest }: Props,\n  ref?: React.Ref<ScrollView>\n) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeAreaInsets();\n  const { direction } = useLocale();\n\n  const isRight =\n    direction === 'rtl'\n      ? drawerPosition === 'left'\n      : drawerPosition === 'right';\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      contentContainerStyle={[\n        {\n          paddingTop: SPACING + insets.top,\n          paddingBottom: SPACING + insets.bottom,\n          paddingStart: SPACING + (!isRight ? insets.left : 0),\n          paddingEnd: SPACING + (isRight ? insets.right : 0),\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport const DrawerContentScrollView = React.forwardRef(\n  DrawerContentScrollViewInner\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE9B,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,SAASC,qBAAqB;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAMvE,IAAMC,OAAO,GAAG,EAAE;AAElB,SAASC,4BAA4BA,CAAAC,IAAA,EAEnCC,GAA2B,EAC3B;EAAA,IAFEC,qBAAqB,GAAAF,IAAA,CAArBE,qBAAqB;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAKC,IAAA,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EAG7C,IAAMC,cAAc,GAAGjB,KAAK,CAACkB,UAAU,CAACd,qBAAqB,CAAC;EAC9D,IAAMe,MAAM,GAAGhB,iBAAiB,CAAC,CAAC;EAClC,IAAAiB,UAAA,GAAsBrB,SAAS,CAAC,CAAC;IAAzBsB,SAAA,GAAAD,UAAA,CAAAC,SAAA;EAER,IAAMC,OAAO,GACXD,SAAS,KAAK,KAAK,GACfJ,cAAc,KAAK,MAAM,GACzBA,cAAc,KAAK,OAAO;EAEhC,OACEX,IAAA,CAACL,UAAU,EAAAsB,aAAA,CAAAA,aAAA,KACLT,IAAI;IACRJ,GAAG,EAAEA,GAAI;IACTC,qBAAqB,EAAE,CACrB;MACEa,UAAU,EAAEjB,OAAO,GAAGY,MAAM,CAACM,GAAG;MAChCC,aAAa,EAAEnB,OAAO,GAAGY,MAAM,CAACQ,MAAM;MACtCC,YAAY,EAAErB,OAAO,IAAI,CAACe,OAAO,GAAGH,MAAM,CAACU,IAAI,GAAG,CAAC,CAAC;MACpDC,UAAU,EAAEvB,OAAO,IAAIe,OAAO,GAAGH,MAAM,CAACY,KAAK,GAAG,CAAC;IACnD,CAAC,EACDpB,qBAAqB,CACrB;IACFC,KAAK,EAAE,CAACoB,MAAM,CAACC,SAAS,EAAErB,KAAK,CAAE;IAAAC,QAAA,EAEhCA;EAAA,EACS,CAAC;AAEjB;AAEA,OAAO,IAAMqB,uBAAuB,GAAGlC,KAAK,CAACmC,UAAU,CACrD3B,4BACF,CAAC;AAED,IAAMwB,MAAM,GAAG9B,UAAU,CAACkC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}