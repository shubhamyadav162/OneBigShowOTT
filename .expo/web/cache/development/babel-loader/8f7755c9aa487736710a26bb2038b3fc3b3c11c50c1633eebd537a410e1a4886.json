{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"defaultStatus\", \"backBehavior\", \"children\", \"layout\", \"screenListeners\", \"screenOptions\", \"screenLayout\", \"UNSTABLE_router\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createNavigatorFactory, DrawerRouter, useNavigationBuilder } from '@react-navigation/native';\nimport { DrawerView } from \"../views/DrawerView.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction DrawerNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    _ref$defaultStatus = _ref.defaultStatus,\n    defaultStatus = _ref$defaultStatus === void 0 ? 'closed' : _ref$defaultStatus,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    layout = _ref.layout,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    screenLayout = _ref.screenLayout,\n    UNSTABLE_router = _ref.UNSTABLE_router,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useNavigationBuilder = useNavigationBuilder(DrawerRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      defaultStatus: defaultStatus,\n      backBehavior: backBehavior,\n      children: children,\n      layout: layout,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      screenLayout: screenLayout,\n      UNSTABLE_router: UNSTABLE_router\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return _jsx(NavigationContent, {\n    children: _jsx(DrawerView, _objectSpread(_objectSpread({}, rest), {}, {\n      defaultStatus: defaultStatus,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation\n    }))\n  });\n}\nexport function createDrawerNavigator(config) {\n  return createNavigatorFactory(DrawerNavigator)(config);\n}","map":{"version":3,"names":["createNavigatorFactory","DrawerRouter","useNavigationBuilder","DrawerView","jsx","_jsx","DrawerNavigator","_ref","id","initialRouteName","_ref$defaultStatus","defaultStatus","backBehavior","children","layout","screenListeners","screenOptions","screenLayout","UNSTABLE_router","rest","_objectWithoutProperties","_excluded","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","_objectSpread","createDrawerNavigator","config"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\drawer\\src\\navigators\\createDrawerNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type DrawerActionHelpers,\n  type DrawerNavigationState,\n  DrawerRouter,\n  type DrawerRouterOptions,\n  type NavigatorTypeBagBase,\n  type ParamListBase,\n  type StaticConfig,\n  type TypedNavigator,\n  useNavigationBuilder,\n} from '@react-navigation/native';\n\nimport type {\n  DrawerNavigationEventMap,\n  DrawerNavigationOptions,\n  DrawerNavigationProp,\n  DrawerNavigatorProps,\n} from '../types';\nimport { DrawerView } from '../views/DrawerView';\n\nfunction DrawerNavigator({\n  id,\n  initialRouteName,\n  defaultStatus = 'closed',\n  backBehavior,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  screenLayout,\n  UNSTABLE_router,\n  ...rest\n}: DrawerNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      DrawerNavigationState<ParamListBase>,\n      DrawerRouterOptions,\n      DrawerActionHelpers<ParamListBase>,\n      DrawerNavigationOptions,\n      DrawerNavigationEventMap\n    >(DrawerRouter, {\n      id,\n      initialRouteName,\n      defaultStatus,\n      backBehavior,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_router,\n    });\n\n  return (\n    <NavigationContent>\n      <DrawerView\n        {...rest}\n        defaultStatus={defaultStatus}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport function createDrawerNavigator<\n  const ParamList extends ParamListBase,\n  const NavigatorID extends string | undefined = undefined,\n  const TypeBag extends NavigatorTypeBagBase = {\n    ParamList: ParamList;\n    NavigatorID: NavigatorID;\n    State: DrawerNavigationState<ParamList>;\n    ScreenOptions: DrawerNavigationOptions;\n    EventMap: DrawerNavigationEventMap;\n    NavigationList: {\n      [RouteName in keyof ParamList]: DrawerNavigationProp<\n        ParamList,\n        RouteName,\n        NavigatorID\n      >;\n    };\n    Navigator: typeof DrawerNavigator;\n  },\n  const Config extends StaticConfig<TypeBag> = StaticConfig<TypeBag>,\n>(config?: Config): TypedNavigator<TypeBag, Config> {\n  return createNavigatorFactory(DrawerNavigator)(config);\n}\n"],"mappings":";;;;;;;AAAA,SACEA,sBAAsB,EAGtBC,YAAY,EAMZC,oBAAoB,QACf,0BAA0B;AAQjC,SAASC,UAAU;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAEjD,SAASC,eAAeA,CAAAC,IAAA,EAYC;EAAA,IAXvBC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IACFC,gBAAgB,GAAAF,IAAA,CAAhBE,gBAAgB;IAAAC,kBAAA,GAAAH,IAAA,CAChBI,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,QAAQ,GAAAA,kBAAA;IACxBE,YAAY,GAAAL,IAAA,CAAZK,YAAY;IACZC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;IACRC,MAAM,GAAAP,IAAA,CAANO,MAAM;IACNC,eAAe,GAAAR,IAAA,CAAfQ,eAAe;IACfC,aAAa,GAAAT,IAAA,CAAbS,aAAa;IACbC,YAAY,GAAAV,IAAA,CAAZU,YAAY;IACZC,eAAe,GAAAX,IAAA,CAAfW,eAAe;IACZC,IAAA,GAAAC,wBAAA,CAAAb,IAAA,EAAAc,SAAA;EAEH,IAAAC,qBAAA,GACEpB,oBAAoB,CAMlBD,YAAY,EAAE;MACdO,EAAE,EAAFA,EAAE;MACFC,gBAAgB,EAAhBA,gBAAgB;MAChBE,aAAa,EAAbA,aAAa;MACbC,YAAY,EAAZA,YAAY;MACZC,QAAQ,EAARA,QAAQ;MACRC,MAAM,EAANA,MAAM;MACNC,eAAe,EAAfA,eAAe;MACfC,aAAa,EAAbA,aAAa;MACbC,YAAY,EAAZA,YAAY;MACZC,eAAA,EAAAA;IACF,CAAC,CAAC;IAlBIK,KAAK,GAAAD,qBAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,qBAAA,CAAXE,WAAW;IAAEC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;IAAEC,iBAAA,GAAAJ,qBAAA,CAAAI,iBAAA;EAoBxC,OACErB,IAAA,CAACqB,iBAAiB;IAAAb,QAAA,EAChBR,IAAA,CAACF,UAAU,EAAAwB,aAAA,CAAAA,aAAA,KACLR,IAAI;MACRR,aAAa,EAAEA,aAAc;MAC7BY,KAAK,EAAEA,KAAM;MACbC,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA;IAAA,EACb;EAAC,CACe,CAAC;AAExB;AAEA,OAAO,SAASG,qBAAqBA,CAmBnCC,MAAe,EAAmC;EAClD,OAAO7B,sBAAsB,CAACM,eAAe,CAAC,CAACuB,MAAM,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}