{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nvar MISSING_CONTEXT_ERROR = \"Couldn't find an UnhandledLinkingContext context.\";\nexport var UnhandledLinkingContext = React.createContext({\n  get lastUnhandledLink() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setLastUnhandledLink() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  }\n});\nUnhandledLinkingContext.displayName = 'UnhandledLinkingContext';","map":{"version":3,"names":["React","MISSING_CONTEXT_ERROR","UnhandledLinkingContext","createContext","lastUnhandledLink","Error","setLastUnhandledLink","displayName"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\native\\src\\UnhandledLinkingContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find an UnhandledLinkingContext context.\";\n\nexport const UnhandledLinkingContext = React.createContext<{\n  lastUnhandledLink: string | undefined;\n  setLastUnhandledLink: (lastUnhandledUrl: string | undefined) => void;\n}>({\n  get lastUnhandledLink(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setLastUnhandledLink(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\nUnhandledLinkingContext.displayName = 'UnhandledLinkingContext';\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,IAAMC,qBAAqB,GACzB,mDAAmD;AAErD,OAAO,IAAMC,uBAAuB,GAAGF,KAAK,CAACG,aAAa,CAGvD;EACD,IAAIC,iBAAiBA,CAAA,EAAQ;IAC3B,MAAM,IAAIC,KAAK,CAACJ,qBAAqB,CAAC;EACxC,CAAC;EACD,IAAIK,oBAAoBA,CAAA,EAAQ;IAC9B,MAAM,IAAID,KAAK,CAACJ,qBAAqB,CAAC;EACxC;AACF,CAAC,CAAC;AAEFC,uBAAuB,CAACK,WAAW,GAAG,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}