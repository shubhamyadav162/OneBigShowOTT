{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useTheme } from '@react-navigation/native';\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Text(_ref) {\n  var style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors,\n    fonts = _useTheme.fonts;\n  return _jsx(NativeText, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [{\n      color: colors.text\n    }, fonts.regular, style]\n  }));\n}","map":{"version":3,"names":["useTheme","NativeText","jsx","_jsx","Text","_ref","style","rest","_objectWithoutProperties","_excluded","_useTheme","colors","fonts","_objectSpread","color","text","regular"],"sources":["E:\\bigshow\\node_modules\\@react-navigation\\drawer\\node_modules\\@react-navigation\\elements\\src\\Text.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\n// eslint-disable-next-line no-restricted-imports\nimport { Text as NativeText, type TextProps } from 'react-native';\n\nexport function Text({ style, ...rest }: TextProps) {\n  const { colors, fonts } = useTheme();\n\n  return (\n    <NativeText\n      {...rest}\n      style={[{ color: colors.text }, fonts.regular, style]}\n    />\n  );\n}\n"],"mappings":";;;;;;;AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AAAA,OAAAC,UAAA;AAEe,SAAAC,GAAA,IAAAC,IAAA;AAElE,OAAO,SAASC,IAAIA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAKC,IAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC/B,IAAAC,SAAA,GAA0BV,QAAQ,CAAC,CAAC;IAA5BW,MAAM,GAAAD,SAAA,CAANC,MAAM;IAAEC,KAAA,GAAAF,SAAA,CAAAE,KAAA;EAEhB,OACET,IAAA,CAACF,UAAU,EAAAY,aAAA,CAAAA,aAAA,KACLN,IAAI;IACRD,KAAK,EAAE,CAAC;MAAEQ,KAAK,EAAEH,MAAM,CAACI;IAAK,CAAC,EAAEH,KAAK,CAACI,OAAO,EAAEV,KAAK;EAAA,EACrD,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}